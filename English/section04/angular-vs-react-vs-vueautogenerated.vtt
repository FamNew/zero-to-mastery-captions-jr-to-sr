WEBVTT

00:01.320 --> 00:02.670
Welcome back.

00:02.670 --> 00:06.410
Now let's talk a little bit about state front end development.

00:06.450 --> 00:13.980
I'm sure you all have this question and you've definitely seen these three logos before angular react

00:14.310 --> 00:14.710
and view.

00:14.820 --> 00:15.960
Yes.

00:16.110 --> 00:21.880
These are the top three frameworks and libraries to build your front end applications today.

00:23.530 --> 00:31.990
All of them with the goal of managing large applications on the front end that have a lot of javascript.

00:31.990 --> 00:33.610
See the files over here.

00:33.820 --> 00:38.270
They need to manage the and they were built to solve that problem.

00:39.100 --> 00:47.980
For companies to be able to hire developers and make sure that these developers can work with many many

00:47.980 --> 00:50.230
lines of code in a nice clean way.

00:51.850 --> 00:57.850
Now there are plenty of articles out there comparing these tools so you can read that on your own.

00:58.660 --> 01:04.630
Because if there's one thing certain in the javascript community is that there is no shortage of these

01:04.630 --> 01:05.290
articles.

01:06.430 --> 01:14.380
However I do want to add one thing that a senior developer knows these libraries and frameworks are

01:14.380 --> 01:18.320
just tools and just like tools.

01:18.400 --> 01:23.260
Each one of them is perfect for its own specific use case.

01:24.170 --> 01:29.000
Now you'll always find people that say oh this library is the best.

01:29.000 --> 01:30.520
The other one sucks.

01:30.680 --> 01:32.140
You know I'm Team mangler.

01:32.140 --> 01:33.770
I'm team react.

01:33.770 --> 01:38.560
Or that they'll never ever build an app using this other library.

01:38.600 --> 01:45.140
This is not a good way of thinking and doing things especially when it comes to these three front end

01:45.140 --> 01:54.610
tools you see each one of them has pros and cons and a senior developer only cares about which tool

01:54.610 --> 01:56.870
is good for the job at hand.

01:58.130 --> 02:04.940
And I want to start thinking like this and avoid following a library like the answer to all the problems

02:04.940 --> 02:09.340
in the world that simply won't exist won't ever exist.

02:10.090 --> 02:13.840
There's never a tool that solves everything.

02:13.840 --> 02:23.100
Tools change libraries evolve and you may be a view yes expert now but in five years if things change

02:23.140 --> 02:26.680
and there is a different tool that's even better.

02:26.680 --> 02:29.020
You need to be able to adapt.

02:29.100 --> 02:31.960
So think of these as tools.

02:32.010 --> 02:39.150
Each one with its pros and cons and as a senior developer you'll be able to look at them and say this

02:39.150 --> 02:41.000
is good for this problem.

02:41.010 --> 02:48.000
This for the other end be able to pick tools accordingly currently though.

02:48.290 --> 02:49.980
If I was going to pick one of these.

02:50.090 --> 02:52.930
This is what I would do and this is my thinking process.

02:53.860 --> 03:00.430
If I was working for a large bank with massive codebase I'd pick angular.

03:00.680 --> 03:01.730
Why.

03:01.910 --> 03:07.750
Because angular is a framework which means it is an entire kitchen.

03:07.760 --> 03:11.760
They offer you and it's own way of doing things.

03:12.740 --> 03:20.060
It is opinionated in that it has specific ways of doing things so that if you have a lot of developers

03:20.210 --> 03:25.940
like a bank with a massive project you can be sure that everyone sticks to the rules.

03:25.940 --> 03:33.320
Everybody's working in the same kitchen with the same tools I would pick react if I work for a company

03:33.320 --> 03:41.030
with a strong developer team and that also needs to be flexible and evolve by adding different libraries

03:41.030 --> 03:43.250
and tools to the ecosystem.

03:44.080 --> 03:52.360
And I can trust developers to build on top of react with all these different tools something that works

03:52.360 --> 04:01.800
for our company something flexible would pick view if we want a simple way of writing code that is friendly

04:02.130 --> 04:03.680
it might be easier to pick up.

04:03.690 --> 04:13.130
If you hire a lot of junior developers Now these are just my opinions but you want to start thinking

04:13.130 --> 04:13.820
this way.

04:13.880 --> 04:15.860
Think in terms of pros and cons.

04:15.860 --> 04:20.450
Like I said and not absolutes where we say this is the best.

04:20.480 --> 04:21.850
This sucks.

04:21.920 --> 04:24.500
Senior developers don't do that.

04:24.500 --> 04:30.020
For now though you should know that re-act is a clear winner.

04:30.050 --> 04:31.680
You can see this graph over here.

04:31.700 --> 04:38.060
I know there's tons of graphs out there but in terms of job opportunities and why you can do with react

04:38.380 --> 04:42.650
it really really stands above all the others.

04:43.620 --> 04:51.310
And this might change over time but again it's good to not get really really excited about it.

04:51.480 --> 04:54.660
It's become really popular with the developer community.

04:54.660 --> 04:59.050
Perhaps maybe wait until it picks up and job demand.

04:59.270 --> 05:06.640
But again just something to keep in mind and look at the reason I teach react in this course is not

05:06.640 --> 05:10.350
because it has the biggest job market and potential for you.

05:10.540 --> 05:16.810
I mean that too that definitely helps and this was part of the consideration but it's mainly because

05:16.810 --> 05:24.160
it teaches you really good javascript principles that will last you a lifetime beyond just the library

05:24.160 --> 05:27.430
syntax with angular for example.

05:27.440 --> 05:32.990
This is hard to do and view is still young and growing.

05:33.050 --> 05:35.140
Anyway let's go back to this again.

05:36.110 --> 05:43.220
A good way of thinking about this is to think of angular like the kitchen an entire kitchen with all

05:43.220 --> 05:50.090
the tools you need to cook whatever you want and everybody works in the same kitchen.

05:50.130 --> 05:53.210
React is the oven.

05:53.450 --> 05:56.980
If we want to cook something yeah we'll use the oven.

05:56.990 --> 06:03.380
But we also need other tools and we'll need to use whichever tool that we want and added to be able

06:03.380 --> 06:03.850
to build it.

06:03.860 --> 06:10.900
But it allows us more flexibility and think of view as the microwave.

06:10.920 --> 06:16.870
It's super simple easy to pick up and a lot less complicated than an oven.

06:17.800 --> 06:23.380
So need to make sure everyone uses the same kitchen to cook use angular need to cook something but you

06:23.380 --> 06:29.920
also want to get a little flexible and creative maybe have some creative freedom use react and so on

06:29.920 --> 06:31.140
and so forth.

06:31.240 --> 06:33.410
I know it might be a silly example.

06:33.430 --> 06:34.680
I think it's pretty good.

06:34.780 --> 06:36.150
But again I'm biased.

06:36.250 --> 06:39.760
For now we're going to be using re-act.

06:39.800 --> 06:42.460
All right time to get started.

06:42.470 --> 06:43.460
I'll see you in the next video.
