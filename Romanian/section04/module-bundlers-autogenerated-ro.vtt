WEBVTT

00:00:01.460 --> 00:00:03.670
Bun venit înapoi OK.

00:00:03.830 --> 00:00:07.850
Așa că ne simțim destul de confortabil cu reacție și redux.

00:00:07.850 --> 00:00:13.130
Știm că sunt acolo pentru ca noi să putem folosi pentru a optimiza această parte corectă.

00:00:13.130 --> 00:00:21.830
Partea în care javascript trebuie să se adapteze în mod constant să utilizeze interacțiunile dvs. și vopseaua răzbunător și aspectul de lucru și

00:00:22.770 --> 00:00:25.010
astfel acest lucru are sens.

00:00:25.010 --> 00:00:31.790
Dar să vorbim puțin despre această parte în care avem o mulțime de fișiere Djoser și trebuie

00:00:31.790 --> 00:00:39.340
să le furnizăm clientului în browser pentru a putea face ca alte aplicații să devină mai mari și mai

00:00:39.340 --> 00:00:39.840
mari.

00:00:39.940 --> 00:00:45.430
Mai ales în cazul aplicațiilor cu o singură pagină, avem mai multe fișiere de îngrijire Java.

00:00:45.430 --> 00:00:52.780
Deci, avem nevoie de ceva numit Bandler ceva care să cuprindă toate aceste fișiere împreună, astfel încât, dacă

00:00:52.780 --> 00:01:00.670
vrem să le punem într-una sau să le împărțim, face asta atât de frumos, fără a fi nevoie să

00:01:00.670 --> 00:01:02.340
o facem manual.

00:01:02.410 --> 00:01:09.100
S-ar putea să vă amintiți în exercițiul de performanță Parwan atunci când am lucrat pe site-ul web Kaikohe și

00:01:09.100 --> 00:01:14.580
am trebuit manual să copiem și să lipim javascript-ul dintr-o bibliotecă în celălalt mini-ul.

00:01:14.800 --> 00:01:20.840
Și este o mulțime de lucrări manuale pe care nu doriți să le faceți, mai ales când aplicațiile noastre devin mai mari și mai mari.

00:01:20.950 --> 00:01:29.170
Deci lucrurile ca machetele sunt capabile să manipuleze și să combine chiar și națiunile CSSA mai multe fișiere într-una.

00:01:29.440 --> 00:01:33.790
Ei pot combina fișierele de îngrijire Java o parte urâtă care ar putea optimiza imaginile.

00:01:33.910 --> 00:01:42.870
Ei pot face o mulțime de lucruri foarte reci pentru a maximiza livrarea lui Arafat și până în acest moment.

00:01:43.160 --> 00:01:51.140
Am fost destul de norocosi pentru ca ati creat re-action tap a facut acest lucru pentru noi ori de cate ori am incepe NPM start sau

00:01:51.440 --> 00:01:57.030
NPM construit pentru a construi fisierele noastre de productie Cray reactioneaza sub capota foloseste ceva numit wetback pentru

00:01:57.620 --> 00:01:59.300
a face asta pentru noi.

00:02:00.580 --> 00:02:08.000
Pentru următoarele câteva videoclipuri vreau să vă prezint pachetul umed și gruparea pentru că, deși unelte cum ar fi crearea unui nou act

00:02:08.000 --> 00:02:11.030
de Abdou sunt o treabă foarte bună pentru noi.

00:02:11.060 --> 00:02:13.810
Încă vrem să știm cum funcționează lucrurile sub capotă.

00:02:15.100 --> 00:02:20.200
Iar când vine vorba de casa lui Bon Lake, există o mulțime de opțiuni.

00:02:20.920 --> 00:02:26.650
Chiar acum cel mai popular este wetback și tocmai au ieșit cu un pachet umed, dar acolo este

00:02:26.650 --> 00:02:32.300
un nou în sus și comer parsel și apoi roll up, care a fost întotdeauna popular.

00:02:32.440 --> 00:02:35.570
Acum toate acestea sunt Bandler.

00:02:35.650 --> 00:02:44.800
Așa au luat niște fișiere și au scuipat un fișier bazat pe unele optimizări, astfel încât să îl

00:02:44.800 --> 00:02:46.510
putem livra browserului.

00:02:46.930 --> 00:02:52.500
Acum, ce pachet este campionul domnitor și este cu siguranță un instrument bun.

00:02:52.500 --> 00:02:54.430
De aceea reacționează până o folosește.

00:02:54.430 --> 00:03:01.690
Dar parsel a iesit recent cu ideea de configurare zero, care este spre deosebire de geanta umeda care

00:03:01.690 --> 00:03:02.920
necesita mult configuratie.

00:03:02.920 --> 00:03:07.780
Trebuie să-i spunem fiecare detaliu al a ceea ce trebuie să facem la dosare și ceea ce avem nevoie de

00:03:08.140 --> 00:03:10.750
un parsel de ieșire spune că Hei e cam agitat.

00:03:10.750 --> 00:03:11.740
Asta e enervant.

00:03:11.740 --> 00:03:13.300
Dacă o să avem grijă de asta.

00:03:13.300 --> 00:03:17.090
Spune-ne ce fișiere vrei să puni aici și le vom scuipa pentru tine.

00:03:17.260 --> 00:03:18.900
Toate optimizate și gata pentru a merge.

00:03:19.700 --> 00:03:26.070
Și apoi roll up este, de asemenea, celebru pentru lucruri similare cu umed înapoi, dar într-adevăr foarte bun.

00:03:26.060 --> 00:03:31.850
Este ceva numit shaking copac, care evită orice cod pe care nu trebuie să-l folosim cu adevărat și aruncându-l

00:03:31.850 --> 00:03:33.710
înainte de a lega totul.

00:03:34.470 --> 00:03:41.050
Acum, în acest curs, vom vorbi puțin despre web-ul din spate și vom face un exercițiu minunat și o

00:03:41.050 --> 00:03:45.680
mică demonstrație despre parsel, dar am vrut să păstrez două lucruri în minte.

00:03:45.730 --> 00:03:47.110
Primul este practic.

00:03:47.110 --> 00:03:51.400
Atunci ar trebui să le folosesc bine.

00:03:51.580 --> 00:03:58.780
Ce pachet este modulul încercat și testat Bandler că, dacă aveți un proiect mare, probabil că

00:03:58.780 --> 00:03:59.860
utilizați umed.

00:03:59.860 --> 00:04:05.500
Și acest lucru este cel mai probabil stabilit la începutul proiectului de către cineva care este un lider de echipă sau

00:04:05.500 --> 00:04:06.600
un dezvoltator senior.

00:04:07.890 --> 00:04:10.110
Deci, utilizați-le pentru proiecte mari.

00:04:10.110 --> 00:04:15.950
Cel de-al doilea va folosi parsel dacă sunteți pe un proiect de unul singur sau este un mic proiect.

00:04:15.960 --> 00:04:18.030
Trebuie doar să te ridici și să mergi.

00:04:18.060 --> 00:04:22.920
Nu aveți nevoie să vă faceți griji prea mult despre fișierele de configurare, cum ar

00:04:22.920 --> 00:04:31.290
fi pachetul web, este foarte ușor de preluat și foarte ușor de învățat în cele din urmă utilizați roll-up atunci când vă lansați propriile pachete NPM.

00:04:32.160 --> 00:04:39.360
Cel de-al doilea punct și cel mai important aspect pe care îl consider este faptul că configurațiile și

00:04:39.360 --> 00:04:41.940
fișierele de configurare se modifică întotdeauna.

00:04:41.940 --> 00:04:49.740
Unul dintre animalele mele mari de companie este cât de mult timp ne dedicăm la ceva de genul wetback pentru a înțelege configurația sa și apoi o

00:04:49.980 --> 00:04:52.530
nouă versiune iese ca ceea ce înapoi pentru.

00:04:52.650 --> 00:04:53.910
Și lucrurile se schimbă.

00:04:54.740 --> 00:04:58.390
Când vine vorba de configurare și grupare suntem întotdeauna în evoluție.

00:04:58.430 --> 00:05:05.070
Lucrurile se îmbunătățesc întotdeauna și ceva ce am învățat acum doi ani nu s-ar putea aplica acum.

00:05:05.930 --> 00:05:07.690
Așa că ține minte.

00:05:07.820 --> 00:05:15.310
Nu treceți peste bord și citiți fiecare linie din documentația bine ambalată atunci când aveți o

00:05:15.320 --> 00:05:23.260
problemă când trebuie să creați o rețea de configurare care să vă configureze modulul de grupare bine.

00:05:23.400 --> 00:05:26.140
În acest moment ar trebui să știți ce face.

00:05:26.180 --> 00:05:31.760
Deci, puteți intra în documentație și le puteți citi în timp ce construiți fișierul config.

00:05:31.800 --> 00:05:36.900
Nu aveți nevoie să memorați fiecare lucru și de aceea sunt un fan mare de a

00:05:36.900 --> 00:05:44.930
folosi ceva de genul a crea reacție pentru a crea re-act app a fost dezvoltat de unele dintre cele mai inteligente minți în dezvoltarea web

00:05:44.940 --> 00:05:52.470
și ziua lor de lucru în fiecare zi pentru a face acest proiect de succes și la fel de optimizat și bine codat

00:05:52.470 --> 00:05:53.310
cât pot.

00:05:53.310 --> 00:05:59.680
Ei își petrec timpul cu normă întreagă, deci de ce să reinventăm roata.

00:05:59.810 --> 00:06:01.940
Creați reacția există deja.

00:06:01.950 --> 00:06:04.030
Utilizarea puterii lor le folosesc cunoștințele.

00:06:04.050 --> 00:06:10.620
Utilizați actualizările constante pe care le obțineți gratuit și dacă într-adevăr trebuie să aveți nevoie să optimizați.

00:06:10.620 --> 00:06:18.860
Puteți face întotdeauna ceva de genul NPM rulați un jet și creați racked sus, astfel încât să aveți acces la fișierul

00:06:18.870 --> 00:06:20.130
config bine ambalate.

00:06:20.130 --> 00:06:23.860
Dar țineți cont de aceste configurații mereu schimbați.

00:06:23.970 --> 00:06:27.880
Doar știți cum funcționează și înțelegeți de ce sunt utile.

00:06:28.290 --> 00:06:33.990
Dar nu vă petreceți tot timpul învățând cum să faceți un fișier de configurare.

00:06:34.020 --> 00:06:40.050
Timpul tau este mai bine invatat sa inveti cum sa codzi in mod corespunzator sa creezi mai putine bug-uri scrie mai bine teste

00:06:40.380 --> 00:06:43.930
Toate lucrurile despre care vom vorbi mai târziu în curs.

00:06:43.970 --> 00:06:45.490
Atât deocamdată.

00:06:45.530 --> 00:06:46.990
Voi vedea în următorul.

00:06:47.230 --> 00:06:47.480
Babai.