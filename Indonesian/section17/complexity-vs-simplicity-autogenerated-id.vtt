WEBVTT

00:00:01.110 --> 00:00:09.950
Mari kita bicara tentang kompleksitas versus kesederhanaan. Ini adalah sesuatu yang sangat penting yang tidak sering

00:00:09.950 --> 00:00:11.120
dibicarakan.

00:00:11.450 --> 00:00:17.390
Saya meninggalkan ini sampai akhir kursus karena Anda tidak akan benar-benar menghargai dan

00:00:17.450 --> 00:00:21.970
memahaminya kecuali Anda memiliki semua pengetahuan sebelumnya dari video.

00:00:22.010 --> 00:00:27.380
Dalam karir saya, saya telah bertemu banyak insinyur dan pemimpin pengembang yang hebat.

00:00:27.380 --> 00:00:31.620
Mereka memiliki banyak sifat yang hebat dan mereka semua adalah programmer yang hebat.

00:00:31.760 --> 00:00:38.730
Namun mereka memiliki satu kesamaan utama yang memisahkan mereka dari semua pengembang Iver lainnya.

00:00:38.900 --> 00:00:42.410
Dan saya bahkan tidak berpikir mereka menyadari mereka memilikinya.

00:00:42.690 --> 00:00:45.940
Ini sesuatu yang sangat sederhana sehingga sering diabaikan.

00:00:46.090 --> 00:00:50.650
Dan dalam video ini saya ingin membahas ini dan sesuatu yang saya benar-benar percaya dapat

00:00:51.550 --> 00:00:55.770
membantu Anda dalam karier Anda dan yang selalu memilih kesederhanaan daripada kompleksitas.

00:00:56.950 --> 00:01:02.230
Saya tahu itu pernyataan yang berani, tetapi ketika Anda maju melalui karier, Anda akan menemukan diri

00:01:02.440 --> 00:01:06.480
Anda belajar lebih dan lebih menjadi lebih dan lebih percaya diri.

00:01:06.670 --> 00:01:10.660
Anda mulai memahami topik ilmu komputer yang kompleks.

00:01:10.660 --> 00:01:17.180
Terkadang Anda akan mulai mengejek pengembang junior yang mengajukan pertanyaan konyol.

00:01:17.220 --> 00:01:18.950
Pertama tidak pernah melakukan itu.

00:01:19.170 --> 00:01:22.230
Anda dulu adalah pengembang junior itu.

00:01:22.230 --> 00:01:31.080
Begitu juga orang lain selalu menerima pertanyaan tetapi Anda pasti ingin memamerkan keterampilan Anda kadang-kadang Anda dapat mencoba dan

00:01:32.440 --> 00:01:37.680
membuat pilihan pengkodean yang membuat orang berkata wow dia sangat pintar.

00:01:37.690 --> 00:01:42.110
Atau saya tidak tahu apa yang baru saja mereka kutip tetapi terlihat sangat keren.

00:01:42.130 --> 00:01:43.540
Ini tidak bagus.

00:01:43.570 --> 00:01:50.560
Terlalu sering saya melihat pengembang memilih opsi kompleks atau gaya pengkodean agar tampak pintar dan mampu atau

00:01:51.340 --> 00:01:57.380
hanya menggunakan fungsi atau trik baru yang keren yang baru saja mereka pelajari.

00:01:57.390 --> 00:02:06.430
Sekarang rahasia yang digunakan oleh pengembang terbaik adalah mereka selalu memilih kesederhanaan daripada kompleksitas.

00:02:07.220 --> 00:02:12.020
Menulis kode bukanlah ukuran seberapa pintar Anda dan berapa banyak hal yang Anda ketahui.

00:02:12.020 --> 00:02:16.450
Menulis kode adalah tentang menciptakan sesuatu yang berkualitas baik.

00:02:16.450 --> 00:02:18.120
Apa yang saya maksud dengan itu.

00:02:18.260 --> 00:02:21.320
Kode yang baik adalah dokumentasi diri.

00:02:21.530 --> 00:02:27.990
Sangat mudah bagi orang baru untuk melihat kode Anda dan memahami apa fungsinya.

00:02:28.160 --> 00:02:32.920
Kode yang baik segera juga meminimalkan bug.

00:02:32.930 --> 00:02:38.630
Ini memungkinkan orang untuk tidak menambahkan bug di atasnya karena jelas dan ringkas.

00:02:38.630 --> 00:02:45.710
Kesederhanaan yang mudah dibaca dalam kode membuat kode Anda dapat dibaca seolah-olah Anda baru

00:02:45.710 --> 00:02:48.260
saja membaca manual bahasa Inggris.

00:02:48.330 --> 00:02:51.420
Tapi tunggu, terkadang Anda memang harus menulis kode yang rumit.

00:02:51.450 --> 00:02:58.710
Tidak setiap orang akan dapat memahami kode Anda dan itu benar tetapi kompleksitas dan

00:02:59.250 --> 00:03:02.410
kesederhanaan berada pada spektrum bukan biner.

00:03:02.430 --> 00:03:06.040
Itu tidak sederhana atau kompleks.

00:03:06.150 --> 00:03:08.100
Itu berarti itu tidak benar atau salah.

00:03:08.250 --> 00:03:09.440
Hitam dan putih.

00:03:09.630 --> 00:03:17.160
Ini semua tentang mencoba meminimalkan kompleksitas kode Anda sebanyak yang dapat Anda ingat meskipun kami menulis kode

00:03:17.160 --> 00:03:19.310
untuk berbicara dengan mesin.

00:03:19.530 --> 00:03:24.690
Mesin yang berfungsi untuk berkomunikasi dan membuat hidup kita lebih mudah.

00:03:24.690 --> 00:03:32.220
Jadi lain kali Anda menulis kode, tarik napas dalam-dalam, katakan pada diri sendiri apa yang bisa saya lakukan untuk membuat kode

00:03:32.550 --> 00:03:37.390
ini sederhana bagi siapa saja untuk memahami sambil tetap mempertahankan tujuan saya.

00:03:37.440 --> 00:03:38.940
Saya tidak perlu pamer.

00:03:38.950 --> 00:03:41.620
Saya sadar apa yang saya tahu dan apa yang bisa saya lakukan.

00:03:41.670 --> 00:03:52.040
Biarkan saya menulis kode yang mudah dipahami orang untuk selalu memilih kesederhanaan daripada kompleksitas.