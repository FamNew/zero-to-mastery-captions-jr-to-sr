WEBVTT

00:00:01.930 --> 00:00:10.580
SSR wciąż nie jest idealnym rozwiązaniem z bibliotekami bocznymi Kleina i strukturami, takimi jak kątowe, reagujące na widok.

00:00:10.830 --> 00:00:16.620
Za każdym razem, gdy pracowałem nad projektem, w którym musieliśmy zaimplementować renderowanie po

00:00:16.890 --> 00:00:22.740
stronie serwera w tych bibliotekach, zwiększyło to złożoność aplikacji i nigdy nie było w porządku.

00:00:22.800 --> 00:00:26.900
Czuł się, jakby próbował umieścić kwadratowy blok w okrągłym otworze.

00:00:26.910 --> 00:00:34.380
Teraz to tylko moje doświadczenie, a twoje mogą się różnić i zdecydowanie możesz zrobić renderowanie po stronie

00:00:34.380 --> 00:00:35.080
serwera.

00:00:35.190 --> 00:00:37.010
To trudne.

00:00:38.270 --> 00:00:44.720
Ale chcę pokazać dwa narzędzia, które polecam i które są bardzo popularne w społeczności dla

00:00:44.720 --> 00:00:51.920
renderowania po stronie serwera, podobnie jak tworzenie aplikacji re-act, w której mieliśmy wielu najlepszych programistów pracujących nad

00:00:51.920 --> 00:00:54.180
tym projektem, aby nas zareagować.

00:00:54.230 --> 00:01:01.940
Łatwe w konfiguracji wielu najlepszych osób w terenie używa tych narzędzi do implementacji renderowania po stronie

00:01:02.120 --> 00:01:04.780
serwera zamiast samodzielnego odkrywania koła.

00:01:05.030 --> 00:01:06.480
I tak jak tworzyć ponownie.

00:01:06.530 --> 00:01:13.100
Zapobiega to całej konfiguracji, dzięki czemu możesz skupić się na budowaniu aplikacji,

00:01:13.100 --> 00:01:17.370
zamiast tylko konfigurować i pracować nad konfiguracją.

00:01:17.420 --> 00:01:19.470
Spójrzmy więc na obie z nich.

00:01:19.760 --> 00:01:21.600
Pierwszy to Gatsby.

00:01:21.690 --> 00:01:33.530
Tak, a przy tym głupkowatym sposobem jest zobaczenie niesamowitego szybkiego statycznego generatora stron, który mógłby zareagować, a Gatsby, jak to jest napisane, jest

00:01:33.530 --> 00:01:39.830
fantastyczne, jeśli chcesz wykonywać renderowanie po stronie serwera i chcesz statyczne witryny.

00:01:39.830 --> 00:01:43.540
Powinieneś teraz używać Gatsby'ego.

00:01:43.900 --> 00:01:47.410
Strona statyczna, jeśli pamiętasz, jest właśnie taka.

00:01:47.410 --> 00:01:55.550
Ponownie dokumentuj tutaj tylko głównie witryny tekstowe, które są naprawdę dobre dla

00:01:55.610 --> 00:02:04.730
takich rzeczy, jak dokumentacja, a co więcej, ponownie używają Gatsby'ego, aby mieć ich dokumentację.

00:02:05.060 --> 00:02:10.230
Więc jeśli oficjalne dokumentacje, które go używają, używają go, wiesz, że to świetna biblioteka.

00:02:12.090 --> 00:02:14.600
Drugi nazywa się Następny.

00:02:14.680 --> 00:02:20.110
Tak i teraz ich wersja 5, ale ciągle aktualizują ją w następnej kolejności.

00:02:20.280 --> 00:02:29.670
Tak, w przeciwieństwie do Gatsby J. S. Projekt, który jest statycznym generatorem strony obok tak, jest

00:02:29.670 --> 00:02:32.310
pełnym dynamicznym narzędziem do tworzenia bogatych aplikacji.

00:02:32.310 --> 00:02:40.350
Możesz zbudować w następnym J. S. co można zrobić po stronie klienta, ponownie

00:02:40.350 --> 00:02:44.430
uruchamiając naprawdę dynamiczne aplikacje, które wykraczają poza zwykłe strony oparte na tekście tekstowym.

00:02:44.430 --> 00:02:50.940
Fajną rzeczą przy następnym podejrzeniu jest to, że zamiast implementować renderowanie na ciągi i implementować renderowanie po stronie

00:02:50.970 --> 00:02:57.450
serwera, reagujesz na to, że jest bardzo łatwy w użyciu i robią to wszystko dla ciebie i jest

00:02:57.450 --> 00:03:03.120
to prawdopodobnie najlepsza implementacja strony serwera, którą ' Widzieliśmy to i wielu ludzi w społeczności tego

00:03:03.120 --> 00:03:03.840
poleca.

00:03:03.990 --> 00:03:09.600
Widzisz z nimi, że nie musisz się martwić o ustawienie mokrej paczki, reaguj na router, bo

00:03:10.560 --> 00:03:14.060
twoja rutynowa reakcja reaguje i reaguj jak na Rehm.

00:03:14.070 --> 00:03:22.170
To wszystko jest dołączane od razu, łącznie z dzieleniem kodu, w tym optymalizacją wydajności

00:03:22.680 --> 00:03:25.040
i optymalizacją ACR.

00:03:25.170 --> 00:03:32.860
Oczywiście mają również takie funkcje jak ładowanie modułów hot i prefetching I tylko tyle rzeczy.

00:03:33.240 --> 00:03:35.610
To świetna szara biblioteka.

00:03:35.610 --> 00:03:42.150
I znowu niektórzy naprawdę sprytni ludzie pracują nad tym projektem, więc za każdym razem, gdy korzystasz z renderowania po

00:03:42.420 --> 00:03:43.770
stronie serwera, polecam.

00:03:43.860 --> 00:03:44.470
Następny etap.

00:03:44.490 --> 00:03:50.310
Tak, a tak naprawdę w następnych kilku filmach pokażę wam szybką

00:03:50.310 --> 00:03:56.550
wersję demonstracyjną, jak zbudować następną aplikację JS, więc zobaczę w następnej grze.