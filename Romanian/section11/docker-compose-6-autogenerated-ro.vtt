WEBVTT

00:00:01.520 --> 00:00:02.880
Bine ai revenit.

00:00:02.880 --> 00:00:10.620
Am văzut că am avut o problemă aici în care trebuie să ne creăm bazele de date daquiri sau bazele de

00:00:11.000 --> 00:00:12.850
date postcriste în Dr.

00:00:12.990 --> 00:00:20.910
Și când am făcut prima dată acest lucru pe mașina noastră, a trebuit să deschidem secvența și să creăm manual acest

00:00:20.910 --> 00:00:22.960
lucru folosind tabela de interogare.

00:00:23.490 --> 00:00:29.550
Și încă o dată, motivul pentru care folosim dochetorul este că dezvoltatorii nu trebuie să continue să facă acest lucru mereu

00:00:29.550 --> 00:00:32.480
și repede în momentul în care se alătură echipei.

00:00:32.670 --> 00:00:36.540
Deci, să construim acest lucru ca parte a docului sau a proiectului de lege

00:00:40.020 --> 00:00:42.010
care va minimiza acest lucru un pic.

00:00:42.320 --> 00:00:48.280
Și voi intra în dosarul nostru de proiect și vom crea un nou dosar.

00:00:49.590 --> 00:00:56.950
Va fi numit postscripts Și acest film ar putea fi un pic cam dificil, dar este un mare set de faptul că, odată

00:00:56.950 --> 00:01:02.380
ce vă amintiți, atunci repetați-l pe numeroase proiecte de numeroase proiecte și pur și simplu faceți așa

00:01:02.680 --> 00:01:04.030
cum este acum.

00:01:04.090 --> 00:01:08.680
Deci, puteți întotdeauna să reveniți la acest videoclip atâta timp cât vă urmați și înțelegeți ce

00:01:08.680 --> 00:01:10.800
încercăm să facem cum conectăm punctele.

00:01:10.810 --> 00:01:12.040
Aceasta este partea importantă.

00:01:14.040 --> 00:01:17.730
Așa că tocmai am creat un dosar cu post-scripturi aici.

00:01:17.820 --> 00:01:22.520
Vom crea un fișier nou și va fi un fișier doc.

00:01:22.580 --> 00:01:29.750
Acum, acest fișier de stalker va face acum ceva cu adevărat interesant, în loc

00:01:29.750 --> 00:01:36.680
să se compună docker-ul, unde tocmai ne-am înființat imaginea fără alți pași Builth.

00:01:36.850 --> 00:01:39.490
De fapt, vom personaliza acest lucru.

00:01:39.670 --> 00:01:43.540
Am de gând să spun că vreau versiuni postscripts zece punct trei.

00:01:43.810 --> 00:01:46.580
Și asta poate fi ceea ce vrei să fie.

00:01:46.690 --> 00:01:51.870
Și aici vreau să adaug câteva fișiere în doc sau container.

00:01:51.930 --> 00:01:58.900
Voi folosi comanda add, pentru că vreau să adaug folderul de tabele pe care

00:01:58.900 --> 00:02:02.260
o vom crea aici la doc.

00:02:02.440 --> 00:02:07.610
Să numim punctul de intrare în el.

00:02:07.950 --> 00:02:14.810
D. B și acesta va fi un punct de defilare tabele.

00:02:16.970 --> 00:02:17.800
In regula.

00:02:17.990 --> 00:02:19.280
Ce sa întâmplat aici.

00:02:19.940 --> 00:02:26.680
Acest prim fișier spune că vrem să creăm utilizatorii noștri și să fim logați în tabel.

00:02:27.260 --> 00:02:32.840
Și modul în care vom face acest lucru este că vom crea un

00:02:33.110 --> 00:02:39.240
nou dosar în folderul nostru de posturi, numit Tables, la care se face referire aici.

00:02:39.320 --> 00:02:48.630
Acum, în dosarul acestui tabel voi avea două fișiere, voi avea tabela de jurnal care utilizează

00:02:48.630 --> 00:03:00.840
un tip de fișier precum și un alt fișier numit utilizatori care utilizează din nou fișierul de salvare a tuturor fișierelor.

00:03:00.850 --> 00:03:08.010
Acum, tipul de fișier pe care tocmai l-am putut să vă scriem toate comenzile din interiorul acestui fișier.

00:03:08.060 --> 00:03:13.280
Deci, dacă ne întoarcem la modul în care creăm tabelul utilizatorilor noștri și doar copiem și lipiți acest lucru,

00:03:16.210 --> 00:03:18.610
pot spune doar că utilizatorii pot crea table.

00:03:18.820 --> 00:03:24.130
Am o sintaxă frumoasă din nou Id de cheie primară serială.

00:03:24.130 --> 00:03:30.940
Avem un nume care are caracter variabil cu limita de 100 de e-mail, care este un tip de text care trebuie sa fie unic

00:03:30.940 --> 00:03:32.600
si nu poate fi numit.

00:03:32.860 --> 00:03:38.800
Avem un copac care este un întreg mare, care poate ajunge până destul de mare în număr și implicit

00:03:38.800 --> 00:03:39.810
va fi 0.

00:03:39.820 --> 00:03:46.800
Deci, atunci când primul registru va fi 0 și apoi ștampila noastră de timp comună nu nu.

00:03:47.110 --> 00:03:52.960
Acestea sunt doar comenzi obscure de bază pentru a începe să creați un tabel pe care să îl puteți privi și

00:03:52.960 --> 00:03:54.980
într-adevăr să depinde de fiecare situație.

00:03:55.050 --> 00:04:01.680
Acum, o altă bună practică atunci când lucrați cu toate fișierele obscure este să faceți ceva numit tranzacții care să

00:04:01.690 --> 00:04:08.830
vă asigurați că această tranzacție este completă și că nu se umple de jumătate din tabelul utilizatorilor sau dorim să vă asigurați

00:04:08.830 --> 00:04:12.280
că aceste lucruri sunt cele pe care le chemare atomică.

00:04:12.280 --> 00:04:18.880
Aceasta este dacă acest lucru eșuează sau o parte din ea nu reușește, atunci pur și simplu nu deranjează crearea tabelul de utilizatori de la toate pentru că acolo este doar

00:04:19.090 --> 00:04:20.380
de gând să mizerie lucrurile sus.

00:04:20.620 --> 00:04:27.100
Deci, sintaxa pentru acest lucru este să spun începe tranzacție.

00:04:27.200 --> 00:04:35.190
Și din nou, aceasta este doar o practică bună ca sintaxa pe care trebuie să o utilizați pentru a vă asigura că dreptul a

00:04:35.220 --> 00:04:36.140
început tranzacția.

00:04:36.390 --> 00:04:39.960
Și apoi, în final, la sfârșitul tranzacției, spunem că ne angajăm.

00:04:40.060 --> 00:04:44.640
Am spus da să comită acele modificări ale tabelului.

00:04:44.850 --> 00:04:49.350
Așa că avem tabelul utilizatorilor noștri dacă ne întoarcem să ne luăm și tabelele de jurnal.

00:04:49.410 --> 00:04:56.850
Dacă mă întorc în istoria mea Ei bine, nu am istoria, așa că

00:04:57.000 --> 00:05:00.240
trebuie să scriem totul

00:05:04.360 --> 00:05:08.350
cu mâna din nou, deoarece ne amintim

00:05:10.910 --> 00:05:21.740
începe tranzacția și du-te pentru a crea tabelul luggin și acest jurnal și tabel grupuri acum ceva ce

00:05:21.740 --> 00:05:28.720
am vrut nu a fost merge înapoi paranteze circulare va avea

00:05:35.630 --> 00:05:47.790
o ID de serial din nou primar va avea un hash de caracter variabil o sută și nu poate fi nr

00:05:47.860 --> 00:05:58.730
Și apoi, în sfârșit, e-mailul care este de text trebuie să fie unic și nu este nul și nu avem nevoie de o

00:05:58.730 --> 00:06:00.050
virgulă aici.

00:06:02.230 --> 00:06:07.190
În cele din urmă, punct și virgulă și dorim să facem acest lucru bine.

00:06:07.340 --> 00:06:13.700
Așa că am creat doar pentru a salva toate fișierele, dar nu fac nimic chiar acum, sunt.

00:06:14.440 --> 00:06:21.400
Din fericire pentru noi există un alt fișier Escorial pe care îl putem folosi și acesta pe care o vom

00:06:21.400 --> 00:06:23.380
pune la rădăcina folderului post-crash.

00:06:23.590 --> 00:06:32.170
Și o voi numi să implementeze schemele deoarece acestea sunt scheme pe care le implementăm.

00:06:32.430 --> 00:06:35.250
Și din nou, va fi

00:06:38.070 --> 00:06:49.430
un punct Eskew tot fișier acum în interiorul aici Pot să comenteze și doar să spun că aceasta este implementarea tabele de baze de

00:06:52.300 --> 00:06:56.290
date Frash acum aici, vom face de backslash.

00:06:56.960 --> 00:07:05.900
Și asta va rula noul fișier pe care îl vom crea acum și aici, în Dr cât de mult ne amintim

00:07:05.900 --> 00:07:13.610
cum am spus în dosarul tabelului pe care tocmai l-am creat în tabelul său, așa că asigurați-vă că

00:07:13.610 --> 00:07:18.440
spun tabele aici la doc și touchpoint dude Doddie acel tabel.

00:07:18.440 --> 00:07:23.920
Deci acesta este dosarul pe care îl vom crea pe containerul nostru.

00:07:24.000 --> 00:07:33.010
De fapt, pot copia acest lucru înapoi la schema de implementare și spun să rulați tabelele.

00:07:33.020 --> 00:07:36.750
Aceasta este utilizarea și să rulați utilizatorii.

00:07:36.940 --> 00:07:43.160
Pe masura ce toti tabelati, deoarece in fisierul doc sau compilati fisierul sau documentul sau fisierul, ne miscam tot ce este

00:07:43.160 --> 00:07:46.720
in tabelele care se logheaza si utilizatorii la acest lucru in tabel.

00:07:46.790 --> 00:07:50.820
Deci, implementarea spune pur și simplu că rulați această comandă securizată.

00:07:50.900 --> 00:07:51.660
Noi doar creăm.

00:07:51.770 --> 00:07:54.000
Care din nou este tabelul utilizatorilor.

00:07:54.410 --> 00:08:07.520
Și putem face același lucru pentru jurnalul și masa.

00:08:07.540 --> 00:08:11.000
Acum avem mesele pe care le avem la dispoziție.

00:08:11.170 --> 00:08:15.430
Ultimul lucru pe care trebuie să-l facem este să rulați acest fișier în container.

00:08:15.430 --> 00:08:22.360
Și așa cum am numit acest lucru este încă o dată în profilul doc adăugăm o

00:08:22.360 --> 00:08:31.220
altă linie spunând adăugați și de această dată pentru că noi doar adăugăm schema de implementare Eskew tot ce am de

00:08:32.350 --> 00:08:38.160
gând să spun implementarea schemelor Don Pascual în directorul principal ca acesta.

00:08:38.210 --> 00:08:41.330
Acum să salvăm și să vedem dacă există erori.

00:08:42.080 --> 00:08:50.310
În timp ce executam acest lucru am de gând să închid tot ce rulează

00:08:50.790 --> 00:08:58.010
docerul compuse jos și apoi du-te cu Doc sau compose construit.

00:08:58.030 --> 00:08:58.840
In regula.

00:08:58.840 --> 00:09:07.860
Dacă vedeți de fapt aici, vedeți că există o bază de date creată care a fost creată.

00:09:07.950 --> 00:09:08.340
In regula.

00:09:08.340 --> 00:09:10.260
Deci, să vedem dacă funcționează.

00:09:10.260 --> 00:09:16.690
Acum, dacă mă întorc la aplicația mea, să-i dăm un altul aici.

00:09:16.740 --> 00:09:21.130
Să vedem dacă ne putem înregistra acum.

00:09:21.480 --> 00:09:22.510
Avem cereri proaste.

00:09:22.510 --> 00:09:24.180
Să vedem ce am greșit aici.

00:09:29.650 --> 00:09:33.630
Și din nou trebuie să ne gândim la ceea ce facem.

00:09:33.630 --> 00:09:40.950
Frigo la docul de compozit amintiți-vă cum construim doar postscript-urile din imagine.

00:09:41.430 --> 00:09:42.750
Și nu mai vreau să mai facem asta.

00:09:42.780 --> 00:09:50.300
Avem un fișier de andocare și îmi amintesc de fiecare dată când trebuie să folosim un fișier docker pe care dorim să-l executăm.

00:09:50.610 --> 00:09:53.230
Deci, în loc de imagine, pot spune să construiesc.

00:09:53.370 --> 00:09:54.640
Și ce vrem să construim?

00:09:54.640 --> 00:09:59.610
Vrem să construim tot ce se află în interiorul postcristificelor sau orice document care urmează, la

00:10:00.120 --> 00:10:03.330
rădăcina post-scripturilor, în cazul nostru, putem doar să scriem așa.

00:10:03.360 --> 00:10:05.790
Să spunem că acest lucru aduce din nou serviciul în jos.

00:10:09.830 --> 00:10:13.330
Oh și asigurați-vă că voi adăuga puncte aici.

00:10:16.560 --> 00:10:23.310
Și vino înapoi.

00:10:23.310 --> 00:10:26.770
Bine, să facem ieșirea puțin mai mare.

00:10:27.110 --> 00:10:33.170
Și dacă vom derula până aspectul că în postscripts noastre de ieșire avem rol creativ crearea bazei

00:10:33.170 --> 00:10:40.810
de date, dar, de asemenea, începe, deoarece amintiți-ne că am început o tranzacție am creat un tabel am comis o altă tranzacție

00:10:41.080 --> 00:10:43.230
care a creat un alt tabel.

00:10:43.360 --> 00:10:46.670
Se pare că totul se întâmplă.

00:10:46.690 --> 00:10:48.250
Bazele de date au fost create.

00:10:48.310 --> 00:10:54.430
Dacă mă întorc din nou și reluar acest lucru deschideți terminalul asigurați-vă că

00:10:57.380 --> 00:11:08.850
nu vom obține nici o eroare clar acest lucru și nu voi lovi înregistra WOO-HOO pe care tocmai l-am înregistrat și avem 10 aici

00:11:08.850 --> 00:11:11.840
și să adăugăm doar imagine aici.

00:11:11.880 --> 00:11:16.000
Să mergem cu orice chip pe care îl putem găsi.

00:11:20.160 --> 00:11:27.890
Să o folosim pe asta.

00:11:28.010 --> 00:11:29.300
Uită-te la asta.

00:11:29.520 --> 00:11:33.040
Aplicația inteligentă a creierului în cele din urmă funcționează.

00:11:33.090 --> 00:11:35.750
Este exact același lucru ca și noi.

00:11:36.090 --> 00:11:42.780
Nimic nu sa schimbat pe front-end, dar baietelul a fost mult schimbat pe spate

00:11:42.900 --> 00:11:51.680
si avem acum toate aceste uimitoare logare, dar posta Chris si inapoi si se executa in interiorul aceleiasi comenzi.

00:11:51.970 --> 00:11:59.830
Nu numai că nu trebuie să ne facem griji cu privire la crearea unei mese, asigurându-ne că un dezvoltator are post-script-uri

00:12:00.040 --> 00:12:01.870
instalate pe computerul lor.

00:12:01.930 --> 00:12:04.450
Nu are dreptul nici o deviere pe calculatorul lor.

00:12:04.510 --> 00:12:12.490
Tot ce trebuiau să facă a fost să ruleze pur și simplu această comandă de comandă compune până construi și întregul nostru

00:12:13.300 --> 00:12:17.400
back end sistem a fost la fel ca deja înființat.

00:12:17.500 --> 00:12:23.590
Acum, frumusețea cu asta este faptul că, pentru că executăm docer până construim Toccara construim tot timpul este nevoie de

00:12:23.590 --> 00:12:24.390
timp corect.

00:12:24.760 --> 00:12:30.160
Dar, de fapt, odată ce o construiești o singură dată și nu există schimbări pe care vrei să le faci.

00:12:30.190 --> 00:12:34.110
El poate doar sa inconjoare docul compun si este mult mai rapid in acest fel.

00:12:35.110 --> 00:12:39.150
Nu reconstruiește totul de la Rockefeller.

00:12:39.180 --> 00:12:40.230
Foarte tare.

00:12:40.260 --> 00:12:43.890
Sper că sunteți entuziasmat cum sunt despre Dr ..

00:12:43.970 --> 00:12:47.370
Este un ultim lucru pe care vreau să îl adaug și voi vedea în următorul videoclip.