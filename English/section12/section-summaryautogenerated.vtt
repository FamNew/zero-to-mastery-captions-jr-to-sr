WEBVTT

00:01.180 --> 00:07.330
Welcome back in this section we learned about a new database that we're going to use called Rhetors.

00:07.510 --> 00:11.890
It's extremely popular and you're going to see a lot of companies using it.

00:11.920 --> 00:14.270
So I really wanted us to get comfortable with it.

00:14.740 --> 00:20.280
And I also want to you to get comfortable with it because we're going to added to our smart brain app.

00:20.800 --> 00:25.710
You see up until now we don't really have a way to manage sessions of the user.

00:25.870 --> 00:32.770
That is a user has to log in every single time every time they visit the Web site and the Web site doesn't

00:32.770 --> 00:34.130
really remember them.

00:34.900 --> 00:41.540
We're not really able to update profiles or create profiles and have that ability without sessions.

00:42.380 --> 00:49.610
So we're going to be including red S in our next session to actually show you how we can implement sessions.

00:49.690 --> 00:56.270
We're going to add it to our doctor container which we've created and then have our API communicate

00:56.660 --> 01:01.850
with the rattus server to check if a user is logged in or not.

01:01.880 --> 01:04.820
So that we're able to keep users logged in.

01:06.410 --> 01:11.810
And this is a bit of a special section because it's going to keep going into the next session because

01:11.900 --> 01:18.860
if you remember Bruno asked us to have these added to our ability of the smart brain braina or to the

01:18.860 --> 01:24.750
ability of the smart brain to and knowing what we just learned about retests we're now finally able

01:24.750 --> 01:28.640
to a added to our docker container for development.

01:28.860 --> 01:37.950
And then finally connected to our API and because rattus is so fast again and a memory data storage

01:38.550 --> 01:43.800
Brunos going to be extremely happy with us because we find a way not to slow down our Web site while

01:43.800 --> 01:47.370
also keeping these user sessions.

01:48.030 --> 01:49.360
Interesting right.

01:49.380 --> 01:56.220
It's going to be a lot of fun when we finally see all of these dots connected and that's when you're

01:56.220 --> 01:58.360
going to have an aha moment.

02:00.230 --> 02:07.160
These topics of darker red S in containers is really really difficult and really hard to teach because

02:07.160 --> 02:09.020
there's so many moving pieces.

02:09.230 --> 02:16.730
And I hope you stay patient with me because I know not everything is 100 percent clear yet but I promise

02:16.760 --> 02:22.880
you if you follow through with the next section we're going to understand how everything is connected

02:23.150 --> 02:28.030
how everything works and how you're going to be able to do the same thing on your own projects.

02:28.220 --> 02:34.160
So that finally when you go work for a company you can have a set up not just like this for development

02:34.370 --> 02:38.610
but also for production where you have different dangers.

02:38.630 --> 02:46.010
You can have different rattus clusters you can have different database clusters with the idea being

02:46.010 --> 02:46.670
the same.

02:46.670 --> 02:52.330
You're just connecting these services together and each service does one thing really really well.

02:52.340 --> 02:54.040
So stick with me.

02:54.110 --> 02:57.020
Looking forward to in the next session I hope you are too.

02:57.020 --> 02:57.930
I'll see you on that one.
