WEBVTT

00:00:01.070 --> 00:00:01.910
Selamat datang kembali.

00:00:01.970 --> 00:00:08.840
Sudah waktunya bagi kita untuk menulis file konfigurasi integrasi berkesinambungan yang bagus sehingga kita benar-benar melakukan sesuatu yang

00:00:08.960 --> 00:00:10.120
bermakna di sini.

00:00:10.800 --> 00:00:21.300
Hal pertama yang akan saya lakukan adalah mari kita memiliki toko pertama bernama Build dan build ini akan menggunakan gambar daquiri dan

00:00:21.300 --> 00:00:26.490
saya akan menggunakan karena dalam proyek kami kami menggunakan node.

00:00:26.490 --> 00:00:33.570
Saya akan menggunakan lingkaran C. SAYA. simpul delapan koma sembilan dan Anda bisa mengetahui seperti apa lingkaran lihat-I gambar

00:00:33.570 --> 00:00:34.500
yang bisa Anda gunakan.

00:00:34.500 --> 00:00:37.010
Anda hanya pergi ke Dr. Hobi dan cari lingkaran.

00:00:37.010 --> 00:00:37.540
Ya.

00:00:37.800 --> 00:00:39.980
Tapi saya akan menyimpan titik.

00:00:40.200 --> 00:00:43.470
Meskipun Ruby berfungsi seperti yang baru saja Anda lihat.

00:00:43.470 --> 00:00:49.530
Sekarang hal berikutnya yang akan saya lakukan adalah untuk langkah-langkah yang akan saya katakan memeriksa

00:00:49.740 --> 00:00:53.000
repo dan saya ingin menjalankan bukan hanya gema.

00:00:53.070 --> 00:01:00.540
Atau kita bisa meninggalkan ini di sini kita akan katakan dan PM dan berhenti dan kita akan menambahkan baris lain.

00:01:00.600 --> 00:01:09.090
Proses lain yang benar-benar akan berjalan dan instalasi PM karena ingat NPM Insall berarti akan memeriksa semua

00:01:09.120 --> 00:01:10.050
paket.

00:01:10.050 --> 00:01:18.660
Pastikan semuanya dapat diinstal dan akhirnya setelah kami menjalankan NPM install di server mereka, kami memiliki semua

00:01:18.900 --> 00:01:22.910
file yang diperlukan untuk proyek Robur France.

00:01:22.920 --> 00:01:30.260
Saya akan mengatakan menjalankan dan saya akan memberikannya ke lingkungan eksternal atau variabel lingkungan.

00:01:30.300 --> 00:01:34.370
Kita akan mengatakan lingkaran lihat-saya sama dengan benar.

00:01:34.410 --> 00:01:36.640
Dan ini tidak akan melakukan apa pun sekarang.

00:01:36.690 --> 00:01:43.710
Tetapi dalam proyek kami jika kami memiliki beberapa pernyataan if atau beberapa kondisi yang ingin kami jalankan jika kami menjalankan

00:01:43.710 --> 00:01:47.710
kode incircle C. SAYA. kita bisa melakukannya dengan cara ini.

00:01:48.180 --> 00:01:49.960
Dan kemudian saya bisa mengatakan NPM.

00:01:50.070 --> 00:01:59.090
Bill Karena ingat membuat aplikasi aksi ulang akan membuat kesalahan bagi kita jika ini tidak berfungsi dan jika NPM rom dibangun dengan

00:01:59.090 --> 00:02:02.760
baik itu berarti kita dapat membangun proyek kita.

00:02:02.780 --> 00:02:09.980
Itu mungkin pekerjaan paling penting yang bisa kita miliki yaitu membangun yang berikutnya mungkin tes.

00:02:10.280 --> 00:02:13.280
Kami ingin menguji kode kami dan benar-benar menjalankan tes kami.

00:02:13.280 --> 00:02:21.230
Jika saya lakukan dan tes PM di sini kami ingin memastikan ya saya bisa mengujinya di lingkungan lokal saya.

00:02:21.530 --> 00:02:24.830
Tapi kalau-kalau saya lupa menjalankan hal-hal ini.

00:02:24.890 --> 00:02:28.720
Biarkan saya membacanya lagi kalau-kalau saya lupa menjalankan ini.

00:02:28.820 --> 00:02:35.240
Setiap kali saya membuat permintaan yang buruk secara otomatis Circle C akan menguji ini untuk kami sehingga

00:02:35.240 --> 00:02:42.020
seseorang di tim saya bahkan tidak akan memeriksa permintaan kumpulan saya kecuali semua tes lulus dan dengan cara

00:02:42.380 --> 00:02:47.510
ini kami memastikan bahwa jika modifikasi saya membuat tes orang lain gagal.

00:02:47.510 --> 00:02:56.360
Saya tahu bahwa saya harus memperbaikinya sehingga dalam tes saya lagi akan menggunakan gambar titik sembilan Noad dan langkah-langkah

00:02:59.490 --> 00:03:09.170
yang akan saya ambil dengan yang satu ini akan sekali lagi untuk menjalankan NPM menginstal dan saya akan untuk meninggalkan lari di

00:03:09.170 --> 00:03:11.180
sini dan hanya mengatakan

00:03:14.500 --> 00:03:15.610
hal-hal pengujian.

00:03:17.970 --> 00:03:22.370
Dan kemudian menjalankan NPM berikutnya akan menjadi tes NPM yang bagus

00:03:25.260 --> 00:03:26.400
dan mudah.

00:03:26.800 --> 00:03:28.500
Anda tahu apa yang hanya untuk bersenang-senang.

00:03:28.640 --> 00:03:34.110
Saya tidak ingin menambahkan tes yang benar-benar bermakna atau tes yang kurang berarti dan Anda dapat

00:03:34.110 --> 00:03:42.110
membayangkan di sini Anda dapat menambahkan semua jenis skrip memeriksa bahwa Anda mungkin ingin tes lain yang ingin Anda periksa untuk setiap perintah yang

00:03:42.110 --> 00:03:43.970
Anda miliki dalam paket Anda.

00:03:44.010 --> 00:03:49.950
Jason dapat Anda gunakan untuk benar-benar menguji untuk memeriksa skrip Anda.

00:03:50.060 --> 00:03:59.360
Misalnya, jika Anda memiliki cakupan tes NPM, Anda dapat menambahkan pekerjaan cakupan di sini di mana ia memeriksa untuk memastikan

00:03:59.360 --> 00:04:03.620
bahwa cakupan tes Anda selesai katakanlah 80 persen.

00:04:03.680 --> 00:04:07.280
Dan jika tidak dan jika jatuh di bawah sumur itu akan gagal.

00:04:07.300 --> 00:04:08.780
Kita bisa melakukan banyak hal dengannya.

00:04:10.600 --> 00:04:22.080
Di sini saya hanya akan mengatakan check out dan kemudian berikan perintah jalankan hanya perintah gema

00:04:22.080 --> 00:04:27.900
sederhana yang mengatakan Anda sama sekali tidak berguna.

00:04:27.900 --> 00:04:33.420
Seperti yang saya katakan tetapi sekarang saya bisa menunjukkan sesuatu yang menyenangkan di pencari kerja.

00:04:33.420 --> 00:04:38.130
Saya akan mengubah nama ini menjadi sesuatu yang lebih berguna

00:04:42.610 --> 00:04:48.270
seperti build dan lint karena mereka bereaksi tidak akan membiarkan saya NPM bergemuruh.

00:04:48.400 --> 00:04:57.370
Jika Lanting tidak lulus dan untuk pekerjaan yang akan saya katakan saya ingin Anda melakukan pekerjaan pembangunan

00:04:57.370 --> 00:05:06.740
dan saya juga ingin Anda melakukan pekerjaan pengujian tetapi juga saya akan melakukan sesuatu yang menyenangkan di sini

00:05:07.640 --> 00:05:15.220
saya akan untuk mengatakan bahwa di sini pekerjaan tes membutuhkan pekerjaan yang tinggi di sana

00:05:18.400 --> 00:05:19.850
untuk menyelesaikannya.

00:05:19.960 --> 00:05:21.070
Apa artinya.

00:05:21.460 --> 00:05:27.200
Nah sekarang saya katakan itu build dan test akan berjalan secara paralel.

00:05:27.280 --> 00:05:29.330
Oh dan biarkan aku memperbaikinya.

00:05:29.350 --> 00:05:32.660
Kami ingin membangun Hai di sana.

00:05:32.680 --> 00:05:33.420
Biarkan saya membahasnya.

00:05:33.430 --> 00:05:36.180
Jadi kami memiliki pekerjaan dan kami ingin membangun.

00:05:36.340 --> 00:05:37.190
Hai yang disana.

00:05:37.390 --> 00:05:39.950
Dan tes Ayub.

00:05:40.330 --> 00:05:47.210
Namun pekerjaan tes membutuhkan yang tinggi di sana untuk berhasil.

00:05:47.230 --> 00:05:54.640
Jadi apa yang akan terjadi dibangun dan tinggi akan berjalan secara paralel pada dua wadah terpisah.

00:05:54.700 --> 00:06:02.470
Namun tes yang jika kita tidak menambahkan Membutuhkan akan berjalan lagi secara paralel pada waktu yang sama pada

00:06:02.470 --> 00:06:04.230
wadah yang berbeda.

00:06:04.300 --> 00:06:06.870
Sebaliknya itu membutuhkan yang tinggi di sana.

00:06:07.040 --> 00:06:12.880
Jadi sampai ada gema yang tinggi Halo, wadah tes tidak dapat mulai.

00:06:13.210 --> 00:06:18.810
Dan Anda dapat mulai membayangkan jenis alur kerja yang dapat Anda lakukan dengan oh

00:06:18.810 --> 00:06:26.620
dan saya baru menyadari bahwa di sini di atas sana kami harus memastikan bahwa kami mengatakan gambar Hucker memastikan kami memilikinya.

00:06:26.820 --> 00:06:31.120
Dan ini harus menjadi langkahnya.

00:06:31.120 --> 00:06:31.570
Baiklah.

00:06:31.650 --> 00:06:39.060
Jadi sekarang kita sudah menyiapkan ini, pastikan semuanya terlihat bagus dan pastikan semua lekukan

00:06:39.060 --> 00:06:40.680
kita benar.

00:06:40.680 --> 00:06:46.720
Seperti yang saya katakan dengan file YAML, sangat penting bahwa kita benar-benar memilikinya.

00:06:46.830 --> 00:06:56.840
Kami juga ingin memastikan bahwa yang memerlukan indentasi dengan benar seperti lagi kami akan menyimpannya.

00:06:56.960 --> 00:07:02.860
Ayo keluar dari sini dan buat hanya untuk mendapatkan status untuk memastikan bahwa kami telah melakukan perubahan itu.

00:07:02.880 --> 00:07:14.040
Saya akan membuat cabang baru yang disebut pengujian dan di sini kita hanya akan mendapatkan iklan untuk

00:07:14.050 --> 00:07:20.970
melakukan tugas melihat-I lingkaran dan akhirnya mendapatkan pengujian asal push.

00:07:21.530 --> 00:07:22.940
Mari kita lihat apakah itu berhasil.

00:07:25.920 --> 00:07:26.940
Ayo kembali.

00:07:26.940 --> 00:07:35.520
Di sana Anda pergi ada permintaan dan kami hanya akan mengatakan buat Reclast miskin.

00:07:35.530 --> 00:07:36.980
Baiklah, lihat itu.

00:07:37.000 --> 00:07:38.730
Hai, sedang berjalan.

00:07:38.770 --> 00:07:42.040
Jadi sekarang tes sedang berjalan dan kemudian build juga berjalan.

00:07:42.280 --> 00:07:45.090
Mari kita periksa lingkaran C. SAYA. dan lihat apa yang dilakukannya.

00:07:46.660 --> 00:07:51.080
Kami memiliki teman-teman Roble kami yang menguji dan melihatnya.

00:07:51.300 --> 00:07:55.810
Kami memiliki kesuksesan yang terjadi.

00:07:55.890 --> 00:07:57.750
Itu hanya halo yang menggema.

00:07:58.200 --> 00:08:03.900
Jika kita kembali ke alur kerja di sini kita melihat itu.

00:08:03.910 --> 00:08:04.240
Baiklah.

00:08:04.240 --> 00:08:06.770
Jadi, hai, di sana berhasil dalam satu detik.

00:08:06.780 --> 00:08:15.750
Dan sekarang sedang menjalankan tes dan mereka semua tampaknya telah lulus tes butuh 34 detik untuk membangun 40 detik jika

00:08:15.760 --> 00:08:16.910
saya mengkliknya

00:08:17.260 --> 00:08:19.020
Ya sepertinya semuanya berlalu.

00:08:19.030 --> 00:08:20.540
Semuanya baik.

00:08:20.680 --> 00:08:25.090
Kembali ke bangunan saya melihat bahwa semuanya lewat.

00:08:25.090 --> 00:08:33.400
Jika saya kembali dan saya menyegarkan atau berat atau sedikit semua cek telah berlalu.

00:08:33.400 --> 00:08:37.830
Semuanya bagus, gabungkan permintaan yang buruk.

00:08:37.830 --> 00:08:44.790
Sekarang hal yang menarik di sini adalah bahwa ini akan gagal setiap kali saya sekarang membuat permintaan yang buruk

00:08:45.060 --> 00:08:47.700
dan semua tes atau gagal dibangun

00:08:47.700 --> 00:08:49.950
Misalnya katakanlah saya ingin

00:08:52.640 --> 00:09:00.550
membuat komponen baru atau katakanlah di komponen BOTTEN counter saya akan mengubah status awal menjadi

00:09:00.550 --> 00:09:01.380
5.

00:09:01.960 --> 00:09:03.540
Saya akan menghemat.

00:09:04.450 --> 00:09:07.560
Dan lagi saya akan diperiksa.

00:09:07.590 --> 00:09:15.180
M. dan kemudian dari sini saya hanya akan mendapatkan checkout B.

00:09:15.660 --> 00:09:28.390
Saya hanya akan memberikannya ke cabang dan saya akan menerima dan melakukan hanya sebuah pesan kosong.

00:09:29.450 --> 00:09:33.200
Dan kemudian dapatkan push origin yang oh saya

00:09:37.110 --> 00:09:41.210
harus benar-benar memberikannya pesan perintah mari kita coba lagi.

00:09:41.220 --> 00:09:43.060
Saya akan mengatakan siapa.

00:09:43.200 --> 00:09:44.150
Nah, itu lebih baik.

00:09:44.370 --> 00:09:45.830
Mari kita coba lagi.

00:09:48.110 --> 00:09:58.960
Dan permintaan ini akan gagal karena jika tes NPM Iran akan mengatakan tes Anda tidak akan lulus karena kami

00:09:58.960 --> 00:10:03.830
memiliki beberapa tes yang mengharapkan negara menjadi nol.

00:10:03.850 --> 00:10:05.050
Sangat keren.

00:10:05.050 --> 00:10:05.360
Baiklah.

00:10:05.380 --> 00:10:10.590
Mari kita istirahat dan saya akan menambahkan satu langkah terakhir untuk integrasi berkesinambungan kami di video berikutnya.

00:10:11.020 --> 00:10:11.290
Buh-Bye.