WEBVTT

00:00:01.280 --> 00:00:02.510
Witamy spowrotem.

00:00:02.750 --> 00:00:08.870
Chcę zrobić jedno wideo, aby odkryć coś, co może spowodować potknięcie się

00:00:08.870 --> 00:00:19.830
wielu osób, gdy zaczynają od ponownego użycia. Pamiętaj, że ponowne wprowadzanie jest tylko nową biblioteką warstw, więc ponowne wprowadzenie pozwala tylko na

00:00:19.920 --> 00:00:29.720
zbudowanie użytkownika opartego na komponentach Interfejsy i ma kilka rozwiązań, takich jak własne lokalne zarządzanie państwem i prosty sposób obsługi

00:00:29.720 --> 00:00:34.040
zdarzeń w celu interakcji na naszej stronie internetowej.

00:00:35.440 --> 00:00:40.110
Ale na koniec dnia jest to prosta biblioteka, która pomaga w widoku.

00:00:40.360 --> 00:00:48.430
Gdy zaczniesz budować aplikacje o dużej skali, musisz na nich reagować.

00:00:48.700 --> 00:00:55.630
Siła re-act wynika z możliwości dodania nowych funkcji do nowych bibliotek, aby dostosować

00:00:55.630 --> 00:00:59.520
go do własnych upodobań do własnej aplikacji.

00:00:59.660 --> 00:01:08.270
W miarę jak aplikacje rosną lub zaczynasz pracować dla dużej firmy, zobaczysz, że używają innych

00:01:08.360 --> 00:01:14.810
narzędzi i chciałem szybko przejrzeć niektóre z tych, które są

00:01:14.810 --> 00:01:16.270
najczęściej spotykane.

00:01:16.300 --> 00:01:20.710
Najpierw ponownie wykonujemy router i to jest routing.

00:01:20.890 --> 00:01:29.080
Zmieniające się strony i zmieniające się trasy w naszej RL To właściwie norma, jeśli chodzi o projekt

00:01:29.080 --> 00:01:30.190
reduktorów reagujących.

00:01:30.520 --> 00:01:32.930
Tak wysoce zalecane.

00:01:33.100 --> 00:01:35.010
Bardzo łatwy w użyciu.

00:01:35.320 --> 00:01:36.650
Bardzo łatwa do nauczenia się.

00:01:36.700 --> 00:01:39.640
Zajmę ci jeden dzień i możesz go dość łatwo wybrać.

00:01:41.160 --> 00:01:49.650
Masz również takie rzeczy jak biblioteki narzędziowe i są to biblioteki, które dodają do aktualnych narzędzi

00:01:49.770 --> 00:01:52.440
javascript, które wyjdziesz z pudełka.

00:01:52.440 --> 00:01:56.740
Pomyśl o tym, jak działa javascript.

00:01:56.950 --> 00:01:58.720
Najbardziej popularne są Ramdass.

00:01:58.810 --> 00:02:06.080
Jeśli naprawdę chcesz zachować ideologię programowania funkcjonalnego naprawdę dobrą bibliotekę i jest

00:02:06.100 --> 00:02:16.690
tam również najpopularniejszy low dash, który ponownie daje ci rzeczywiste narzędzia, których możesz użyć w javascriptu, pomyśl

00:02:16.820 --> 00:02:20.570
o stylizacji z nim reagującym.

00:02:20.630 --> 00:02:27.380
I znowu jest wiele narzędzi, których ludzie używają do stylizacji, są naprawdę efektowne, co naprawdę

00:02:27.380 --> 00:02:28.170
lubię.

00:02:28.250 --> 00:02:35.480
Są stylizowane elementy, które znów są bardzo ładne i bardzo podobne do efektownych.

00:02:35.570 --> 00:02:38.520
A potem są takie rzeczy jak moduły CSSA.

00:02:38.630 --> 00:02:46.490
Powiedzmy, że te trzy są prawdopodobnie najlepsze do zastosowania, jeśli chcesz zastosować inteligentniejszy sposób radzenia sobie ze stylami

00:02:46.580 --> 00:02:47.830
i reagowania.

00:02:47.870 --> 00:02:50.300
I znowu są dość łatwe do odbioru.

00:02:50.300 --> 00:02:52.720
Możesz spędzić dzień na nich i zdobyć to.

00:02:53.860 --> 00:02:57.490
Następnie mamy coś, co można nazwać koty są podejrzane.

00:02:58.060 --> 00:03:02.980
Jest to naprawdę dobre dla statycznych stron internetowych, które reagują.

00:03:02.980 --> 00:03:06.340
To są proste strony oparte na podatkach.

00:03:06.460 --> 00:03:08.920
Właściwie, jeśli przejdziesz do dokumentacji

00:03:18.840 --> 00:03:28.110
re-act, ich dokumentacja jest obsługiwana z użyciem gazu, który nie jest najgorszy, ponieważ są to po prostu proste strony z rozstawionymi

00:03:28.860 --> 00:03:29.640
zadaniami.

00:03:29.760 --> 00:03:31.310
Działa to naprawdę bardzo dobrze.

00:03:33.430 --> 00:03:35.710
Następnie są również obok.

00:03:35.750 --> 00:03:41.510
AJ Tak bardzo popularny wśród aplikacji renderowanych po stronie serwera.

00:03:41.740 --> 00:03:45.490
To jest coś, o czym porozmawiamy, kiedy dojdziemy

00:03:45.490 --> 00:03:52.330
do sekcji po stronie serwera, a my zbudujemy prostą Next Slide GS, ale bardzo popularną i

00:03:52.330 --> 00:04:00.040
bardzo polecam jeśli budujesz coś po stronie serwera. jest znany i właśnie wybrałem dwie opcje, ale jest ich

00:04:00.040 --> 00:04:01.230
tak wiele.

00:04:01.230 --> 00:04:05.920
Re-act jest naprawdę bardzo dobry, ponieważ jesteśmy w stanie tworzyć komponenty wielokrotnego użytku.

00:04:05.970 --> 00:04:12.270
Więc jeśli zbuduję naprawdę fajny komponent kalendarza, mogę go umieścić w Internecie, a inne osoby mogą po prostu

00:04:12.270 --> 00:04:15.800
pobrać ten komponent i użyć go również w swoich projektach.

00:04:16.770 --> 00:04:23.610
Tak więc niektóre z większych są materialnymi komponentami UI, które znowu możesz po prostu użyć.

00:04:23.820 --> 00:04:33.940
Istnieje również semantyczna biblioteka UI zawierająca mnóstwo komponentów Riak, z których można korzystać.

00:04:34.050 --> 00:04:41.760
Kolejny świetny powód, aby używać tych składników, którymi ludzie się dzielą, i możesz po prostu

00:04:41.760 --> 00:04:44.510
dodać do swojej witryny.

00:04:44.670 --> 00:04:49.810
A w końcu są narzędzia, dzięki którym redux jest lepiej wydajny.

00:04:49.980 --> 00:04:56.310
Masz takie rzeczy, które wybierzemy. Zobaczysz je w większości projektów redoks, które pomagają w

00:04:56.310 --> 00:05:01.620
czymś, co nazywa się selektorami i poprawiają wydajność twoich aplikacji.

00:05:01.650 --> 00:05:09.240
Masz również takie rzeczy jak saga redux, która obsługuje akcje asynchroniczne i redux.

00:05:09.240 --> 00:05:16.080
Pomyśl o tym jako o reduxie, dzięki czemu kupiłeś doładowanie. W miarę, jak rzeczy stają się coraz bardziej

00:05:16.080 --> 00:05:18.510
złożone, masz coraz więcej asynchronicznych akcji.

00:05:18.510 --> 00:05:23.040
Możesz zacząć od spojrzenia na takie rzeczy, jak saga o ponowne spytanie.

00:05:23.040 --> 00:05:25.840
To jest trochę skomplikowane, aby najpierw się tego nauczyć.

00:05:26.100 --> 00:05:28.500
I są ludzie, którzy to kochają i nienawidzą.

00:05:28.500 --> 00:05:32.650
Ale zdecydowanie coś, co próbuje rozwiązać problem Wolf.

00:05:32.670 --> 00:05:36.200
Co robimy, gdy zaczniemy robić coraz większe i większe aplikacje.

00:05:36.510 --> 00:05:43.950
A także masz coś w rodzaju niezmiennego J. S. które możesz wykorzystać jako bibliotekę, aby

00:05:43.950 --> 00:05:49.260
upewnić się, że twoje państwo pozostaje niezmienne i wymuszać to wśród twoich zespołów programistów.

00:05:50.300 --> 00:05:57.310
Teraz nie oczekuję, że znasz każdy z nich i użyjesz każdego z nich w swoich projektach.

00:05:58.420 --> 00:06:04.510
Właściwie to chcę ostrzec przed nimi i za każdym razem, gdy dodajesz coś, zadaj sobie pytanie Czy

00:06:04.510 --> 00:06:05.710
naprawdę tego potrzebuję.

00:06:05.710 --> 00:06:08.390
Jakie korzyści płyną z tego.

00:06:09.640 --> 00:06:17.020
Ponieważ dodanie jakiejkolwiek biblioteki do naszego projektu dodaje dodatkowej wagi, dodaje dodatkowe javascript, które musimy dostarczyć

00:06:17.020 --> 00:06:17.960
klientowi.

00:06:18.340 --> 00:06:26.140
Upewnij się więc, że dodajesz którąś z tych rzeczy, która ma uzasadniony powód, który

00:06:26.230 --> 00:06:29.370
faktycznie poprawia wartość twojego produktu.

00:06:30.290 --> 00:06:32.820
Pomaga także w rozwoju.

00:06:32.840 --> 00:06:38.930
Kiedy więc myślisz o wartości, nie myślisz, że klienci i użytkownicy również myślą o zespołach programistów

00:06:38.930 --> 00:06:44.970
i osobach, z którymi pracujesz, ale skorzystają na dodaniu niezmiennego G-S do bazy kodu.

00:06:45.260 --> 00:06:52.730
Czy jest to faktyczna krzywa uczenia się i frustracja, jaką mogą mieć deweloperzy, wykorzystując niezmienną

00:06:53.060 --> 00:06:57.170
wartość zabezpieczeń, które mogą dodać do twojego projektu.

00:06:58.010 --> 00:07:05.780
Ale w każdym razie chciałbym podkreślić, że jako starszy programista zawsze rozważa za i

00:07:05.780 --> 00:07:13.940
przeciw, czy czegoś potrzebujesz, a jeśli potrzebujesz czegoś naprawdę analizować, co jest najlepszym narzędziem do pracy.

00:07:13.940 --> 00:07:15.280
Czuję się jak zepsuta płyta.

00:07:15.290 --> 00:07:22.700
Powiedziałem to już wiele razy, ale jest to naprawdę ważna koncepcja, więc nie dodawaj niezmiennego jazzu, ponieważ czytasz go

00:07:22.880 --> 00:07:26.470
na blogu, a potem wszyscy się o nim boją.

00:07:26.480 --> 00:07:32.480
Każdy projekt jest inny, więc musisz mieć możliwość podejmowania tych decyzji samodzielnie dla swojego projektu

00:07:32.510 --> 00:07:33.940
dla zespołu programistów.

00:07:35.690 --> 00:07:40.100
W porządku, rozmawiając o mnie, widzę w następnym Buh-Bye.