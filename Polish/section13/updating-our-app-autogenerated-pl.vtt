WEBVTT

00:00:00.790 --> 00:00:01.910
Witamy spowrotem.

00:00:01.930 --> 00:00:08.950
Teraz jestem znowu z przyszłości. W tym momencie powinieneś mieć już dość mówienia o

00:00:08.950 --> 00:00:14.770
aktualizowaniu pakietów i powinieneś czuć się komfortowo samodzielnie, ponieważ robiliśmy to wiele

00:00:14.770 --> 00:00:15.580
razy.

00:00:15.910 --> 00:00:21.940
Ale obiecuję, że to ostatni, ponieważ nauczyliśmy się, jak używać ciemniejszego i ciemniejszego komponowania

00:00:21.940 --> 00:00:27.970
i być może pytasz się o te same zasady aktualizacji, które obowiązują tutaj.

00:00:28.630 --> 00:00:30.210
No tak.

00:00:30.220 --> 00:00:34.580
Mam tutaj dokumentację API inteligentnego mózgu.

00:00:34.660 --> 00:00:39.060
A jeśli będę ciągle przewijać w górę, zobaczysz, że wszystko działa tak, jak widzieliśmy wcześniej.

00:00:39.190 --> 00:00:48.790
Ale mamy kilka dzienników, gdy aktualizujemy rzeczy lub gdy uruchamiamy ten, to ten, że mamy przestarzałą kryptę beat

00:00:48.880 --> 00:00:55.410
DASH No J. S. ostrzeżenie tutaj, mówiąc, że hej B łóżeczko nie Jezus jest przestarzały.

00:00:55.420 --> 00:00:58.300
Powinieneś użyć B crypt lub b crypt.

00:00:58.300 --> 00:01:04.600
J Tak, potem zostawiam wideo wyjaśniające, dlaczego używamy łóżeczka B, znamy Jezusa i dlaczego jest w porządku w

00:01:04.600 --> 00:01:05.560
tej sytuacji.

00:01:05.740 --> 00:01:11.930
Ale ogólnie projekt działa, ale jest kilka rzeczy, które możemy zaktualizować.

00:01:11.980 --> 00:01:18.880
Na przykład możemy chcieć przejść do pliku dokera, jeśli korzystamy z Dockera i zaktualizować nasze wersje

00:01:18.910 --> 00:01:27.010
węzłów, ponieważ węzeł ma teraz wyższą stabilną wersję, więc możemy po prostu zaktualizować ten numer do pożądanej wersji węzła i

00:01:27.280 --> 00:01:30.130
sprawdzić, czy nasza aplikacja nadal Pracuje.

00:01:30.130 --> 00:01:30.740
Podpowiedź podpowiedź.

00:01:30.760 --> 00:01:32.790
Próbowałem tego i nadal tak jest.

00:01:32.800 --> 00:01:37.960
Możesz więc zaktualizować wersję węzła, jeśli chcesz, i musisz ją również zaktualizować tutaj.

00:01:37.960 --> 00:01:44.080
A może używasz komponowania Docker i komponowania dokera, powiedzmy, że ma wyższą wersję, teraz trzy

00:01:44.080 --> 00:01:44.920
punkt sześć.

00:01:44.950 --> 00:01:51.610
Cóż, możesz to uaktualnić i tak długo, jak długo ma on pożądane funkcje i podpowiedź tak,

00:01:51.610 --> 00:01:52.480
nadal ma.

00:01:52.480 --> 00:01:54.490
Możesz to również zaktualizować.

00:01:55.570 --> 00:02:02.140
Wreszcie wiemy o zapakowanym ojcu Jasonie i jak możemy przejść przez Pakistan Jason i zaktualizować

00:02:02.140 --> 00:02:03.220
kilka rzeczy.

00:02:03.280 --> 00:02:06.180
Na przykład może nie chcemy używać krypty B.

00:02:06.190 --> 00:02:09.100
Nr J. S. już dlatego, że jest przestarzałe.

00:02:09.100 --> 00:02:15.430
Możemy chcieć przyjrzeć się nowszej wersji postu Cressa lub czerwonych, ponieważ rzeczy są ciągle aktualizowane i już

00:02:15.850 --> 00:02:18.780
wiemy, jak to zrobić dzięki aktualizacji NPM.

00:02:18.810 --> 00:02:23.920
I po prostu zarządzanie naszymi pakietami, jeśli chodzi o utrzymanie kodu.

00:02:24.040 --> 00:02:27.250
Jest to część naszych zadań jako programistów.

00:02:27.250 --> 00:02:32.110
Musimy upewnić się, że staramy się aktualizować nasze biblioteki.

00:02:32.110 --> 00:02:35.640
Obserwujemy zmiany.

00:02:35.860 --> 00:02:42.460
Jeśli pojawią się nowe wersje bibliotek i nastąpią przełomowe zmiany, aby zapewnić

00:02:42.460 --> 00:02:48.610
bezpieczeństwo naszych aplikacji, chcemy mieć najnowsze zależności, które mają usunięte luki.

00:02:48.820 --> 00:02:54.370
Ale jednocześnie zwiększa to odpowiednio nasz czas opracowywania.

00:02:54.490 --> 00:02:58.880
Ponieważ teraz musimy upewnić się, że nasza aplikacja nadal działa z tymi wszystkimi nowymi zmianami.

00:02:58.990 --> 00:03:04.300
Musimy upewnić się, że w naszych aplikacjach nie ma żadnych braków.

00:03:04.540 --> 00:03:10.330
Dlatego właśnie usłyszysz, jak mówię w dalszej części kursu, w jaki sposób chcemy

00:03:10.330 --> 00:03:16.030
zminimalizować liczbę bibliotek i narzędzi oraz zależności, które dodajemy do projektu,

00:03:16.030 --> 00:03:23.130
ponieważ każde narzędzie, każda dodana biblioteka to kolejna rzecz, którą musimy zachowajcie na szczęście dla ciebie.

00:03:23.280 --> 00:03:29.310
Wszystko, czego do tej pory nauczyliśmy się na tym kursie, najprawdopodobniej będzie stabilne i będzie

00:03:29.310 --> 00:03:36.540
działało zgodnie z oczekiwaniami, ponieważ ludzie, którzy tworzą biblioteki, nie są zainteresowani zepsuciem ani zepsucia naszych aplikacji, ponieważ

00:03:36.540 --> 00:03:40.200
w tym czasie ich biblioteki nie byłyby popularne.

00:03:40.290 --> 00:03:48.360
Dlatego starają się być jak najbardziej kompatybilni wstecz, dopóki coś nie będzie tak źle, że będą musieli dokonać

00:03:48.360 --> 00:03:49.610
przełomowych zmian.

00:03:49.620 --> 00:03:55.130
Ale, jak powiedziałem na szczęście dla nas, nasze aplikacje nadal działają z najnowszymi i największymi bibliotekami.

00:03:55.140 --> 00:03:56.960
Jeśli chcesz, możesz je zaktualizować.

00:03:57.060 --> 00:04:04.140
Ale jednocześnie, ponieważ jest to dla nas po prostu zabawny projekt i nie mamy żadnych rzeczywistych użytkowników, możemy utrzymać

00:04:04.140 --> 00:04:06.030
biblioteki takie, jakie są.

00:04:07.290 --> 00:04:08.170
Zobaczę w następnym.

00:04:08.790 --> 00:04:09.030
Konstabl.