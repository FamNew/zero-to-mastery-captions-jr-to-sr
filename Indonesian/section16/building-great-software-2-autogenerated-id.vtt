WEBVTT

00:00:01.000 --> 00:00:09.000
Selamat datang kembali sekarang kita harus memiliki pemahaman yang lebih baik tentang apa yang melihat-I CD adalah

00:00:09.000 --> 00:00:11.850
integrasi berkelanjutan pengiriman terus menerus penyebaran.

00:00:11.850 --> 00:00:14.240
Mari kita ulas apa yang telah kita pelajari sejauh ini.

00:00:14.250 --> 00:00:21.200
Sekarang Anda mungkin tidak menyadarinya tetapi Anda baru belajar praktik dasar yang menjadikan Anda seorang pengembang

00:00:21.200 --> 00:00:22.480
bintang rock.

00:00:22.500 --> 00:00:23.490
Mengapa.

00:00:23.490 --> 00:00:31.380
Karena Anda tahu bagaimana proyek perangkat lunak yang baik harus mengatur alat apa untuk menggunakan praktik apa yang harus diikuti

00:00:31.380 --> 00:00:35.290
untuk memastikan bahwa ini bukan proyek kecil yang konyol.

00:00:36.740 --> 00:00:38.740
Anda tahu apa yang dilakukan beberapa perusahaan.

00:00:38.750 --> 00:00:43.580
Beberapa perusahaan terbesar di dunia melakukan untuk memastikan bahwa mereka dapat menskala ke jutaan

00:00:44.420 --> 00:00:48.400
pengguna dan ribuan karyawan yang bekerja pada basis kode yang sama.

00:00:48.440 --> 00:00:55.160
Kami melihat bahwa memiliki sistem kode PR yang baik di mana kami terus-menerus membuat perubahan dan fitur

00:00:55.310 --> 00:01:03.590
kecil dan memiliki permintaan tarik harian yang sekarang dapat dijalankan secara otomatis dengan langkah-langkah Bill dan menguji langkah-langkah Lanting dan pemeriksaan

00:01:03.620 --> 00:01:05.250
lainnya yang kami inginkan.

00:01:05.330 --> 00:01:10.010
Kami kemudian melakukan tinjauan kode dan menggabungkan fitur baru setiap hari.

00:01:10.010 --> 00:01:16.250
Kami kemudian dapat menjelajahi hal-hal yang berbeda seperti pengiriman dan penyebaran kontinu di mana kami memiliki tes penerimaan

00:01:16.250 --> 00:01:22.220
atau penguji yang menguji perangkat lunak kami dan kemudian kami dapat secara manual digunakan untuk produksi kepada

00:01:22.220 --> 00:01:25.910
pengguna aktual kami atau kami dapat memiliki yang otomatis juga.

00:01:25.910 --> 00:01:35.330
Dan diagram ini adalah apa yang sebagian besar perusahaan baik ikuti proses ini yang membutuhkan sedikit waktu hingga Anda

00:01:35.330 --> 00:01:38.360
benar-benar memiliki kode dalam produksi.

00:01:38.420 --> 00:01:45.890
Kami menulis kode kami di komputer kami sebagai pengembang yang menggunakan alat seperti Lanting naskah dan pengujian untuk

00:01:45.890 --> 00:01:47.870
memastikan kode kami lulus.

00:01:47.900 --> 00:01:53.560
Kami kemudian dapat memiliki sesuatu seperti Prete commit Huck yang memeriksa kode kami mungkin membuatnya cukup

00:01:53.570 --> 00:01:57.470
adil sehingga kami memiliki format yang konsisten dengan sisa proyek.

00:01:57.530 --> 00:02:04.250
Kami kemudian membuat permintaan kolam itu pada dapatkan Hobb dan circle s. saya segera setelah permintaan kumpulan itu tiba mengatakan oh OK,

00:02:04.320 --> 00:02:09.980
biarkan saya menjalankan beberapa tes untuk Anda memastikan bahwa Anda tidak akan mengacaukan basis kode kami menjalankan

00:02:09.980 --> 00:02:10.770
beberapa tes.

00:02:10.790 --> 00:02:12.110
Segalanya berlalu.

00:02:12.110 --> 00:02:16.490
Anda kemudian pergi ke rekan tim Anda dan orang lain meninjau kode Anda.

00:02:16.490 --> 00:02:18.020
Kami melakukan tinjauan kode.

00:02:18.020 --> 00:02:24.830
Mereka mengatakan mungkin kita bisa memperbaikinya, mungkin kita bisa melakukan ini jika mereka tidak menerima Anda mulai dari sini

00:02:24.830 --> 00:02:26.030
dan mengulang semuanya.

00:02:26.120 --> 00:02:30.530
Jika mereka menerima mereka akan menggabungkan perubahan Anda dan untuk mendapatkan bantuan.

00:02:30.770 --> 00:02:34.780
Dan di sebagian besar perusahaan Anda akan melihat sesuatu seperti penggelaran ke pementasan.

00:02:34.790 --> 00:02:40.400
Pementasan adalah semacam lapangan latihan untuk memastikan bahwa sebelum kita mengirimkannya ke

00:02:40.400 --> 00:02:43.280
dunia nyata semuanya berfungsi seperti seharusnya.

00:02:43.640 --> 00:02:48.470
Kita dapat menambahkan proses bukan variabel lingkungan pementasan yang sama.

00:02:48.650 --> 00:02:54.980
Dan kita dapat memiliki beberapa pernyataan if dalam basis kode kita yang mengatakan jika ini adalah staging mungkin menguji

00:02:54.980 --> 00:02:58.190
kecepatan aplikasi kita berapa banyak CPQ yang Anda gunakan.

00:02:58.190 --> 00:03:03.380
Jika terhubung ke basis data dengan benar dan Anda ingin meniru pementasan sebanyak yang

00:03:03.380 --> 00:03:07.920
Anda bisa dengan produksi seperti memiliki database yang mirip, informasi yang sama.

00:03:08.030 --> 00:03:13.690
Semakin banyak pementasan memiliki kesamaan dengan produksi, semakin banyak kita dapat berasumsi bahwa segala sesuatu akan

00:03:13.700 --> 00:03:15.770
berfungsi begitu kita mendorong produksi.

00:03:15.770 --> 00:03:23.450
Kami kemudian memiliki sesuatu seperti pengujian penerimaan di mana mungkin tester atau toner produk atau bahkan Brunow menguji pada

00:03:23.660 --> 00:03:29.020
server pementasan untuk memastikan semuanya berfungsi dengan baik jika fitur baru kami berfungsi.

00:03:29.210 --> 00:03:35.580
Dan setelah semua itu dilewati maka akhirnya kita dapat menganggap OK kodenya aman.

00:03:35.630 --> 00:03:44.060
Mari kita gunakan untuk produksi dengan produksi variabel lingkungan dan semuanya baik-baik saja semuanya baik-baik saja tetapi kita

00:03:44.150 --> 00:03:45.340
belum selesai.

00:03:45.380 --> 00:03:48.660
Kami memiliki sesuatu yang disebut tes asap dan asap.

00:03:48.680 --> 00:03:55.190
Ya, jika Anda akan menerapkan setiap komit secara otomatis ke produksi, Anda perlu memastikan bahwa Anda memiliki

00:03:55.190 --> 00:03:59.020
cara yang baik untuk diberi tahu jika terjadi kesalahan.

00:03:59.810 --> 00:04:03.000
Jadi terkadang perubahan baru tidak akan pecah.

00:04:03.050 --> 00:04:04.100
Produksi segera.

00:04:04.100 --> 00:04:11.630
Dan itu lulus semua tes ini tetapi semua mungkin menyebabkan CPQ Anda atau konsumsi memori menjadi

00:04:11.630 --> 00:04:13.600
sangat tinggi dan putus.

00:04:13.760 --> 00:04:19.610
Jadi, Anda mungkin ingin memiliki empat tes asap pemantauan waktu nyata dari server produksi Anda

00:04:19.610 --> 00:04:27.380
untuk dapat melacak penyimpangan atau metrik yang menunjukkan bahwa ada sesuatu yang tidak beres dan Anda memiliki perusahaan yang tidak suka

00:04:27.380 --> 00:04:30.890
peninggalan baru yang memungkinkan Anda untuk memantau layanan Anda.

00:04:30.890 --> 00:04:37.420
Sekali lagi kami selalu memiliki alat dan Anda dapat melihat di sini bahwa itu adalah pertempuran konstan

00:04:37.420 --> 00:04:44.710
pertempuran konstan untuk memastikan bahwa tidak peduli berapa banyak coders yang kita miliki tidak peduli seberapa besar basis kode yang

00:04:44.710 --> 00:04:51.670
kita dapatkan, kita memiliki proses halus yang bagus untuk membuat semuanya mengalir dengan baik sehingga dengan saat produksi tiba,

00:04:51.670 --> 00:04:59.090
kita dapat meminimalkan risiko, risiko bahwa kita mungkin kehilangan pendapatan atau pengguna atau bahkan sekadar kepuasan biasa dengan pelanggan kita.

00:05:00.680 --> 00:05:09.260
Dan jika semua ini bekerja dan kami dapat membantu dengan ini pengembang senior sementara kemudian kami membuat semua orang senang

00:05:09.530 --> 00:05:15.820
dan itulah tujuan dari pengembang senior, pengembang senior belum tentu orang yang mengetahui fungsi paling

00:05:16.060 --> 00:05:19.900
keren dan dapat menulis yang paling pintar kode.

00:05:20.140 --> 00:05:27.370
Tidak ada pengembang senior yang memahami proses ini untuk memastikan bahwa proses ini berjalan lancar

00:05:27.370 --> 00:05:33.820
bahwa semuanya berjalan baik dengan lingkaran. i kami membuat semua tes yang diperlukan.

00:05:33.820 --> 00:05:40.750
Kami memiliki semua tes asap di tempat pengembang senior adalah seseorang yang mampu memiliki

00:05:40.750 --> 00:05:49.800
gambaran besar tentang bagaimana kita dapat membuat aliran ini dari menulis kode pada laptop pengembang untuk memasukkannya ke dalam produksi.

00:05:49.960 --> 00:05:58.350
Jika Anda dapat menguasai hal ini, maka Anda dapat mengelola tim dan mengelola proyek dan semua

00:05:58.350 --> 00:06:01.470
orang akan senang dengan Anda.

00:06:01.530 --> 00:06:02.300
Saya akan melihat yang berikutnya.