WEBVTT

00:00:06.110 --> 00:00:13.400
I już możesz zacząć widzieć rzeczy, które możemy oczyścić, po prostu możemy skopiować i wkleić

00:00:13.400 --> 00:00:24.540
tę listę, po prostu stworzyć jeszcze jedną instancję i powiedzieć, że robot filtra poprawnie mówi, że powie trzy na godzinę tylko po to, aby

00:00:24.540 --> 00:00:26.700
utrzymać to w czystości.

00:00:27.900 --> 00:00:40.780
Powie, że filtr Konst lub filtrowane roboty powinny być równe pustej tablicy.

00:00:40.840 --> 00:00:48.640
I tym razem szukamy litery J, która nie istnieje z nazwy

00:00:49.540 --> 00:00:56.790
i oczekujemy, że przefiltrowane roboty będą nazywane sztucznie filtrowanymi

00:01:00.140 --> 00:01:03.530
robotami, które daliśmy, powiedzmy.

00:01:03.740 --> 00:01:05.420
I widzimy, że coś

00:01:08.380 --> 00:01:11.280
nie działa, ponieważ Mach 2 nie jest zdefiniowany.

00:01:11.290 --> 00:01:14.700
Musimy dać to trzy.

00:01:14.820 --> 00:01:16.970
I tam to masz.

00:01:17.010 --> 00:01:24.420
Przetestowaliśmy teraz naszą stronę główną przynajmniej na stronie głównej metody filtrowanych robotów, a także mamy

00:01:27.250 --> 00:01:33.330
kilka testów migawkowych, więc spójrzmy teraz na nasz zasięg kodu, a teraz

00:01:33.340 --> 00:01:36.530
zajmijmy się testami uruchamiania NPM.

00:01:36.610 --> 00:01:39.660
Dash dash dash dash pokrycia i znowu to

00:01:44.280 --> 00:01:48.860
jest zawsze z testowaniem, zawsze jest o wiele więcej rzeczy, które mogą zrobić.

00:01:48.870 --> 00:01:56.870
Widzimy, że główna strona główna ma sto procent, ale jest procent oddziału.

00:01:56.880 --> 00:02:03.430
Testujemy tylko 50 procent oddziału i widzimy, że nieprzykrytą linią jest 28.

00:02:03.540 --> 00:02:14.230
Jeśli wrócimy, możemy przejść do głównej strony i zobaczyć, że mamy oczekujące na linię 28.

00:02:14.230 --> 00:02:16.030
Jak fajnie jest, że test mówi.

00:02:16.030 --> 00:02:16.480
W porządku.

00:02:16.600 --> 00:02:25.840
Testujemy, że lista kart jest renderowana, ponieważ zawsze testujemy z oczekiwaniem jest prawdą.

00:02:26.860 --> 00:02:33.810
Jak widać tutaj w naszych w naszych próbnych rekwizytach, które zawsze mamy, oczekuje się na fałsz.

00:02:33.850 --> 00:02:37.350
Tak więc możemy chcieć przetestować także i to, co jest prawdą.

00:02:37.510 --> 00:02:43.780
I zamierzam zostawić to tobie, aby dodać ważną koncepcję, tutaj jest to, że istnieje tak wiele

00:02:43.780 --> 00:02:45.230
sposobów na sprawdzenie.

00:02:45.280 --> 00:02:51.220
Zawsze możesz użyć raportu, który zgłosisz jako referencji, ale staraj się być mądrym o

00:02:51.220 --> 00:02:57.940
swoich testach i upewnij się, że mądrze spędzasz swój czas, ponieważ po prostu skończysz rzeczy, które możesz

00:02:57.940 --> 00:02:58.440
zrobić.

00:02:58.450 --> 00:03:00.690
Ale masz tylko ograniczony czas.

00:03:02.020 --> 00:03:03.090
To tyle na teraz.

00:03:03.250 --> 00:03:09.850
Mam nadzieję, że lepiej zrozumiesz, jak testowanie kontenerów i komponentów można ulepszyć za pomocą testów

00:03:10.180 --> 00:03:17.590
enzymatycznych i migawkowych, i oczywiście narzędzia, które są dostarczane z resztą testu, są czymś, co pozostawiam do

00:03:17.650 --> 00:03:21.030
wykonania w celu uzupełnienia komponentów i pojemników.

00:03:21.040 --> 00:03:26.100
Ale przejdźmy do działań Constance i reduktorów.

00:03:26.200 --> 00:03:29.110
Chcemy też je przetestować.

00:03:29.110 --> 00:03:33.760
A więc następne wideo, które zrobimy, właśnie to zobaczę.