WEBVTT

00:00:01.570 --> 00:00:02.640
Selamat datang kembali.

00:00:02.890 --> 00:00:04.970
Mari kita pelajari sedikit pelajaran sejarah.

00:00:05.020 --> 00:00:06.590
Anda tahu betapa saya sangat menyukainya.

00:00:06.640 --> 00:00:10.210
Selalu penting untuk bertanya mengapa alat ini dibuat.

00:00:10.270 --> 00:00:16.650
Mengapa orang menghabiskan waktu dan uang untuk membuatnya dengan alat apa pun yang kami gunakan.

00:00:16.660 --> 00:00:25.120
Jadi sebelum kita punya Dr. kami memiliki sesuatu yang disebut mesin virtualisasi dan itu semua ada di sini di sisi

00:00:25.120 --> 00:00:25.570
kiri.

00:00:27.130 --> 00:00:35.590
Kami memiliki alat-alat seperti VM ware atau kotak virtual dan mesin virtual adalah apa yang kami sebut lingkungan kotak

00:00:36.550 --> 00:00:43.510
pasir yang berisi komputer lengkap dengan perangkat lunak kernel sistem operasi perangkat keras virtualnya.

00:00:43.510 --> 00:00:49.900
Dan seperti yang Anda lihat dalam diagram ini, rasanya seperti memiliki jika Anda bisa membayangkan

00:00:50.230 --> 00:00:55.360
ini menjadi satu komputer mesin virtual seperti memiliki komputer di atasnya.

00:00:55.540 --> 00:01:01.730
Jadi aplikasi Anda berjalan di sistem operasi di komputer ini hingga berjalan di komputer yang sama.

00:01:01.780 --> 00:01:04.330
Tetapi sekali lagi sistem operasi lain.

00:01:04.570 --> 00:01:07.590
Dan Anda dapat melihatnya cukup besar.

00:01:07.600 --> 00:01:13.780
Tetapi ini memungkinkan kami untuk menyelesaikan masalah ini dengan menjalankan sesuatu dalam

00:01:13.780 --> 00:01:20.580
lingkungan yang merupakan lingkungan biru di sini lingkungan oranye lingkungan merah dengan cara yang

00:01:20.580 --> 00:01:28.380
dapat diprediksi secara konsisten dan karena ada hal-hal besar yang memiliki sistem operasi sendiri dan perpustakaan yang

00:01:28.380 --> 00:01:38.000
terkadang butuh beberapa menit bahkan untuk mem-boot aplikasi ini sekarang buruh pelabuhan datang dan mengubah ide yang Anda lihat dengan wadah

00:01:38.060 --> 00:01:45.110
yang lebih gelap mereka membungkus perangkat lunak dalam sistem file lengkap yang berisi semua dan

00:01:45.130 --> 00:01:50.300
kebutuhan untuk berjalan seperti yang kami miliki dengan mesin virtual.

00:01:50.550 --> 00:01:57.760
Anda memiliki pustaka sistem runtime alat pustaka sistem apa pun yang dapat Anda instal di server.

00:01:57.930 --> 00:02:00.320
Anda bisa menggunakannya dengan buruh pelabuhan.

00:02:00.510 --> 00:02:05.880
Dan sekali lagi ini menjamin bahwa itu akan selalu

00:02:05.880 --> 00:02:16.400
berjalan sama terlepas dari lingkungan yang dijalankannya sekarang kontainer adalah alternatif yang ringan untuk virtualisasi mesin penuh atau mesin virtual.

00:02:16.400 --> 00:02:26.130
Karena itu mereka dirancang tidak seperti mesin virtual untuk menjalankan hanya satu aplikasi pada setiap wadah.

00:02:26.900 --> 00:02:35.560
Karena mereka sangat kecil dan tipis dan ini adalah konsep populer layanan mikro yang kita bicarakan kontainer yang menggunakan

00:02:36.520 --> 00:02:43.390
sistem operasi host mereka tidak memiliki sistem operasi mereka sendiri seperti yang kita miliki dengan

00:02:43.390 --> 00:02:44.800
mesin virtual.

00:02:44.800 --> 00:02:47.270
Mereka menggunakan sistem operasi host.

00:02:47.860 --> 00:02:53.230
Dan karena itu mereka membutuhkan hanya beberapa detik dan aplikasi kontainer Anda berjalan

00:02:53.230 --> 00:03:00.390
dan berjalan jauh lebih cepat daripada yang kami miliki dengan mesin virtual sehingga dengan wadah yang lebih gelap kami

00:03:00.390 --> 00:03:07.500
dapat memiliki akses yang cepat dan mudah untuk menjalankan aplikasi tunggal kecil ini dan hanya memiliki banyak dari

00:03:07.500 --> 00:03:16.080
hal-hal ini hanya membuat wadah sebanyak yang Anda inginkan mereka hanya tumbuh dan tumbuh sebagai skala Anda karena Anda memiliki lebih banyak pengguna.

00:03:16.310 --> 00:03:21.320
Dan saat itulah Anda mulai mendapatkan hal-hal seperti orkestrasi wadah di mana Anda

00:03:21.590 --> 00:03:27.910
sekarang harus mengelola semua wadah ini yang omong-omong jika Anda pernah mendengar tentang Cabernet seperti itulah fungsinya.

00:03:30.050 --> 00:03:31.660
Jadi saya pikir kita mengerti maksudnya.

00:03:31.730 --> 00:03:33.950
Darker adalah platform wadah.

00:03:34.190 --> 00:03:41.880
Tidak seperti wadah mesin virtual yang hanya membundel perpustakaan dan pengaturan yang diperlukan untuk aplikasi Anda.

00:03:42.050 --> 00:03:48.650
Efisien ringan dan mandiri dan ini memastikan bahwa aplikasi Anda akan berjalan di

00:03:48.650 --> 00:03:51.540
mana saja dan di mana-mana.

00:03:51.650 --> 00:03:53.580
Jadi wadah itu bagus, benar.

00:03:53.990 --> 00:03:55.160
Benar.

00:03:56.460 --> 00:04:00.860
Sekarang kita sudah membahasnya. Mari kita bicara tentang wadah apa sebenarnya.

00:04:00.860 --> 00:04:05.250
Saya agak terlempar ke sekitar kata R tetapi belum benar-benar menjelaskan apa itu.

00:04:06.250 --> 00:04:10.530
Nah sebuah wadah bisa dijelaskan dengan diagram.

00:04:10.870 --> 00:04:17.980
Pertama-tama kita memiliki host yang merupakan mesin atau komputer tempat kita dapat meng-host kontainer kita.

00:04:17.980 --> 00:04:25.870
Jadi sekali lagi di bagian ini kita akan menggunakan laptop kita sebagai tuan rumah atau komputer Anda sebagai tuan rumah.

00:04:25.900 --> 00:04:33.640
Sekarang di atas host ini kita memiliki apa yang kita sebut wadah sesuatu yang kita buat dengan Dr.

00:04:33.730 --> 00:04:41.000
Dan untungnya bagi kita dengan satu komentar karena Dharker kita bisa membuat wadah

00:04:41.000 --> 00:04:48.670
ini dan di dalamnya kita memiliki sesuatu yang disebut gambar dan wadah terdiri dari gambar.

00:04:49.090 --> 00:04:57.910
Anda melihat gambar adalah apa yang digunakan dokter untuk menggabungkan aplikasi Anda ke dalam paket mandiri yang dapat hidup di dalam

00:04:57.910 --> 00:04:59.140
sebuah wadah.

00:04:59.140 --> 00:05:07.810
Jadi dalam gambar ini saya dapat mengatakan saya ingin server simpul dan gambar ini dibaca oleh dokter karena sekali lagi ini

00:05:07.840 --> 00:05:12.820
hanya sebuah file dan file ini menghasilkan wadah ini yang berjalan.

00:05:12.820 --> 00:05:15.420
Catatan untuk kita.

00:05:15.660 --> 00:05:23.760
Sekarang bagian penting dari ini adalah bahwa lingkungan di dalam wadah benar-benar terisolasi dari

00:05:23.850 --> 00:05:25.030
mesin host.

00:05:25.110 --> 00:05:29.440
Jadi tidak masalah apa yang kita jalankan di sini selama mesin ini dapat menjalankan buruh pelabuhan

00:05:29.770 --> 00:05:36.540
Kemudian dalam wadah ini kita bisa memiliki semua pustaka dan dependensi yang kita inginkan agar

00:05:36.810 --> 00:05:39.160
server note kita berfungsi.

00:05:39.230 --> 00:05:46.310
Dan omong-omong gambar ini juga memiliki sesuatu yang disebut sistem file yang dapat diunggah seperti halnya kita memiliki

00:05:46.310 --> 00:05:51.970
file di komputer kita dan ditambahkan oleh buruh pelabuhan secara otomatis di dalam wadah.

00:05:52.060 --> 00:05:54.110
Dan itulah yang kami sebut volume.

00:05:54.400 --> 00:06:02.020
Jadi kita memiliki gambar yang merupakan file yang menggambarkan apa yang harus dilakukan wadah dan di dalam wadah itu kita juga

00:06:02.020 --> 00:06:08.170
memiliki opsi untuk menggunakan sesuatu seperti sistem file seperti halnya kita memiliki file di laptop kita

00:06:08.170 --> 00:06:09.400
untuk fungsionalitas tambahan.

00:06:11.810 --> 00:06:20.020
Untuk meninjau bundel aplikasi docker Anda ke dalam gambar paket yang dapat dieksekusi mandiri dan

00:06:20.020 --> 00:06:27.340
Dharker mengeksekusi gambar ini dalam wadah ini dan lingkungan di dalam wadah sepenuhnya

00:06:27.610 --> 00:06:30.090
terisolasi dari mesin host.

00:06:30.090 --> 00:06:32.580
Sekali lagi ini adalah sesuatu yang akan kita bahas kembali.

00:06:32.650 --> 00:06:36.430
Saya akan menunjukkan kepada Anda bagaimana kami akan melakukan ini dan kami akan bekerja bersama

00:06:36.430 --> 00:06:37.750
untuk menciptakan anjing dalam bahaya.

00:06:37.750 --> 00:06:41.800
Lalu kita akan kembali ke gambar ini dan Anda akan menyadari oh ya ini semua masuk

00:06:41.800 --> 00:06:42.430
akal sekarang.

00:06:42.490 --> 00:06:43.270
Jadi tetap dengan saya.

00:06:43.270 --> 00:06:45.410
Percayalah, Anda akan mendapatkannya.

00:06:45.700 --> 00:06:50.650
Sekarang seluruh gambar ini kedengarannya cukup rumit.

00:06:51.100 --> 00:06:58.020
Untungnya bagi Anda ada sesuatu yang disebut Dharker hop dan itulah yang membuat buruh pelabuhan produk yang luar biasa.

00:06:59.990 --> 00:07:11.440
Anda melihat Dr. Hobb cukup hub dot dot dot com adalah jenis seperti NPM dan Javascript dan dengan hub Dokter

00:07:11.440 --> 00:07:16.810
menyediakan toko seperti situs Web di mana Anda dapat mencari dan mengunduh gambar untuk digunakan.

00:07:16.810 --> 00:07:23.800
Sudah ada pra-ditulis oleh orang-orang dan sangat diadopsi oleh banyak orang dan banyak organisasi sehingga

00:07:23.800 --> 00:07:28.350
itu adalah sesuatu yang kebanyakan orang bekerja menggunakan Dharker.

00:07:28.450 --> 00:07:34.780
Sebagai contoh jika saya gulir ke bawah saya melihat bahwa tidak ada gambar simpul yang dapat saya gunakan jika saya

00:07:34.900 --> 00:07:35.820
mengklik detail.

00:07:36.160 --> 00:07:37.090
Saya melihat bahwa.

00:07:37.270 --> 00:07:40.370
Baiklah saya punya versi simpul berbeda yang bisa saya gunakan.

00:07:40.390 --> 00:07:46.840
Katakanlah saya ingin menggunakan sembilan koma sebelas saya bisa mengklik pada dok atau file di sini dan lihat itu.

00:07:46.990 --> 00:07:53.050
Meskipun ini mungkin terlihat seperti omong kosong sekarang kita akan membahas ini sedikit dan terlambat

00:07:53.050 --> 00:07:59.910
pada video tetapi ini adalah gambar buruh pelabuhan dengan hanya menggunakan file ini dan menjalankan buruh pelabuhan dengannya.

00:08:00.030 --> 00:08:07.590
Ini akan membuat wadah yang memiliki simpul versi 9 sudah disiapkan untuk kita dan Anda dapat melihat di sini bahwa kita memiliki banyak

00:08:07.590 --> 00:08:12.380
hal yang dapat kita jalankan dan kita dapat postscripts kita dapat menjalankan Monga kita dapat

00:08:12.390 --> 00:08:17.170
lari ke bawah untuk membaca S yang kita Akan dibicarakan dan begitu banyak hal.

00:08:17.630 --> 00:08:22.250
Jadi seperti NPM Anda dapat menggunakan paket-paket ini yang sudah ditentukan sebelumnya untuk kami.

00:08:22.350 --> 00:08:25.720
Dan sebagian besar waktu Anda akan melakukan itu daripada menulis sendiri.

00:08:26.100 --> 00:08:31.060
Tapi saya akan menunjukkan kepada Anda bagaimana menulis beberapa file Daco Anda sendiri karena mengapa tidak.

00:08:33.170 --> 00:08:39.350
Jadi sekarang kita memiliki pemahaman dasar tentang apa yang dilakukan dokter dan wadah apa yang

00:08:39.350 --> 00:08:45.450
ada di bagian selanjutnya kita akan melakukan sesuatu seperti ini dalam pengaturan pengembangan kita.

00:08:45.530 --> 00:08:52.490
Kita akan membuat wadah buruh pelabuhan yang terhubung ke ujung depan aplikasi otak pintar ujung

00:08:52.490 --> 00:08:53.720
depan kita.

00:08:53.750 --> 00:08:59.450
Sekarang dalam wadah Stockard ini kita sudah memiliki API express node kami, tetapi kami

00:08:59.450 --> 00:09:04.760
juga akan membawa dalam postscript kami serta akhirnya rattus untuk manajemen sesi.

00:09:04.790 --> 00:09:13.160
Sekali lagi muncul di bagian yang akan datang dan dengan meletakkan semua ini dalam sebuah wadah, kita bisa

00:09:13.160 --> 00:09:21.020
menjalankan satu perintah saja dan membuat server API database membaca database-nya semua berjalan memulai boot dan mulai

00:09:21.020 --> 00:09:23.780
berkumpul dalam satu wadah ini.

00:09:23.780 --> 00:09:25.280
Ini akan menjadi seperti sihir.

00:09:25.850 --> 00:09:32.240
Dan omong-omong di sebagian besar pengaturan produksi yang Anda lihat dengan perusahaan modern Anda akan melihat sesuatu seperti

00:09:32.240 --> 00:09:38.270
ini di mana Anda memiliki aplikasi sisi klien kami otak cerdas kami yang memiliki semacam penyeimbang

00:09:38.930 --> 00:09:45.260
beban dan penyeimbang beban ini hanya mendistribusikan ke server API yang berbeda sehingga bahwa jika kita memiliki banyak

00:09:45.680 --> 00:09:52.940
lalu lintas kita tidak menyumbat satu server API dan kita memiliki klon server API ini karena mereka hanya gambar Gawker yang

00:09:53.510 --> 00:09:54.110
sederhana.

00:09:54.200 --> 00:09:57.690
Jadi dengan hanya menciptakan lebih banyak dan lebih banyak wadah itu mudah bagi kita untuk melakukannya.

00:09:57.950 --> 00:10:02.240
Dan jangan khawatir, saya akan menunjukkan cara melakukan load balancer juga di video mendatang.

00:10:02.750 --> 00:10:09.350
Dan server API ini sekarang terhubung ke database seperti postscript dan kami dapat memiliki beberapa database lagi untuk

00:10:09.350 --> 00:10:10.730
menangani semua beban.

00:10:10.970 --> 00:10:18.440
Dan juga mereka dapat terhubung ke sesuatu seperti Pretis yang akan kita bicarakan tentang mengelola caching atau manajemen

00:10:18.440 --> 00:10:27.020
sesi dan Anda dapat melihat dengan memiliki buruh pelabuhan kami hanya dapat dengan mudah mengkloning dan membuat lebih banyak salinan saat

00:10:27.020 --> 00:10:30.110
kami meningkatkan skala dan seiring pertumbuhan kami.

00:10:30.240 --> 00:10:36.080
Tapi saya ingin menunjukkan diagram ini hanya untuk referensi untuk menunjukkan kepada Anda seperti apa aplikasi produksi itu.

00:10:36.080 --> 00:10:43.790
Gagasannya adalah bahwa kami dapat membuat layanan kecil ini yang dapat kami duplikasi sehingga seiring meningkatnya permintaan kami terhadap

00:10:43.820 --> 00:10:48.140
aplikasi seiring bertambahnya basis pengguna kami, kami dapat tumbuh dengannya.

00:10:49.290 --> 00:10:50.250
Baiklah.

00:10:50.580 --> 00:10:54.030
Sudah waktunya untuk memulai dengan buruh pelabuhan dan video berikutnya.

00:10:55.490 --> 00:10:56.810
Saya akan lihat yang itu.

00:10:56.850 --> 00:10:57.140
Bebai.