WEBVTT

00:00:01.110 --> 00:00:09.950
Porozmawiajmy o złożoności a prostocie, to jest naprawdę ważne, o czym często się nie

00:00:09.950 --> 00:00:11.120
mówi.

00:00:11.450 --> 00:00:17.390
Opuściłem to do końca kursu, ponieważ nie docenisz go i nie zrozumiesz

00:00:17.450 --> 00:00:21.970
go, chyba że masz całą wcześniejszą wiedzę z filmów.

00:00:22.010 --> 00:00:27.380
W swojej karierze poznałem wielu świetnych programistów i liderów.

00:00:27.380 --> 00:00:31.620
Mieli wiele wspaniałych cech i wszyscy byli świetnymi programistami.

00:00:31.760 --> 00:00:38.730
Miały jednak jedną wspólną cechę, która oddzielała ich od wszystkich innych twórców Ivera.

00:00:38.900 --> 00:00:42.410
I nawet nie sądzę, że zdali sobie sprawę, że to mają.

00:00:42.690 --> 00:00:45.940
Jest to coś tak prostego, że często jest pomijane.

00:00:46.090 --> 00:00:50.650
I w tym filmie chcę przejrzeć to i coś, co naprawdę wierzę, może

00:00:51.550 --> 00:00:55.770
ci pomóc w twojej karierze i zawsze wybierać prostotę ponad złożoność.

00:00:56.950 --> 00:01:02.230
Wiem, że to odważne stwierdzenie, ale wraz z postępem w karierze

00:01:02.440 --> 00:01:06.480
będziesz się uczyć coraz bardziej i bardziej pewnie.

00:01:06.670 --> 00:01:10.660
Zaczynasz rozumieć skomplikowane tematy informatyczne.

00:01:10.660 --> 00:01:17.180
Zaczniesz czasem drwić z młodszych programistów, którzy zadają głupie pytania.

00:01:17.220 --> 00:01:18.950
Po pierwsze nigdy tego nie rób.

00:01:19.170 --> 00:01:22.230
Ty też byłeś młodszym deweloperem.

00:01:22.230 --> 00:01:31.080
Tak więc wszyscy inni zawsze akceptują pytania, ale nieuchronnie będziesz chciał pokazać swoje umiejętności, czasami możesz próbować dokonywać wyborów

00:01:32.440 --> 00:01:37.680
w kodowaniu, które sprawiają, że ludzie mówią, że jest tak inteligentny.

00:01:37.690 --> 00:01:42.110
Albo nie mam pojęcia, co właśnie cytowali, ale wygląda tak fajnie.

00:01:42.130 --> 00:01:43.540
To nie jest dobre.

00:01:43.570 --> 00:01:50.560
Zbyt często widzę, jak programiści wybierają złożone opcje lub style kodowania, aby wydawać się inteligentni i zdolni,

00:01:51.340 --> 00:01:57.380
lub po prostu użyć nowej, fajnej funkcji lub sztuczki, której się ostatnio nauczyli.

00:01:57.390 --> 00:02:06.430
Teraz sekretem, którego używają najlepsi programiści, jest to, że zawsze wybierają prostotę ponad złożoność.

00:02:07.220 --> 00:02:12.020
Pisanie kodu nie jest miarą tego, jak inteligentny jesteś i ile rzeczy wiesz.

00:02:12.020 --> 00:02:16.450
Pisanie kodu polega na tworzeniu czegoś, co jest dobrej jakości.

00:02:16.450 --> 00:02:18.120
Co mam przez to na myśli?

00:02:18.260 --> 00:02:21.320
Dobry kod to samo dokumentowanie.

00:02:21.530 --> 00:02:27.990
Ktoś nowy może łatwo przyjrzeć się twojemu kodowi i zrozumieć, co robi.

00:02:28.160 --> 00:02:32.920
Od razu dobry kod minimalizuje również błędy.

00:02:32.930 --> 00:02:38.630
Pozwala ludziom nie dodawać błędów na wierzchu, ponieważ jest jasny i zwięzły.

00:02:38.630 --> 00:02:45.710
Łatwo odczytać prostotę w kodzie sprawia, że twój kod jest czytelny tak, jakbyś

00:02:45.710 --> 00:02:48.260
właśnie czytał angielski podręcznik.

00:02:48.330 --> 00:02:51.420
Ale czekaj czasami, musisz napisać skomplikowany kod.

00:02:51.450 --> 00:02:58.710
Nie każda osoba będzie w stanie zrozumieć twój kod i to prawda, ale złożoność i

00:02:59.250 --> 00:03:02.410
prostota są na spektrum nie binarnym.

00:03:02.430 --> 00:03:06.040
Nie jest to ani uproszczone, ani złożone.

00:03:06.150 --> 00:03:08.100
To znaczy, że nie jest dobrze czy źle.

00:03:08.250 --> 00:03:09.440
Czarny i biały.

00:03:09.630 --> 00:03:17.160
Chodzi o próbę zminimalizowania złożoności kodu, o ile pamiętasz, chociaż piszemy kod, by

00:03:17.160 --> 00:03:19.310
rozmawiać z maszynami.

00:03:19.530 --> 00:03:24.690
Maszyny, które ułatwiają komunikację i ułatwiają nam życie.

00:03:24.690 --> 00:03:32.220
Więc następnym razem, gdy napiszesz kod, weź głęboki oddech, powiedz sobie, co mogę zrobić, aby ten kod był

00:03:32.550 --> 00:03:37.390
prosty, aby ktokolwiek mógł go zrozumieć, jednocześnie zachowując mój cel.

00:03:37.440 --> 00:03:38.940
Nie muszę się pochwalić.

00:03:38.950 --> 00:03:41.620
Jestem świadomy tego, co wiem i co mogę zrobić.

00:03:41.670 --> 00:03:51.380
Pozwól mi napisać kod, który jest łatwy do zrozumienia dla ludzi, aby zrozumieć, aby zawsze wybierać prostotę ponad

00:03:51.380 --> 00:03:52.040
złożoność.