WEBVTT

00:00:01.180 --> 00:00:02.190
Du-te înapoi.

00:00:02.310 --> 00:00:07.020
Să învățăm mai multe tipuri pe care le putem folosi cu ajutorul tiparului.

00:00:07.020 --> 00:00:10.710
Primul este ceva numit elev.

00:00:11.490 --> 00:00:14.090
Și de felul în care vin aceste tipuri.

00:00:14.220 --> 00:00:21.060
Ei bine, unele limbi de programare au de fapt acele tipuri despre care vom vorbi despre și Javascript se întâmplă doar

00:00:21.060 --> 00:00:27.630
să nu le aibă nu înseamnă că este un lucru rău, dar tipografia ne permite să le folosim efectiv ceea

00:00:27.630 --> 00:00:30.060
ce este o caracteristică destul de frumos.

00:00:31.390 --> 00:00:34.470
Deci este o trupă.

00:00:34.810 --> 00:00:47.540
Ei bine, cred ca arata ca ai putea sa dai seama ce trup este sa spunem sa

00:00:52.930 --> 00:01:05.630
lase Foskett string si numar si acum cosul va avea un baschet si cinci in matrice.

00:01:05.920 --> 00:01:09.730
Dacă salvez acest lucru, totul funcționează.

00:01:09.730 --> 00:01:19.090
Și asta eo tuplă pe care o poți defini în această sintaxă și ai diferite tipuri în interiorul ei, astfel

00:01:19.480 --> 00:01:30.470
încât, dacă dintr-un anumit motiv comanda mea se schimbă și eu fac 5 și acum Baskett lasă-mă să mă asigur că adaug un șir.

00:01:30.570 --> 00:01:39.790
Am o eroare deoarece așteaptă acest tip specific și acest tip de comandă și poate veni foarte util pentru anumite

00:01:39.790 --> 00:01:44.730
lucruri pe care nu le puteți folosi de multe ori.

00:01:44.740 --> 00:01:53.350
Dar, din nou, așa cum am spus doar SYNNEX caracteristica dvs. puteți utiliza un alt unul care este foarte

00:01:53.350 --> 00:02:01.880
popular, mai ales pentru că există într-o mulțime de limbi de programare este ceva numit enew pentru nenumărate.

00:02:01.890 --> 00:02:10.160
Și aici putem face ceva de genul asta putem spune în dimensiunea Gnome pe care o vedeți că obținem acest lucru.

00:02:10.330 --> 00:02:18.580
Deci, acest lucru poate fi orice ne dorim și de obicei îl

00:02:18.580 --> 00:02:28.610
valorificăm și vom spune cu paranteze curbate că echivalența unui mic mediu este egală cu două.

00:02:28.620 --> 00:02:36.490
Acum să presupunem că valoarea mare este egală cu 3.

00:02:36.570 --> 00:02:52.960
Și acum, folosind acest tip nou, pot spune că dimensiunea dimensiunii Lassez trebuie să fie un șir și să spunem egal cu mărimea ce înseamnă asta să salvăm și

00:02:57.750 --> 00:03:00.810
să vedem ce se întâmplă.

00:03:00.930 --> 00:03:02.700
Nu mai am ani.

00:03:02.910 --> 00:03:05.010
Se pare că funcționează.

00:03:05.040 --> 00:03:08.500
Nu primesc nici o eroare, dar dacă mă duc la tip Dodge J. S.

00:03:11.260 --> 00:03:14.740
Cine am niște ieșiri funny aici.

00:03:15.070 --> 00:03:20.270
Dar seamănă și cu mărimea pe care o primesc.

00:03:20.280 --> 00:03:22.280
Ar trebui să pui mediu.

00:03:22.720 --> 00:03:23.900
Să testăm această teorie.

00:03:23.920 --> 00:03:30.970
Am de gând să spun Console du-te nume dimensiune jurnal.

00:03:31.060 --> 00:03:32.330
Vrei să salvezi.

00:03:32.690 --> 00:03:37.930
Am de gând să închid compilatorul pentru acum și doar rulați nod tipcript.

00:03:38.010 --> 00:03:39.570
Da, da.

00:03:39.620 --> 00:03:42.310
Și eu devin mediu.

00:03:42.370 --> 00:03:48.460
Știu că acest lucru poate deveni puțin confuz, dar din nou ceva pe care îl puteți citi cu

00:03:48.460 --> 00:03:55.410
numere, puteți avea o structură de date diferită pe care o puteți utiliza pentru a vă organiza informațiile pentru programul dvs.

00:03:55.420 --> 00:04:03.850
De exemplu, dacă am avea un coș de cumpărături și am avut dimensiuni medii și mari mici și fiecare valoare a mediului mic

00:04:03.850 --> 00:04:07.080
și mare a fost 1 2 și 3.

00:04:07.090 --> 00:04:15.250
Ei bine, putem folosi numele dimensiunii pentru a ne asigura că obținem valoarea corectă.

00:04:17.020 --> 00:04:25.200
Acum să spunem că vrem să avem în loc de mărimea 2 să spunem că vom

00:04:28.250 --> 00:04:32.530
avea o mărime mică de 5 pe compilator.

00:04:35.040 --> 00:04:40.620
Tipul mărimei mici nu este atribuit tipului de șir, dar dacă mă

00:04:43.170 --> 00:04:52.930
schimb doar pentru a număra totul funcționează, deoarece mărimea mică este acum egală cu 1 și puteți vedea dacă hover peste aceasta

00:04:52.930 --> 00:04:57.220
îmi arată că dimensiunea mică este egală cu 1.

00:04:57.220 --> 00:05:00.160
Acum, când ar fi util acest lucru.

00:05:00.430 --> 00:05:09.560
Ei bine, în num-uri ne permite să definim un set de constanți numiți așa cum avem aici și folosindu-ne putem face mai ușor

00:05:09.560 --> 00:05:17.540
să documentăm intenția sau să creăm un set de clase distincte cum ar fi dimensiunile sau poate că dorim să

00:05:17.900 --> 00:05:25.050
avem direcții ca în sus la dreapta și la fiecare direcție are o valoare asociată cu ea.

00:05:26.390 --> 00:05:33.570
Din nou, puteți citi mai multe despre documentația lor, este doar un alt instrument util.

00:05:33.570 --> 00:05:37.350
Bine, să facem o pauză și o să văd în următorul.