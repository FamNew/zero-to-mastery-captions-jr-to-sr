WEBVTT

00:00:02.490 --> 00:00:03.430
Selamat datang kembali.

00:00:03.430 --> 00:00:08.720
Saya ingin menambahkan catatan singkat tentang pemecahan kode ketika menyangkut pemecahan kode.

00:00:08.740 --> 00:00:11.270
Ada beberapa opsi.

00:00:11.350 --> 00:00:18.360
Ada sesuatu yang disebut Chungking berbasis hafalan atau memecah file javascript berdasarkan rute.

00:00:18.370 --> 00:00:24.500
Seperti yang kami lakukan dan contohnya dan ini adalah cara yang sangat bagus untuk melakukannya.

00:00:24.520 --> 00:00:27.380
Sebagian besar waktu inilah yang ingin Anda lakukan.

00:00:27.600 --> 00:00:36.020
Tetapi ada juga sesuatu yang disebut komponen berbasis Chongqing di mana Anda dapat memecahkan kode tidak hanya

00:00:36.040 --> 00:00:39.560
di tingkat jalan tetapi pada tingkat komponen.

00:00:39.560 --> 00:00:42.070
Sekarang kapan Anda ingin melakukan itu.

00:00:42.070 --> 00:00:48.910
Misalnya, jika beranda Anda benar-benar sangat besar, mungkin Anda tidak ingin memuat

00:00:48.910 --> 00:00:50.300
semua javascript.

00:00:50.380 --> 00:00:56.890
Mungkin Anda memiliki bilah sisi kecil di sini tempat Anda mengklik dan bilah menu muncul.

00:00:56.890 --> 00:00:59.320
Mungkin kita tidak ingin itu dimuat.

00:00:59.680 --> 00:01:07.980
Dalam hal ini Anda dapat memiliki pemisahan kode tingkat komponen tempat Anda menghapus javascript untuk bilah menu samping ini dan

00:01:08.070 --> 00:01:15.510
hanya mengaktifkannya ketika pengguna mengklik tombol dan karena javascript untuk itu harus kecil itu harus memuat cukup cepat

00:01:15.510 --> 00:01:22.580
sehingga aplikasi Anda lebih besar dan lebih besar Anda ingin berpikir tentang pemecahan kode dasar Rob dan

00:01:22.640 --> 00:01:28.100
juga pemecahan kode berbasis komponen apa pun yang sesuai dengan kebutuhan Anda.

00:01:28.100 --> 00:01:30.520
Setiap proyek berbeda dengan Anda ingin memikirkannya.

00:01:31.300 --> 00:01:39.320
Akhirnya re-act memiliki dokumentasi yang sangat bagus tentang pemecahan kode dan bagaimana melakukannya.

00:01:39.550 --> 00:01:46.330
Dan mereka bahkan menunjukkan kepada Anda cara yang bagus untuk melakukan pemecahan kode dengan router re-act yang lagi-lagi dapat Anda gunakan untuk

00:01:46.330 --> 00:01:51.670
pemecahan kode dan sesuatu yang disebut re-act loadable yang merupakan perpustakaan yang bagus untuk Anda lakukan.

00:01:51.670 --> 00:01:52.420
Pemecahan kode.

00:01:52.680 --> 00:01:59.870
Saya suka tag line mereka di sini tetapi Riak loadable membuatnya sangat mudah untuk melakukan pemecahan kode sehingga Anda

00:01:59.870 --> 00:02:03.690
bahkan tidak perlu mengimplementasikan komponen async seperti yang kami lakukan.

00:02:05.060 --> 00:02:11.670
Saya sangat menyarankan Anda memeriksanya serta bertindak kembali router dan dokumentasi di situs web bertindak

00:02:11.670 --> 00:02:12.560
kembali.

00:02:12.590 --> 00:02:14.050
Ada banyak cara untuk melakukannya.

00:02:14.150 --> 00:02:20.410
Pada akhirnya idenya sama, bagaimana kita bisa mengirimkan jumlah javascript paling sedikit kepada pengguna.

00:02:20.420 --> 00:02:23.740
Baiklah jika Anda ingin maju pasti periksa ini.

00:02:23.740 --> 00:02:28.150
Kalau tidak, untuk video berikutnya Alcyone yang satu per satu.