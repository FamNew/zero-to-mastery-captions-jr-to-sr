WEBVTT

00:00:01.620 --> 00:00:03.100
Bawa mereka kembali.

00:00:03.100 --> 00:00:09.760
Sekarang apa yang akan saya bicarakan dalam video ini Anda hanya harus percaya pada saya jika Anda belum

00:00:09.760 --> 00:00:11.300
bekerja di tim besar.

00:00:11.410 --> 00:00:14.280
Sulit membayangkan masalah ini.

00:00:14.350 --> 00:00:20.860
Dan salah satu alasan utama mengapa perusahaan takut merekrut pengembang junior adalah karena mereka

00:00:20.860 --> 00:00:23.820
tidak memiliki pengalaman dengan proses ini.

00:00:24.720 --> 00:00:29.190
Jadi saya tahu itu bukan cara terbaik bagi saya untuk hanya mengatakan hei percayalah padaku.

00:00:29.190 --> 00:00:30.550
Ikuti saja.

00:00:30.720 --> 00:00:33.970
Tapi untuk yang ini mari kita lakukan.

00:00:33.980 --> 00:00:36.970
Percayalah pada saya bahwa saya telah menghadapi masalah ini.

00:00:36.980 --> 00:00:43.880
Saya telah membantu menerapkan pola dan perusahaan ini dan mereka benar-benar sangat penting

00:00:43.880 --> 00:00:47.430
untuk diketahui terutama sebagai pengembang senior.

00:00:47.440 --> 00:00:49.730
Sekarang mari kita kembali ke jalurnya.

00:00:49.790 --> 00:00:59.580
Anda melihat setiap proyek biasanya dimulai dengan proyek yang diatur Anda memutuskan pada struktur folder Anda mungkin memikirkan langkah-langkah membangun

00:00:59.580 --> 00:01:06.680
seperti menyiapkan paket web atau menggunakan aplikasi buat kembali tindakan tetapi kemudian Anda juga ingin

00:01:06.680 --> 00:01:10.630
mengatur apa yang kami sebut integrasi berkelanjutan.

00:01:10.680 --> 00:01:16.890
Semakin cepat Anda mengaturnya, semakin banyak standar yang akan dimiliki basis kode Anda dan semakin sedikit sakit

00:01:16.890 --> 00:01:23.340
kepala yang Anda miliki di kemudian hari, integrasi berkelanjutan adalah sesuatu yang terjadi atau harus terjadi pada awal

00:01:23.340 --> 00:01:24.050
proyek.

00:01:25.550 --> 00:01:31.710
Dan kemudian Anda bisa perlahan mulai memperluas ke hal-hal seperti pengiriman terus menerus dan penyebaran berkelanjutan.

00:01:31.760 --> 00:01:37.690
Suatu hari saya berulang kali mengatakan ini dari pengalaman jika Anda bekerja untuk startup dan Anda mulai

00:01:37.690 --> 00:01:43.410
dari awal pergi ke bos Anda dan biarkan dia tahu mengapa Anda perlu mengatur ini segera.

00:01:43.450 --> 00:01:48.600
Dalam jangka panjang seiring pertumbuhan tim, mereka akan memiliki lebih sedikit bug dan kode yang lebih mudah dikelola.

00:01:48.700 --> 00:01:55.940
Mereka akan berpikir jika Anda seorang superstar yang sekarang menggunakan perangkat lunak lama untuk melakukan hal ini dan semua

00:01:56.770 --> 00:02:04.190
orang Stiger mengerjakan fitur atau bug, katakanlah kami memiliki tim yang terdiri dari 10 pengembang, maka mereka semua mendorong

00:02:04.700 --> 00:02:11.760
semua perubahan mereka ke sesuatu seperti mendapatkan bantuan di cabang dan kemudian hanya akan duduk di sana sampai

00:02:11.760 --> 00:02:16.800
katakanlah Jumat di mana mereka akan menunggu dan mereka semua akan bergabung.

00:02:16.820 --> 00:02:24.430
Ada perubahan sekaligus ke cabang utama Anda akan mendapatkan konflik dan panik sebelum akhir pekan dan orang harus

00:02:24.850 --> 00:02:29.600
memperbaiki kode mereka karena mereka melanggar bagian lain dari kode.

00:02:29.740 --> 00:02:36.160
Sekarang integrasi berkelanjutan menghindari hal ini dengan meminta pembuat kode membuat permintaan polling setiap hari muncul untuk dikuasai

00:02:36.280 --> 00:02:37.330
setiap hari.

00:02:37.330 --> 00:02:45.300
Penting bagi pengembang untuk mengintegrasikan perubahan mereka sesegera mungkin di repositori utama.

00:02:45.380 --> 00:02:52.340
Jika Anda terlalu lama menempatkan kode di kantor cabang atau workstation maka Anda berisiko terkena

00:02:52.370 --> 00:02:57.670
terlalu banyak konflik dan semua fitur ini tidak bekerja bersama.

00:02:59.610 --> 00:03:07.650
Dengan mengintegrasikan kode Anda lebih awal, Anda mengurangi cakupan perubahan yang membuatnya lebih mudah bagi orang untuk memahami

00:03:07.650 --> 00:03:10.130
konflik atau ketika Anda memilikinya.

00:03:10.380 --> 00:03:14.010
Dan ada juga yang jauh lebih kecil sekarang.

00:03:14.240 --> 00:03:22.220
Agar kami dapat membuat permintaan keren dan ulasan kode harian serta penggabungan harian untuk dikuasai seperti yang

00:03:22.370 --> 00:03:26.640
ingin kami lakukan di sini, kami membutuhkan sedikit bantuan.

00:03:27.160 --> 00:03:32.890
Untungnya bagi kami ada alat di luar sana yang dapat kami gunakan termasuk

00:03:32.890 --> 00:03:41.870
yang gratis yang dapat membantu proses ini dan membantu kami menerapkan integrasi terus menerus sehingga kami beralih dari sini menjadi seperti ini.

00:03:41.880 --> 00:03:46.790
Satu hal yang mungkin Anda perhatikan di sini adalah bahwa kami telah menambahkan beberapa hal.

00:03:46.790 --> 00:03:55.800
Salah satunya adalah bahwa kita sekarang memiliki tes yang menghubungkan mungkin naskah. Jadi kita memiliki pengetikan statis untuk menghindari kesalahan.

00:03:55.880 --> 00:04:01.960
Kami menjalankannya di komputer sebagai pengembang secara lokal saat kami mengerjakan fitur.

00:04:02.480 --> 00:04:08.660
Dan kemudian kita mungkin memasukkannya melalui sesuatu seperti purtier yang akan kita bicarakan tentang memformat kode Anda

00:04:08.690 --> 00:04:14.660
dengan cara standar sehingga meskipun memiliki semua pengembang ini semua kode akan terlihat sama dan itu

00:04:14.660 --> 00:04:16.010
akan lebih cantik.

00:04:16.830 --> 00:04:20.090
Dan kode itu naik untuk mendapatkan bantuan.

00:04:20.460 --> 00:04:28.890
Dan di sini di dapatkan hub sebelum ada ulasan kode atau sebelum kami melakukan penggabungan, kami meneruskan permintaan

00:04:28.890 --> 00:04:35.210
tarikan ke salah satu alat ini yang akan menjalankan beberapa tes untuk kami.

00:04:35.340 --> 00:04:41.010
Dan di sini saya memiliki lingkaran C. SAYA. alat yang akan kita gunakan dalam beberapa video

00:04:41.010 --> 00:04:42.710
berikutnya dan saya akan menunjukkan cara kerjanya.

00:04:42.730 --> 00:04:45.050
Ada banyak solusi di luar sana.

00:04:45.210 --> 00:04:47.010
Anda memiliki lingkaran-aku.

00:04:47.010 --> 00:04:56.570
Travis see-I melatih Chip Smith untuk kota tim bambu CII Jenkin atau banyak lainnya.

00:04:56.640 --> 00:04:59.400
Sekali lagi alat perangkat lunak datang dengan nama terbaik bukan.

00:05:00.630 --> 00:05:02.820
Pokoknya mereka bekerja dengan cara yang sederhana.

00:05:02.970 --> 00:05:09.900
Anda memiliki server yang menjalankan integrasi berkelanjutan atau pengiriman berkelanjutan.

00:05:09.900 --> 00:05:10.750
Apa artinya.

00:05:10.890 --> 00:05:18.690
Nah ketika Anda bergabung setelah Anda menguji semuanya ketika Anda membuat permintaan yang buruk untuk mendapatkan bantuan

00:05:18.720 --> 00:05:27.510
mendapatkan pekerjaan secara otomatis membiarkan lingkaran melihat-I server tahu hei kita hanya memiliki kumpulan permintaan yang dapat Anda jalankan semua

00:05:27.510 --> 00:05:35.020
tes mungkin menjalankan skrip menjalankan menjalankan pinjaman jalankan semua tes, pastikan semuanya lulus dan bangun proyek.

00:05:35.190 --> 00:05:38.470
Jika tidak ada yang gagal dalam langkah itu, semuanya baik untuk dilakukan.

00:05:38.670 --> 00:05:39.160
Baiklah.

00:05:39.180 --> 00:05:40.880
PR ini valid.

00:05:40.920 --> 00:05:47.010
Anda sekarang dapat melakukan review kode dan seseorang dapat melakukan pemeriksaan akhir pada kode dan kemudian orang dapat

00:05:47.010 --> 00:05:47.400
menggabungkannya.

00:05:47.700 --> 00:05:54.450
Jadi kami menambahkan langkah ekstra ini di sini atau mesin tambahan yang akan melakukan beberapa pekerjaan

00:05:54.480 --> 00:06:01.790
untuk kami secara otomatis setiap kali kami membuat PR dan melihat lingkaran-saya adalah perangkat lunak sebagai solusi layanan.

00:06:01.830 --> 00:06:05.380
Itu host server untuk Anda dan Anda tidak perlu khawatir tentang hal itu.

00:06:05.400 --> 00:06:09.570
Mereka akan mengelola server dan mereka akan menjalankan tes untuk Anda.

00:06:09.570 --> 00:06:16.810
Yang perlu Anda lakukan hanyalah memberi tahu mereka apa yang harus mereka jalankan seperti Circle C. SAYA. atau Travis s. saya.

00:06:17.060 --> 00:06:22.340
Jika Anda khawatir tentang keamanan atau Anda hanya ingin memiliki server sendiri dan mengelola server

00:06:22.430 --> 00:06:27.100
Anda sendiri, katakanlah bahwa Kaikohe Corp. ingin mengelola server mereka sendiri untuk integrasi berkelanjutan.

00:06:27.320 --> 00:06:33.510
Anda dapat menggunakan alat lain seperti Jenkins untuk melakukan itu yang memungkinkan Anda mengelola server sendiri.

00:06:34.510 --> 00:06:37.840
Dan ini sedikit lebih fleksibel tetapi lingkaran C. SAYA. bagus.

00:06:37.840 --> 00:06:39.460
Saya pernah bekerja dengan Sturgell CIO sebelumnya.

00:06:39.460 --> 00:06:43.750
Sangat bagus untuk digunakan dan semua alat ini sangat mirip.

00:06:43.810 --> 00:06:49.540
Jadi kita akan menggunakan lingkaran C. SAYA. sebagai contoh untuk memahami sepenuhnya

00:06:50.230 --> 00:06:58.780
apa yang dilakukan integrasi berkelanjutan bagaimana Anda dapat menambahkan bagian ini ke dalam aliran kami termasuk pra-Irak tahun termasuk tugas sehingga di masa depan ketika

00:06:58.810 --> 00:07:01.760
ia memulai Proyek Anda dapat mengimplementasikan ini sendiri.

00:07:03.060 --> 00:07:07.470
Jadi di video berikutnya kita akan memulai dengan pipa CII kami.

00:07:07.510 --> 00:07:09.240
Lihat itu satu per satu.