WEBVTT

00:00:02.690 --> 00:00:09.140
Sekarang kita sudah memiliki pemahaman yang baik tentang optimasi jaringan. Mari kita bicara tentang apa yang terjadi

00:00:09.350 --> 00:00:11.530
setelah file masuk ke browser.

00:00:12.140 --> 00:00:14.600
Bagaimana kita bisa mengoptimalkan langkah ini.

00:00:16.550 --> 00:00:17.160
Lihat.

00:00:17.180 --> 00:00:23.810
Hingga saat ini kami memiliki pandangan yang disederhanakan tentang apa yang terjadi di dalam browser.

00:00:26.140 --> 00:00:32.170
Waria tiba dan kemudian semua file-file lain ini secara ajaib tiba juga.

00:00:32.230 --> 00:00:35.220
Tetapi apa yang sebenarnya terjadi di dalam kap mesin.

00:00:35.380 --> 00:00:37.510
Raih jaket hujan Anda, kami menyelam dalam-dalam.

00:00:37.630 --> 00:00:40.130
Mari kita jelajahi.

00:00:40.170 --> 00:00:47.660
Jadi kami memiliki diagram khas kami di sini tentang klien dan server dan langkah pertama adalah

00:00:47.660 --> 00:00:54.220
baik Anda meminta situs Web dan kemudian server kembali dan ASTM semua file.

00:00:54.400 --> 00:01:03.600
Sekarang di dalam browser itu file Shemar tiba dan browser mulai membacanya dan segera setelah semua shim

00:01:03.630 --> 00:01:10.110
tiba itu mulai membuat sesuatu yang disebut dong model objek dokumen.

00:01:10.350 --> 00:01:18.540
Dan ketika browser mem-parsing atau membaca T. M. itu secara bertahap menghasilkan model pohon ini dari

00:01:19.200 --> 00:01:22.480
tag HTML yang perlu kita buat untuk situs Web tersebut.

00:01:22.950 --> 00:01:30.780
Dan Dom ini mendeskripsikan isi halaman tetapi kemudian baru mulai melakukan itu menemukan

00:01:30.810 --> 00:01:34.430
tautan gaya untuk mengambil CSSA.

00:01:34.830 --> 00:01:43.620
Jadi ia meminta file CSSA dari server dan kemudian file CSSA muncul dan ia

00:01:43.620 --> 00:01:49.140
kembali bekerja pada Dom membuat struktur situs Web.

00:01:49.240 --> 00:02:01.560
Sekarang setelah browser menerima semua CSX itu juga mulai menghasilkan model pohon bernama CSX aktif dan model objek CSSA ini

00:02:01.560 --> 00:02:10.410
memiliki informasi gaya yang melekat pada simpul pohon dan pohon ini menjelaskan bagaimana konten

00:02:10.950 --> 00:02:17.550
ditata dan berfungsi, bekerja dan bekerja serta membangun pohon

00:02:17.550 --> 00:02:28.070
ini dan kemudian tiba-tiba ia melihat tag javascript tag skrip sehingga mengambilnya dari server dan javascript berasal.

00:02:28.270 --> 00:02:30.780
Tetapi itu juga akan membaca file javascript.

00:02:31.180 --> 00:02:40.030
Dan file javascript ini dibaca oleh browser dan mengeksekusi perubahan apa pun

00:02:40.030 --> 00:02:44.540
yang diinginkan ke DOM dan CSSA.

00:02:44.580 --> 00:02:53.840
Sekarang setelah semua selesai, browser menggabungkan lengan DOM dan CSSA menjadi pohon render.

00:02:55.050 --> 00:03:02.460
Dan render tree ini memiliki informasi dari waria dan informasi gaya serta tata letak CSSA

00:03:04.110 --> 00:03:12.030
dengan menggabungkan DOM dan keberhasilan pada browser membuat render tree ini jadi tahu persis apa yang

00:03:12.030 --> 00:03:14.120
harus di-render di halaman.

00:03:14.130 --> 00:03:19.050
Jadi sekarang browser menggunakan render tree ini untuk mengetahui

00:03:21.830 --> 00:03:29.400
tata letak yang akan melupakan semua file ini dan kemudian akan mencari tahu tata letak.

00:03:29.400 --> 00:03:33.120
Di mana saya harus menempatkan barang-barang ini di satu lokasi.

00:03:33.450 --> 00:03:42.330
Yang dengan ketinggian dan keinginan adalah angka yang akan melukis semua piksel di

00:03:42.420 --> 00:03:47.040
tebak apa di akhir semua itu.

00:03:47.180 --> 00:03:52.350
Kami akhirnya menampilkan halaman Web kami di browser.

00:03:52.890 --> 00:04:01.260
Sekarang Anda mungkin berpikir bagaimana dengan gambar sementara itu terjadi setiap kali browser menemukan

00:04:01.260 --> 00:04:02.960
tag gambar.

00:04:02.970 --> 00:04:06.120
Ini akan mulai mengunduh mereka begitu melihatnya.

00:04:07.180 --> 00:04:14.690
Tetapi hal yang rapi tentang gambar itu bukan bagian dari proses ini gambar hanya diunduh di

00:04:14.690 --> 00:04:15.880
latar belakang.

00:04:16.010 --> 00:04:19.340
Dan begitu mereka dimuat mereka akan muncul di layar.

00:04:19.520 --> 00:04:26.540
Anda melihat apa yang baru saja kami pelajari disebut jalur render Kritis dan ini adalah salah satu

00:04:26.540 --> 00:04:29.990
konsep paling penting untuk mengoptimalkan kinerja browser.

00:04:30.630 --> 00:04:36.110
Jalur ini menunjukkan apa yang diperlukan untuk mengecat situs Web di layar.

00:04:36.390 --> 00:04:41.380
Sepertinya begitu banyak langkah tetapi dalam kehidupan nyata yang terjadi cukup cepat, benar.

00:04:41.430 --> 00:04:47.640
Mengejutkan bahwa banyak hal perlu terjadi agar kita dapat melihat situs web dan sekali lagi

00:04:47.640 --> 00:04:51.100
sama seperti kita dapat mengoptimalkan kinerja jaringan.

00:04:51.270 --> 00:04:58.340
Kami sekarang dapat mengoptimalkan jalur ini dan di video berikutnya kami akan melakukan hal itu.

00:04:58.360 --> 00:05:05.470
Mari kita pergi satu per satu dan melihat bagaimana kita dapat meningkatkan setiap langkah dari jalur render kritis

00:05:05.500 --> 00:05:06.730
Sampai jumpa di video berikutnya.