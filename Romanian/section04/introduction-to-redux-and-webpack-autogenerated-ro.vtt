WEBVTT

00:00:01.780 --> 00:00:03.190
Bine ai revenit.

00:00:03.190 --> 00:00:08.920
Privind înapoi la modul în care putem face mai bine aplicațiile noastre din secțiunea anterioară, vă

00:00:08.920 --> 00:00:11.010
amintiți căi critice de redare.

00:00:11.210 --> 00:00:16.550
Puteți vedea că există două blocaje principale pentru javascript chiar aici.

00:00:16.550 --> 00:00:22.650
Numărul trei și chiar aici și numărul opt și patru.

00:00:22.730 --> 00:00:32.060
Una este de a minimiza manipularea DOM prin javascript, iar cealaltă este livrarea în javascript prin care ne

00:00:32.060 --> 00:00:34.250
transmitem javascriptul conținutului.

00:00:34.280 --> 00:00:40.640
Acum, în această secțiune, după cum am spus că vom trece peste modul de a construi o simplă reacționare a acestei diagrame,

00:00:40.640 --> 00:00:41.740
lucrurile au sens.

00:00:41.750 --> 00:00:48.280
Cu cât este mai bine să oferim javascript, cu atât mai repede vom construi arborele de redare.

00:00:48.350 --> 00:00:55.100
Și, de asemenea, dorim să fim inteligenți cu privire la cât de mult redarea reală vom face pentru că oricând

00:00:55.160 --> 00:01:00.770
javascriptul modifică ceva în DOM trebuie să trecem prin acest pas din nou în aspectul copacului

00:01:00.770 --> 00:01:02.120
și vopseaua redată.

00:01:02.120 --> 00:01:09.810
Deci, dacă putem rezolva aceste două blocaje cu ceva de genul re-act Asta e destul de bine.

00:01:09.950 --> 00:01:11.440
Și asta vom face.

00:01:11.540 --> 00:01:19.040
Am reacționat pentru a ne ajuta într-adevăr cu acest ciclu de vopsire aspect de randare și

00:01:19.070 --> 00:01:21.610
apoi modificarea vopselei layout rendering.

00:01:21.670 --> 00:01:29.200
De asemenea, vom învăța un pic despre Westpac, care ne ajută să livrăm javascript pentru a optimiza

00:01:29.200 --> 00:01:30.120
acest lucru.

00:01:30.310 --> 00:01:38.860
Și apoi, în sfârșit, vom vorbi despre redux și despre modul în care redux adaugă un pic de reacție pentru a ne permite să ne

00:01:39.700 --> 00:01:40.290
îmbunătățim.

00:01:40.300 --> 00:01:47.440
Din nou, acest proces de schimbare a vopselei de aranjament aleatoriu de copac schimba ceva

00:01:47.830 --> 00:01:50.190
vopsea de artă Redner.

00:01:50.220 --> 00:01:51.590
Deci,

00:01:54.170 --> 00:02:00.620
amintiți-vă provocarea noastră Kaikohe Corp. are aplicația de prieteni din cauciuc care va merge mai mare

00:02:00.890 --> 00:02:07.160
și vor să adauge un management de stat pe care îl putem face prin redux despre care vom vorbi în următorul videoclip.

00:02:07.300 --> 00:02:14.560
Dar, ca și în cazul unui dezvoltator senior, trebuie să ne gândim de ce am vrea să

00:02:14.560 --> 00:02:22.630
învățăm redox de ce am putea îmbunătăți acest proces pe care îl vedem înainte chiar în următorul videoclip

00:02:22.630 --> 00:02:32.850
despre care vom vorbi despre managementul statului și să înțelegem de ce ar putea reduce reduxul îmbunătățiți după reacție și, adesea, cu aplicații, veți

00:02:32.860 --> 00:02:38.290
vedea că ambele sunt folosite, deoarece într-adevăr este o experiență plăcută.

00:02:38.350 --> 00:02:45.260
Până la sfârșit veți putea vorbi inteligent despre toate cele trei tehnologii.

00:02:46.390 --> 00:02:48.000
Voi vedea în următorul.

00:02:48.100 --> 00:02:48.340
Babai.