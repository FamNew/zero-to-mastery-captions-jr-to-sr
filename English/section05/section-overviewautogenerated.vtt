WEBVTT

00:01.880 --> 00:07.970
Oh hey they're in this section we're going to continue our talk of performance.

00:08.180 --> 00:10.330
A very fun topic.

00:10.430 --> 00:19.950
We're going to learn about the last two pieces of the front dam puzzle and the ones I really find fun.

00:19.950 --> 00:28.240
We're going to talk about optimizing code by writing efficient functions using react wisely and even

00:28.240 --> 00:30.750
get into some code splitting.

00:30.880 --> 00:36.340
It's going to be fun because we're going to talk about the big picture or the way you should think about

00:36.580 --> 00:40.320
your code in order to be as efficient as possible.

00:40.450 --> 00:46.630
And this is something a lot of developers overlook because they just focus on getting the program to

00:46.630 --> 00:48.380
work.

00:48.390 --> 00:56.250
Finally we're going to talk about progressive webapps a recent idea of trying to make our web applications

00:56.670 --> 01:06.440
as close to native mobile apps as possible with increased mobile usage around the world and especially

01:06.440 --> 01:11.060
for parts of the world that don't have the best internet connections.

01:11.850 --> 01:19.710
We want a way for our web apps to work fast but also possibly work offline and maybe even have our web

01:19.710 --> 01:24.850
app on the Google Play store or the Apple App Store.

01:25.670 --> 01:33.380
Remember as senior developers our goal is not just to come up with whatever we can to solve a problem

01:33.860 --> 01:35.530
and just write code.

01:35.540 --> 01:39.690
Our job is to think critically about how our programs work.

01:40.710 --> 01:46.000
What solution is best and what will have the longest lasting value.

01:47.260 --> 01:54.340
I mean we want to be senior developers after all so enough talk let's get into this section by starting

01:54.340 --> 01:58.960
off with our very first topic optimizing code.

01:59.210 --> 02:01.270
I'll see in the next one by.
