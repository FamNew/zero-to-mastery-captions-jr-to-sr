WEBVTT

00:00:01.370 --> 00:00:09.200
Saya berharap dalam latihan sebelumnya, Mayor menyadari betapa luar biasanya Dr. menyusun dan betapa mudahnya mengatur sesuatu

00:00:09.200 --> 00:00:12.290
seperti rattus di atasnya.

00:00:12.290 --> 00:00:18.100
Jadi, saya tunjukkan bagaimana cara mengatur rattus ke gumbo stok.

00:00:18.350 --> 00:00:27.590
Jika Anda tidak dapat melakukannya lagi, kami hanya akan menambahkan layanan baru dengan terlebih dahulu menambahkan komentar

00:00:27.650 --> 00:00:36.350
dan kami akan menambahkan layanan rattus dan layanan Retta ini akan memiliki gambar yang dibaca kami.

00:00:36.360 --> 00:00:43.260
Untungnya Dr. Haab sudah memiliki warna merah yang sudah disiapkan untuk kita yang sangat baik dari mereka.

00:00:43.410 --> 00:00:46.590
Dan kemudian kami juga ingin menambahkan port.

00:00:47.100 --> 00:00:49.380
Jadi kami memiliki akses ke sana di mesin kami.

00:00:49.380 --> 00:00:56.900
Ketika host lokal kami dan kami akan memberikannya port rattus default yaitu 6 3 7 9.

00:00:57.140 --> 00:01:03.890
Dan jika Anda pernah memulai server rattus, ini persis bagaimana keadaan orang miskin jika kita kembali ke sini

00:01:03.890 --> 00:01:09.830
kita melihat bahwa ketika kita memulai server orang miskin adalah 6 3 7 9.

00:01:09.830 --> 00:01:14.450
Baiklah jadi saya akan melakukan port forwarding lagi untuk memiliki akses ke sana di komputer saya.

00:01:15.380 --> 00:01:22.670
Dan bagian selanjutnya adalah kami ingin memastikan bahwa kami dapat mengakses, bacalah kami dari belakang dan API kami.

00:01:22.690 --> 00:01:28.060
Jadi, jika Anda ingat kami harus melakukan tautan ke layanan rattus dan

00:01:30.730 --> 00:01:34.170
API backend yang menautkan ke layanan mereka.

00:01:34.210 --> 00:01:39.820
Kemungkinan besar kami juga harus memberikannya variabel lingkungan yang sama seperti yang kami lakukan

00:01:40.060 --> 00:01:45.940
dengan postscript di mana kami memberikan Anda mata atau pengidentifikasi sumber daya unik untuk terhubung dengannya.

00:01:46.000 --> 00:01:47.890
Kita perlu melakukan hal yang sama untuk rattus.

00:01:47.890 --> 00:01:56.530
Jadi katakanlah rattus Anda benar dan ini akan menggunakan nama yang dibuat di doc atau compose.

00:01:56.530 --> 00:01:59.040
Dalam kasus kami layanan rattus.

00:01:59.050 --> 00:02:12.820
Jadi alih-alih mengatakan localhost atau sesuatu seperti itu, kami hanya mengatakan rattus sedang diakses oleh host lokal dan port akan menjadi

00:02:12.820 --> 00:02:20.570
6 3 7 9 dan hanya itu yang harus kita lakukan.

00:02:20.710 --> 00:02:27.520
Sekarang satu hal yang perlu kita ubah sekarang adalah di seinen dodgy kita di mana

00:02:28.120 --> 00:02:37.900
kita mengakses klien rattus daripada menggunakan host kita tidak bisa begitu saja memberikan Anda yang benar dan lagi kita melakukan hal yang

00:02:37.900 --> 00:02:44.030
sama persis seperti kita lakukan dengan database kami hanya memberikan proses mulai dan postscript

00:02:45.410 --> 00:02:47.960
tahun-I tapi kali ini untuk

00:02:51.440 --> 00:02:56.410
klien rattus dan kami ingin melakukan proses dot dot rattus Anda

00:02:59.050 --> 00:02:59.710
benar.

00:03:01.390 --> 00:03:02.420
Mari selamatkan ini.

00:03:02.710 --> 00:03:10.290
Dan saya ingin menjalankan kembali semua yang kita harus tutup buruh pelabuhan sehingga membaca ini sebagai layanan dibuat

00:03:10.390 --> 00:03:11.610
Jadi mari kita mulai.

00:03:11.620 --> 00:03:13.870
Aku akan benar-benar menjatuhkan semuanya.

00:03:16.900 --> 00:03:19.090
Agar kita mendapatkan kondisi segar yang bagus.

00:03:19.220 --> 00:03:21.890
Semua kontainer atau semua layanan telah dihapus.

00:03:22.070 --> 00:03:24.460
Dan saya akan menjalankan Dr. menyusun

00:03:24.580 --> 00:03:35.480
Bill dan mudah-mudahan jika semuanya berhasil, kami sekarang telah membaca kami di wadah kami.

00:03:35.490 --> 00:03:36.330
Baiklah.

00:03:36.330 --> 00:03:36.980
Kami belum melakukannya.

00:03:37.020 --> 00:03:38.190
Kesalahan koneksi apa pun.

00:03:38.190 --> 00:03:42.000
Yang merupakan hal yang ingin kita cari back end sedang berjalan.

00:03:42.000 --> 00:03:43.550
Kami melihat postingan berjalan.

00:03:43.560 --> 00:03:49.200
Jika saya gulir sepanjang jalan melihat bahwa saya melihat layanan S merah juga.

00:03:49.530 --> 00:03:53.510
Itu siap menerima koneksi koneksi.

00:03:53.520 --> 00:03:55.780
Betapa kerennya itu.

00:03:55.800 --> 00:04:01.090
Kami baru saja menambahkan posting naskah rattus dan kembali dan semuanya ke dalam wadah kami.

00:04:01.170 --> 00:04:05.760
Dan Anda mungkin ingat gambar yang awalnya kami miliki di mana kami mengatakan bahwa kami

00:04:05.760 --> 00:04:08.630
ingin membuat wadah dokter di sekitar ketiga layanan ini.

00:04:08.640 --> 00:04:13.620
Dan sekarang yang menakjubkan adalah bahwa pengembang yang bergabung dengan tim kami tidak benar-benar perlu

00:04:13.710 --> 00:04:17.390
khawatir tentang skrip posting atau pengujian ulang atau bahkan API backend.

00:04:17.430 --> 00:04:27.280
Semuanya berjalan dengan satu komentar dan hal menarik lainnya adalah bahwa jika saya kembali ke

00:04:27.280 --> 00:04:36.750
sini dan bukannya membaca ketika kita memasuki proyek kita yang merupakan API otak pintar dari

00:04:36.840 --> 00:04:49.350
sini saya dapat mengakses server rattus yang ada di wadah kami dengan hanya menjalankan Dakar menulis jalankan rattus lalu

00:04:49.410 --> 00:04:51.860
jalankan rattus CLIA.

00:04:52.090 --> 00:04:53.010
Lihat itu.

00:04:53.310 --> 00:05:00.400
Kami dapat masuk ke server baca kami dan melakukan permintaan apa pun untuk memeriksa apakah semuanya benar-benar ada di basis

00:05:00.400 --> 00:05:01.140
data kami.

00:05:01.930 --> 00:05:03.910
Sangat sangat keren.

00:05:03.910 --> 00:05:09.640
Saya harap Anda bisa sampai ke titik dan alamat ke wadah dokter kami karena sekarang kita dapat melakukan

00:05:09.640 --> 00:05:11.320
beberapa hal yang sangat menyenangkan.

00:05:11.350 --> 00:05:19.400
Kami akhirnya dapat kembali ke situs kami di J. S. dan menyimpan tokin kami di sesi buat

00:05:19.400 --> 00:05:23.760
di sini kita bisa menyimpan token kami di database edit ulang kami.

00:05:23.900 --> 00:05:26.190
Kami akan melakukannya di video berikutnya.

00:05:26.260 --> 00:05:27.250
Saya akan melihat itu.