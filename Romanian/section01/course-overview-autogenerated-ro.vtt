WEBVTT

00:00:00.770 --> 00:00:04.980
Hellooo! Să mergem prin curriculum-ul cursului.

00:00:05.070 --> 00:00:09.330
Deci aveți o idee despre ce să vă așteptați în acest curs.

00:00:09.330 --> 00:00:16.410
Acum, unele dintre aceste subiecte pot părea intimidante la început, dar toate sunt conectate și sunt toate componente

00:00:16.410 --> 00:00:20.220
cheie care vă fac un dezvoltator de nivel înalt.

00:00:20.230 --> 00:00:27.780
Vom merge pas cu pas, lucrăm la probleme reale de viață, scriem coduri, practicând astfel încât să

00:00:27.780 --> 00:00:31.790
putem avea încredere în fiecare dintre aceste subiecte.

00:00:31.800 --> 00:00:39.030
Acum, prima parte a cursului va acoperi SSH. Și în această secțiune

00:00:39.030 --> 00:00:47.760
SSH, vom afla despre comanda SSH. Cum să accesați computerele la distanță cum să vă conectați la un server care se află

00:00:47.760 --> 00:00:49.200
într-o altă parte a lumii.

00:00:49.500 --> 00:00:55.680
Vom afla despre criptarea criptare simetrică și asimetrică, precum și despre hash.

00:00:56.490 --> 00:01:03.630
De asemenea, vom învăța despre cheile SSH despre generarea cheilor SSH, despre cheile publice și private și

00:01:03.630 --> 00:01:06.690
cum să le gestionăm pe server.

00:01:06.690 --> 00:01:12.420
Vom avea câteva exerciții distractive în care aplicația dvs. a fost eliminată dintr-un

00:01:12.420 --> 00:01:18.980
server în mijlocul nopții și trebuie să vă mutați tot proiectul cade înapoi pe server utilizând SSH.

00:01:19.170 --> 00:01:25.390
Și vom înființa și GitHub cu SSH, după o frumoasă secțiune scurtă care ne va da drumul.

00:01:25.440 --> 00:01:32.850
Apoi, vom merge într-un mare subiect de optimizare a performanței. Și acest lucru este atât de mare încât am împărțit

00:01:32.850 --> 00:01:34.930
acest lucru în trei părți.

00:01:35.280 --> 00:01:38.450
Prima parte va fi optimizarea rețelei.

00:01:38.730 --> 00:01:45.420
Vom vorbi despre modul în care putem minimiza fișierele noastre și pentru a îmbunătăți livrarea aplicației noastre. Și apoi vom învăța

00:01:45.420 --> 00:01:51.390
despre optimizări despre calea critică a modului de îmbunătățire.

00:01:51.420 --> 00:01:54.120
Deci site-ul nostru Web se poate încărca rapid.

00:01:54.120 --> 00:01:59.370
Vom afla despre webapps-urile progresive și despre optimizarea codului și

00:01:59.370 --> 00:02:04.440
vom ajuta Kaiko Corp. îmbunătăți efectiv site-ul companiei, precum și aplicația lor de prieteni.

00:02:04.650 --> 00:02:10.500
Vom face un webapp progresiv care funcționează offline și poate fi chiar trimis la

00:02:10.800 --> 00:02:14.160
App Store folosind doar javascript, HTML și CSS.

00:02:14.250 --> 00:02:20.370
Dar vom învăța, de asemenea, despre subiecte interesante, cum ar fi împărțirea codului și realizarea rapidă

00:02:20.370 --> 00:02:23.490
a aplicațiilor reactive / redux prin redarea inteligentă.

00:02:23.580 --> 00:02:29.750
Apoi vom termina înțelegerea completă a optimizărilor de performanță, lucrăm la optimizările

00:02:29.870 --> 00:02:30.950
din spate.

00:02:31.020 --> 00:02:39.510
Vorbind despre rețelele de livrare a conținutului, scalarea bazelor de date, comprimarea răspunsurilor noastre, cache-ul și în cele din urmă încărcarea balanței

00:02:39.570 --> 00:02:46.500
unde vom implementa un balancer de sarcină și de fapt, vom efectua testarea încărcării pe proiectul nostru.

00:02:46.500 --> 00:02:50.360
Până la sfârșitul ei vei fi un guru de performanță.

00:02:50.850 --> 00:02:53.740
Apoi vom ajunge să reacționăm și să reducem.

00:02:54.030 --> 00:03:00.960
Cele mai populare biblioteci de conținut pentru a crea aplicații pentru o singură pagină. Mai întâi vom avea o introducere frumoasă pentru a

00:03:00.960 --> 00:03:01.590
reacționa

00:03:01.590 --> 00:03:07.560
dacă aceasta este prima dată când o învățați. Apoi, vom începe să ne aruncăm cu toții în

00:03:07.560 --> 00:03:12.530
conversația redux despre managementul statului și cum să ne structuram aplicațiile astfel încât să crească.

00:03:12.540 --> 00:03:18.930
Și adăugăm, de asemenea, o mică secțiune frumoasă privind gruparea, folosirea ultimului webapp, precum și o parcelă în sus și în comerț pentru a îmbina

00:03:18.930 --> 00:03:26.410
fișierele noastre și pentru a face ca pachetul nostru de producție să fie optimizat. Până la sfârșitul acesteia, veți simți confortabil

00:03:26.550 --> 00:03:32.730
reacția / reduxul, precum și configurarea proiectelor dvs. cu astfel de

00:03:32.930 --> 00:03:33.810
lucruri.

00:03:34.260 --> 00:03:39.970
Apoi intrăm într-un subiect care este atât de important, dar de multe

00:03:40.080 --> 00:03:47.160
ori uitat când porniți prima dată, testați. Companiile iubesc testarea și, dacă știți cum să testați,

00:03:47.160 --> 00:03:51.950
cum să scrieți teste unitare, teste de integrare scrieți mai bine un software.

00:03:52.080 --> 00:03:56.850
Vom începe să învățăm despre peisajul de testare din lumea dezvoltatorilor web actuali.

00:03:57.210 --> 00:04:02.730
Ce instrumente să folosim, ce biblioteci există, cum să setăm totul și apoi vom lucra cu doar una

00:04:02.790 --> 00:04:06.240
dintre bibliotecile de vârf pe care să le folosim pentru testare.

00:04:06.270 --> 00:04:08.850
Teste sincrone și asincrone.

00:04:09.000 --> 00:04:09.420
Dreapta.

00:04:09.440 --> 00:04:17.940
Mock și au rapoarte de acoperire. Apoi vom încerca să scufundăm în teste de scriere pentru aplicația noastră

00:04:17.940 --> 00:04:25.350
de reacție și să ne asigurăm că folosim lucruri precum testarea instantanee, o enzimă pentru a scrie teste inteligente care evită

00:04:25.350 --> 00:04:26.810
bug-uri în aplicația noastră.

00:04:27.000 --> 00:04:33.420
Până la sfârșitul acestuia, puteți cunoaște întregul peisaj de testare și vă puteți simți confortabil citind toate testele care

00:04:33.420 --> 00:04:34.500
vin în cale.

00:04:36.360 --> 00:04:43.500
Apoi vom arunca cu capul în jos unul dintre cele mai fierbinți subiecte care vor ieși din mediul dezvoltatorilor web de anul trecut, tipografia.

00:04:43.510 --> 00:04:49.450
Vom afla despre scrierea statică și de ce javascriptul nu a avut o scriere statică și, în

00:04:49.450 --> 00:04:55.120
schimb, este tastat dinamic, iar apoi vom învăța cum să folosim tiparul, ce tipuri există și

00:04:55.120 --> 00:04:56.980
cum să le adăugăm proiect.

00:04:56.980 --> 00:05:03.310
Vom adăuga ulterior tiparul în proiectul nostru de reacție și vom vedea cum să îl adăugăm la

00:05:03.310 --> 00:05:04.060
proiectele proprii.

00:05:04.210 --> 00:05:07.770
Până la urmă, din nou, veți cunoaște acest subiect.

00:05:10.060 --> 00:05:14.800
De acolo ne vom arunca într-o secțiune scurtă cu privire la aplicațiile cu o singură pagină.

00:05:14.800 --> 00:05:19.890
Vom vorbi despre partea de server oferind modul original de a afișa site-uri Web.

00:05:19.960 --> 00:05:25.020
De ce a fost util și de ce poate fi util în unele companii încă mai are nevoie de ea.

00:05:25.510 --> 00:05:30.500
Vom vorbi despre aplicațiile de o singură pagină și randarea pe partea clientului.

00:05:30.500 --> 00:05:35.380
Din nou, beneficiile impun atunci când doriți să implementați una peste cealaltă.

00:05:35.410 --> 00:05:38.560
Vă voi arăta cum să implementați redarea și să reacționați pe partea de server.

00:05:38.560 --> 00:05:42.220
Și din nou, ce sunt argumentele pro și contra fiecăruia.

00:05:42.220 --> 00:05:44.920
Vom urca rapid în următorul. js Da

00:05:45.010 --> 00:05:51.600
o bibliotecă care ne permite să scriem aplicații dinamice din partea serverului foarte frumos.

00:05:51.740 --> 00:05:57.730
Până la sfârșit, veți fi gata să decideți dacă doriți o aplicație cu o singură

00:05:57.820 --> 00:06:02.070
pagină sau o aplicație redată pentru server pentru proiectul dvs.

00:06:02.110 --> 00:06:06.120
De acolo ne aruncăm într-unul din subiectele mele preferate, securitatea.

00:06:06.130 --> 00:06:12.130
Vom aborda o gamă variată de subiecte, inclusiv securitatea frontală, în care vorbim de site-uri criptice, atacuri

00:06:12.130 --> 00:06:18.340
de injecție precum injecțiile SQL și de fapt, le vom practica pe aceștia pentru a vedea cum

00:06:18.340 --> 00:06:19.300
funcționează acestea.

00:06:19.390 --> 00:06:25.660
Putem vorbi despre siguranța din spate și despre cele mai bune practici pentru a gestiona datele sensibile.

00:06:26.110 --> 00:06:26.800
De

00:06:26.800 --> 00:06:31.960
acolo învățăm și câteva tehnici de hacking etice, astfel încât să ne putem apăra

00:06:31.960 --> 00:06:38.350
când ne construim, astfel încât să vă simțiți încrezători până la capătul căruia construiți aplicații sigure folosind cele

00:06:38.470 --> 00:06:40.230
mai recente sfaturi și trucuri.

00:06:40.390 --> 00:06:45.830
Și apoi intrăm în doc, o unealtă care te uimește absolut.

00:06:46.150 --> 00:06:52.600
Vom învăța despre containere și despre modul în care containerele au revoluționat acum modul în

00:06:52.600 --> 00:06:57.510
care companiile își structurează aplicațiile. De fapt, vom scrie fișiere docker și vom

00:06:57.520 --> 00:07:05.950
crea containere proprii, iar apoi vom folosi compilația docker pentru a compune un server gata, o bază de date postgres și un server API, toate într-una astfel

00:07:05.950 --> 00:07:09.920
încât toate să ruleze dintr-o conexiune. Până la sfârșitul acesteia,

00:07:10.000 --> 00:07:14.570
ne vom simți foarte confortabil cu doc-ul când vom implementa aplicațiile noastre.

00:07:17.500 --> 00:07:21.040
Apoi începem să învățăm despre o nouă bază de date.

00:07:21.060 --> 00:07:24.540
Redis este una dintre cele mai populare și adesea utilizate baze

00:07:24.650 --> 00:07:30.560
de date care este o valoare de stocare cheie. Vom analiza mai întâi tema bazelor de date și tipul de baze de date pe

00:07:30.560 --> 00:07:31.160
care le avem.

00:07:31.330 --> 00:07:39.290
De acolo vom întoarce propriul nostru server redis aflați cum să utilizați redis modul de utilizare a Redis CLI, astfel încât să putem folosi Redis acum pentru cache

00:07:39.380 --> 00:07:46.400
pentru a face site-urile noastre mai rapide, precum și pentru gestionarea sesiunilor. Ceva care va acoperi

00:07:46.400 --> 00:07:52.380
în subiectul următor. Folosind aplicația creier inteligent, vom

00:07:52.490 --> 00:07:58.120
crea o întreagă parte dinamică a site-ului web, care este gestionarea utilizatorilor.

00:07:58.160 --> 00:08:03.890
Vom începe prin crearea unei noi pagini de profil și, folosind această pagină de

00:08:03.890 --> 00:08:11.030
profil, vom afla despre autentificarea bazată pe sesiune în care vor fi utilizate cookie-urile și despre autentificarea token-ului,

00:08:11.030 --> 00:08:13.790
cum ar fi utilizarea jetoanelor JWT.

00:08:13.940 --> 00:08:18.140
Vom învăța despre fiecare dintre aceia care sunt avantajele și dezavantajele fiecăruia.

00:08:18.140 --> 00:08:23.080
Apoi, de fapt, vom implementa un flux securizat de autentificare pe care îl puteți implementa și orice aplicație

00:08:23.090 --> 00:08:24.310
pe care o alegeți.

00:08:24.420 --> 00:08:29.610
Vom folosi Redis pentru gestionarea sesiunilor astfel încât să avem rute protejate.

00:08:29.660 --> 00:08:35.450
Și astfel, ori de câte ori avem o funcționalitate de semnare, avem membrii pe care îi putem folosi acest sistem știind că

00:08:35.450 --> 00:08:40.600
este sigur și că urmează cele mai bune practici. Da!

00:08:40.640 --> 00:08:41.990
Mai avem mai multe subiecte.

00:08:41.990 --> 00:08:44.670
Acest curs este destul de vast.

00:08:44.690 --> 00:08:52.250
Atunci vom vorbi despre AWS. Ce este Amazon Web Services și, de asemenea, ce infrastructură, ca

00:08:52.380 --> 00:08:59.960
serviciu și platformă ca serviciu, a făcut-o în ceea ce privește permiterea companiilor să se adapteze sau să funcționeze la fel

00:09:00.050 --> 00:09:03.290
de eficient ca Google sau Amazon sau Microsoft.

00:09:03.560 --> 00:09:09.890
Și apoi vom învăța despre această tehnologie fără server, numită AWS Lambda, care ne permite

00:09:09.890 --> 00:09:16.190
să executăm doar funcții simple în nor și vom folosi cadrul fără servere pentru

00:09:16.190 --> 00:09:20.290
a implementa AWS Lambda în aplicația creierului nostru inteligent.

00:09:20.300 --> 00:09:26.030
Până la sfârșitul acesteia, veți avea încredere în lucrul cu AWS

00:09:26.030 --> 00:09:35.080
și în crearea funcțiilor care trăiesc în nor. După ce am încercat totul împreună și am creat o imagine de ansamblu a modului în care să scriem un

00:09:35.260 --> 00:09:42.220
software bun, aplicații bune, vom vorbi despre cum să creăm de fapt procese bune. Cum să desfășurați

00:09:42.220 --> 00:09:44.860
efectiv producția.

00:09:44.860 --> 00:09:49.930
Vom vorbi despre bune practici de integrare continuă și apoi despre livrarea continuă și desfășurarea continuă, astfel

00:09:49.990 --> 00:09:56.320
încât atunci când sunteți pus pe un proiect știi cum să pună în aplicare bunele practici și instrumente bune cum ar

00:09:56.710 --> 00:10:03.700
fi Circle CI pentru a vă asigura că de la început. Echipa dvs. de dezvoltatori dispune de instrumentele potrivite și de

00:10:03.700 --> 00:10:10.120
procesele potrivite pentru a avea succes în scrierea de aplicații cu mai puține bug-uri și cu un cod mai

00:10:10.120 --> 00:10:10.620
curat.

00:10:12.500 --> 00:10:20.160
Și apoi o mică zonă de biți în plus, în care vorbesc despre unele dintre experiențele și părerile mele personale.

00:10:20.180 --> 00:10:26.060
Vorbesc despre analiza codului și ce să fac atunci când porniți pentru prima oară un proiect în care aveți o

00:10:26.060 --> 00:10:28.850
mulțime de fișiere și nu ați scris singur codul.

00:10:28.880 --> 00:10:33.240
Vom vorbi despre sfaturi și trucuri pentru a optimiza cu adevărat acest lucru.

00:10:33.470 --> 00:10:38.270
Voi vorbi puțin despre cele mai bune practici lucruri pe care nu le putem include în celelalte secțiuni.

00:10:38.270 --> 00:10:45.590
Și apoi câteva alte bucăți suplimentare, astfel încât, până la sfârșitul întregului curs, toate aceste lucruri

00:10:45.590 --> 00:10:48.190
să aibă sens pentru voi.

00:10:48.380 --> 00:10:53.390
Veți putea pune în aplicare toate aceste cuvinte în propriile dvs. proiecte în propria dvs. companie și

00:10:53.390 --> 00:10:55.940
veți ști cum fiecare dintre ele este conectat.

00:10:56.030 --> 00:11:02.080
Dar, mai ales până la sfârșit, vei învăța lucruri care mi-au luat ani și ani să învăț.

00:11:02.600 --> 00:11:07.030
Iar următorul videoclip, prima zi de lucru, va începe în sfârșit să înființeze o firmă Kaiko Corp.

00:11:07.340 --> 00:11:10.320
Bucurați-vă de proiecte, bucurați-vă de exerciții.

00:11:10.340 --> 00:11:15.300
Vom construi o mulțime de lucruri amuzante și vă veți bucura de plimbare.