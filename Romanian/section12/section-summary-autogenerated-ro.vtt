WEBVTT

00:00:01.180 --> 00:00:07.330
Bine ați venit în această secțiune am aflat despre o nouă bază de date pe care o vom folosi numită Rhetori.

00:00:07.510 --> 00:00:11.890
Este extrem de popular și veți vedea multe companii care o folosesc.

00:00:11.920 --> 00:00:14.270
Deci am vrut cu adevărat să ne simțim confortabil.

00:00:14.740 --> 00:00:20.280
Și vreau să vă simțiți confortabil, pentru că vom adăuga la aplicația creierului inteligent.

00:00:20.800 --> 00:00:25.710
Vedeți până acum că nu avem într-adevăr o modalitate de a gestiona sesiunile utilizatorului.

00:00:25.870 --> 00:00:32.770
Acesta este un utilizator trebuie să vă conectați de fiecare dată când vizitează site-ul Web și site-ul Web nu-i

00:00:32.770 --> 00:00:34.130
amintesc cu adevărat.

00:00:34.900 --> 00:00:41.540
Nu reușim să actualizăm profilurile sau să creăm profiluri și să avem acea abilitate fără sesiuni.

00:00:42.380 --> 00:00:49.610
Deci, vom include în roșu S în următoarea noastră sesiune pentru a vă arăta efectiv modul în care putem implementa sesiunile.

00:00:49.690 --> 00:00:56.270
Vom adăuga-o la containerul nostru pentru medicul pe care l-am creat și apoi vom avea API-ul să comunice

00:00:56.660 --> 00:01:01.850
cu serverul rattus pentru a verifica dacă un utilizator este conectat sau nu.

00:01:01.880 --> 00:01:04.820
Pentru ca noi să putem păstra utilizatorii conectați.

00:01:06.410 --> 00:01:11.810
Și aceasta este o secțiune specială pentru că va continua să intri în următoarea sesiune

00:01:11.900 --> 00:01:18.860
deoarece, dacă vă amintiți că Bruno ne-a cerut să adăugăm aceste elemente la capacitatea noastră de creier creier inteligent sau

00:01:18.860 --> 00:01:24.750
la capacitatea creierului inteligent și a ști ce tocmai am învățat despre retesturi că suntem în

00:01:24.750 --> 00:01:28.640
sfârșit capabili să adăugăm un container pentru docker pentru dezvoltare.

00:01:28.860 --> 00:01:37.950
Apoi, în cele din urmă conectat la API-ul nostru și pentru că rattus este atât de rapid din nou și un Bruno stocare de date de memorie va

00:01:38.550 --> 00:01:43.800
fi extrem de fericit cu noi, deoarece găsim o modalitate de a nu încetini site-ul nostru Web,

00:01:43.800 --> 00:01:47.370
în ​​timp ce, de asemenea, păstrarea acestor sesiuni de utilizator.

00:01:48.030 --> 00:01:49.360
Drept interesant.

00:01:49.380 --> 00:01:56.220
Va fi foarte distractiv când vom vedea în cele din urmă toate aceste puncte conectate și atunci când

00:01:56.220 --> 00:01:58.360
veți avea un moment aha.

00:02:00.230 --> 00:02:07.160
Aceste subiecte de culoare roșie mai închisă în recipiente sunt cu adevărat dificile și foarte greu de învățat, deoarece există atât

00:02:07.160 --> 00:02:09.020
de multe piese în mișcare.

00:02:09.230 --> 00:02:16.730
Și sper să rămâi răbdătoare cu mine pentru că nu știu că totul este 100% clar dar îți promit că

00:02:16.760 --> 00:02:22.880
dacă vei urma cu următoarea secțiune vom înțelege cum este conectat totul cum funcționează totul și

00:02:23.150 --> 00:02:28.030
cum te duci să puteți face același lucru pe proiectele proprii.

00:02:28.220 --> 00:02:34.160
Așa că, în cele din urmă, atunci când mergi să lucrezi pentru o companie, poți avea un set

00:02:34.370 --> 00:02:38.610
nu numai pentru dezvoltare, ci și pentru producție unde ai diferite pericole.

00:02:38.630 --> 00:02:46.010
Puteți avea clustere diferite de ratt, puteți avea clustere de baze de date diferite, ideea fiind

00:02:46.010 --> 00:02:46.670
aceeași.

00:02:46.670 --> 00:02:52.330
Doar conectați aceste servicii împreună și fiecare serviciu face un lucru într-adevăr foarte bine.

00:02:52.340 --> 00:02:54.040
Deci, stai cu mine.

00:02:54.110 --> 00:02:57.020
Așteaptă cu nerăbdare în următoarea sesiune sper că și tu ești.

00:02:57.020 --> 00:02:57.930
Ne vedem pe asta.