WEBVTT

00:00:00.870 --> 00:00:04.870
Selamat datang kembali, mari kita lanjutkan dengan contoh kita.

00:00:04.940 --> 00:00:11.870
Kami memiliki Doc yang menyusun semua yang diatur di sini sehingga kami harus dapat menambahkan tulisan di sini

00:00:11.960 --> 00:00:16.430
juga sehingga kami hanya memiliki semua yang berjalan di dalamnya.

00:00:16.490 --> 00:00:20.240
Sekarang sebelum kita melakukan sesuatu dan Anda mungkin menemukan beberapa kesalahan juga.

00:00:20.240 --> 00:00:24.500
Selalu pastikan bahwa tidak ada wadah yang beroperasi yang dapat menimbulkan konflik.

00:00:24.650 --> 00:00:28.000
Dalam kasus kami, kami menjalankan API otak pintar kami.

00:00:28.510 --> 00:00:36.350
Tapi hanya untuk memulai dari yang bersih saya suka membuat bulu anjing menulis turun yang akan menurunkan semua

00:00:36.350 --> 00:00:37.190
layanan.

00:00:37.280 --> 00:00:44.710
Seperti yang Anda lihat di sini sempurna. Mari kita selesaikan ini sekarang untuk menambahkan pasca-karier di sini.

00:00:44.790 --> 00:00:47.000
Ini sebenarnya cukup mudah.

00:00:47.070 --> 00:00:53.460
Kami sekali lagi membuat layanan baru dan mari menambahkan komentar di sini supaya kami tahu apa yang kami lakukan sehingga

00:00:53.460 --> 00:00:59.460
kami akan mengatakan ini adalah postscript dan saya akan menghapus komentar ini di sini karena kami tidak membutuhkannya dengan

00:01:00.570 --> 00:01:01.120
sempurna.

00:01:01.140 --> 00:01:07.350
Dan saya akan mengatakan bahwa ini adalah API backend.

00:01:08.950 --> 00:01:12.430
Sekarang di dalam sini saya akan

00:01:15.400 --> 00:01:24.100
memanggil layanan ini postscripts saya akan memiliki nama wadah postscripts dan kita akan menggunakan gambar yang sudah

00:01:24.100 --> 00:01:33.360
pra-dibangun untuk kita di hub dotcom dan gambar postscripts pada hobi hobi Doc yang nyaman disebut postscripts .

00:01:33.380 --> 00:01:39.100
Sekarang hal lain yang ingin Anda lakukan adalah memastikan kembali bahwa port dapat diakses oleh kami.

00:01:40.040 --> 00:01:45.890
Jadi kita akan memiliki postscript default kita dan ini hanyalah port default untuk postscripts.

00:01:45.890 --> 00:01:48.270
Anda mungkin ingat bahwa kami pernah menggunakan ini sebelumnya.

00:01:48.560 --> 00:01:54.670
Setiap kali kami terhubung ke database kami dan hanya untuk itu ke port yang sama.

00:01:54.690 --> 00:02:02.730
Sekarang jika saya menyimpan ini, mari kita lihat apa yang terjadi ketika saya menjalankan dock atau menulis

00:02:02.730 --> 00:02:07.070
dan kemudian ingat dash dash build untuk membangun semuanya.

00:02:07.130 --> 00:02:10.350
Dan Anda lihat saya membuat kesalahan ketik kecil di sini.

00:02:10.350 --> 00:02:11.670
Seharusnya port.

00:02:11.840 --> 00:02:12.910
Mari kita coba lagi.

00:02:21.310 --> 00:02:28.340
Dan Anda lihat di sini bagaimana cara menarik postscript terbaru dari memo pro perpustakaan.

00:02:28.420 --> 00:02:30.130
Anda akan melihat bahwa ia melakukan beberapa pekerjaan.

00:02:30.370 --> 00:02:37.600
Dan karena ini adalah pertama kalinya kami melakukannya, akan butuh sedikit waktu untuk mengunduh semuanya.

00:02:38.780 --> 00:02:45.050
Sekarang area di sini jika Anda membacanya melihatnya dikatakan bahwa kami tidak dapat membuat konflik layanan kontainer.

00:02:45.080 --> 00:02:50.360
Skrip posting kontainer sudah digunakan dan ada sesuatu yang ingin Anda perhatikan setiap kali

00:02:50.360 --> 00:02:51.980
Anda menggunakan gambar.

00:02:52.010 --> 00:02:59.390
Dalam kasus kami, gambar ini sudah memiliki set nama wadah sehingga kami sebenarnya tidak membutuhkan ini.

00:02:59.450 --> 00:03:02.700
Jika saya menyimpan ini dan menjalankan ini lagi kita

00:03:10.210 --> 00:03:10.960
akan mendapatkannya.

00:03:11.130 --> 00:03:16.170
Mari kita buat ini sedikit lebih besar sehingga Anda bisa melihatnya.

00:03:16.280 --> 00:03:17.020
Ini dia.

00:03:19.400 --> 00:03:19.980
Baiklah.

00:03:20.000 --> 00:03:26.200
Sepertinya wadah dokter kami melihat yang memiliki postingan dan bagian belakang dan belakang berjalan dan

00:03:26.570 --> 00:03:29.740
posting Chris memberikan banyak masukan di sini.

00:03:29.750 --> 00:03:31.280
Tapi kami melihat kesuksesan mereka.

00:03:31.310 --> 00:03:33.520
Anda sekarang dapat memulai server database.

00:03:34.040 --> 00:03:40.080
Dan jika Anda terus turun Anda melihat bahwa grafik pos di dalamnya proses selesai siap untuk memulai.

00:03:40.100 --> 00:03:44.510
Dan kemudian pesan terakhir adalah sistem basis data siap menerima koneksi.

00:03:44.830 --> 00:03:47.310
Baiklah mari kita coba koneksi ini.

00:03:47.900 --> 00:03:49.590
Mari kita lihat apakah itu benar-benar berfungsi.

00:03:49.670 --> 00:04:00.070
Jika saya kembali ke sekuel potongan saya dan saya mencoba untuk terhubung ke otak pintar apa yang kita sebut di server

00:04:00.070 --> 00:04:00.770
kami.

00:04:00.880 --> 00:04:03.450
Kami menyebutnya otak pintar.

00:04:03.530 --> 00:04:06.890
Kami menggunakan satu tetapi mari kita lakukan saja otak cerdas karena itulah yang kami lakukan.

00:04:08.880 --> 00:04:15.940
Tidak ada kata sandi yang memasok dan mengisi otentikasi kata sandi untuk pengguna di agoI.

00:04:16.390 --> 00:04:23.430
Ok itu masuk akal karena saya sudah membuat database ini tetapi tidak ada yang saya tentukan di sini.

00:04:23.700 --> 00:04:32.070
Dan skenario yang lebih mungkin adalah bahwa ada pengguna dan kata sandi untuk database dan kami memiliki cara untuk menghubungkan bagian

00:04:32.070 --> 00:04:38.280
belakang ke tulisan tambahan meskipun mereka berada di dunia mereka sendiri wadah mereka sendiri.

00:04:38.280 --> 00:04:42.420
Anda ingin cara mereka berbicara satu sama lain dan terhubung dengan aman.

00:04:42.600 --> 00:04:47.890
Sekarang cara kita akan melakukan ini adalah melalui variabel lingkungan.

00:04:47.900 --> 00:04:49.790
Baiklah, saya tunjukkan seperti apa itu.

00:04:49.890 --> 00:04:55.510
Jika saya kembali ke Dharker menulis saya akan memberikan properti untuk kembali dan API.

00:04:55.650 --> 00:05:01.830
Dan ini akan menjadi lingkungan dan lingkungan

00:05:01.830 --> 00:05:13.350
hanyalah variabel lingkungan yang akan kita turunkan dan dengan berpikir di sini kita hanya cukup

00:05:14.440 --> 00:05:31.660
melakukan pengguna postscript akan katakanlah Sally postscripts kata sandi menjadi rahasia dan akan mengatakan bahwa database postscripts sebut saja dokter otak pintar.

00:05:31.930 --> 00:05:34.080
Dan akhirnya ini sedikit tipuan.

00:05:34.090 --> 00:05:40.120
Tetapi jika Anda melihat di sini kami memiliki tuan rumah dan sampai saat ini tuan rumah adalah tuan rumah lokal.

00:05:40.120 --> 00:05:46.300
Tapi ingat ketika kita menjalankan daquiri, ia berada di dunia yang terpisah sehingga kita bisa merujuk

00:05:46.300 --> 00:05:48.390
host lokal dari komputer kita.

00:05:48.550 --> 00:05:51.160
Sebagai gantinya, kami

00:05:54.470 --> 00:05:58.430
dapat merujuk nama layanan sebagai host.

00:05:58.430 --> 00:06:10.160
Dalam kasus kami, ini akan menjadi postscript dan ini ditautkan dengan menambahkan properti tautan dan tautan hanya mengatakan

00:06:10.160 --> 00:06:21.750
bahwa di dunia kita yang lebih gelap ini, saya ingin API back end untuk menautkan ke postscript.

00:06:21.800 --> 00:06:22.830
Mari saya tunjukkan apa yang saya maksud.

00:06:23.650 --> 00:06:26.870
Kembali ke diagram kami, kami mencoba membuat wadah ini.

00:06:26.950 --> 00:06:31.420
Kami memiliki server API kami berjalan dan kami juga memiliki database kami berjalan sekarang.

00:06:31.450 --> 00:06:34.450
Namun mereka tidak benar-benar mengetahui keberadaan satu sama lain.

00:06:34.450 --> 00:06:39.470
Mereka tidak benar-benar terhubung dan server API harus terhubung ke database untuk

00:06:39.470 --> 00:06:44.720
melakukan semua penyelamatan semua panggilan seperti membuat pengguna menyimpan kata sandi hash dan sebagainya.

00:06:45.160 --> 00:06:50.290
Dan di video mendatang kita juga harus menghubungkan read juga jadi kami

00:06:50.290 --> 00:06:59.040
mencoba untuk membentuk koneksi ini dan sekali lagi kami hanya menggunakan tautan di masa depan ketika kami telah membaca kami juga.

00:06:59.040 --> 00:07:04.940
Kami akan membaca layanan dan akan terhubung di tautan ini.

00:07:05.180 --> 00:07:07.680
Jadi kita punya variabel lingkungan ini.

00:07:07.820 --> 00:07:15.430
Sekarang yang harus kita lakukan adalah jika saya menyimpan ini dan kembali, saya cukup mengaksesnya melalui proses.

00:07:15.510 --> 00:07:17.030
PostScript dot dot

00:07:19.590 --> 00:07:22.570
biarkan saya salin ini karena akan lebih mudah.

00:07:22.620 --> 00:07:33.070
Host alamat posting yang akan menjadi postscript sehingga sangat proses yang MF dan kami akan

00:07:35.980 --> 00:07:38.770
lakukan untuk pengguna.

00:07:38.800 --> 00:07:45.360
Ini akan menjadi kata sandi pengguna akan menjadi kata sandi.

00:07:45.490 --> 00:07:50.460
Dan akhirnya untuk nama database kita hanya akan membiarkannya di nama.

00:07:50.500 --> 00:07:52.240
Jadi izinkan saya memastikan nama-nama itu benar.

00:07:52.240 --> 00:07:54.630
Kata sandi pengguna D. B dan tuan rumah.

00:07:54.790 --> 00:08:02.500
Jadi ini seharusnya D-B yang merupakan variabel lingkungan bernama aneh tapi tidak apa-apa untuk saat ini.

00:08:03.090 --> 00:08:04.920
Biarkan saya simpan itu.

00:08:04.960 --> 00:08:09.960
Sekarang kita harus me-restart semuanya karena kita perlu membuat ulang basis data kita.

00:08:09.960 --> 00:08:12.960
Jadi cara kita melakukannya adalah biarkan saya menutup ini.

00:08:12.960 --> 00:08:14.870
Saya akan membuat ini sedikit lebih besar.

00:08:14.910 --> 00:08:23.850
Kosongkan terminal dan jalankan Ron atau tulis dan alih-alih naik, kita akan menurunkan segalanya dan kita

00:08:23.850 --> 00:08:32.910
melihat ada sedikit udara jika kita kembali ke dermaga atau menulis Oh kita harus memiliki ruang di sini.

00:08:33.580 --> 00:08:36.310
File YAML bisa menjadi sangat rumit dengan spasi.

00:08:36.310 --> 00:08:37.520
Mari kita coba lagi.

00:08:37.960 --> 00:08:49.920
Purrfect lalu jalankan dock atau tulis lagi.

00:08:49.920 --> 00:08:50.150
Baiklah.

00:08:50.170 --> 00:08:54.540
Kami mendapatkan kesalahan di sini dengan mengatakan bahwa roll Sally tidak ada.

00:08:54.760 --> 00:08:57.100
Jika saya pergi ke server saya ya.

00:08:57.550 --> 00:09:09.830
Dan kita baru saja konsol proses log lama dot dan Dot post-crash katakanlah pengguna mari kita simpan OK saya

00:09:12.910 --> 00:09:14.330
dapatkan Sally.

00:09:14.380 --> 00:09:17.680
Jadi kita mendapatkan variabel lingkungan ini.

00:09:17.710 --> 00:09:22.900
Baiklah saya perkecil ini.

00:09:22.950 --> 00:09:29.880
Inilah hal lain dan saya mengemukakan ini karena kita akan selalu memiliki masalah ini ketika Anda pertama kali

00:09:29.880 --> 00:09:33.400
mendirikan dokter dan itu bisa sangat membuat frustrasi.

00:09:34.750 --> 00:09:41.350
Tetapi jika kita berpikir tentang hal ini secara kritis, kita telah memberikan pengguna

00:09:41.350 --> 00:09:51.070
dan kata sandi DB host semua informasi ini, namun kita sebenarnya belum memberikannya kepada gambar postskrip kita juga perlu melakukan

00:09:51.070 --> 00:10:00.370
hal yang sama pada basis data kita sehingga menciptakan kata sandi pengguna database dan memiliki semua informasi ini

00:10:00.370 --> 00:10:01.720
yang dibutuhkannya.

00:10:01.720 --> 00:10:09.480
Jadi jika saya menyalin ini ke sini juga atau biarkan saya menyalin seluruh variabel lingkungan

00:10:12.650 --> 00:10:14.490
dan saya simpan.

00:10:14.730 --> 00:10:16.960
Biarkan saya menurunkan ini lagi.

00:10:26.970 --> 00:10:29.360
Kami sekarang tidak memiliki masalah itu.

00:10:29.400 --> 00:10:33.300
Dan omong-omong ubah nama pengguna menjadi huruf kecil hanya karena itu standar

00:10:33.300 --> 00:10:37.820
Anda tidak ingin memiliki huruf besar di bidang pengguna tetapi ini hanya terlihat lebih bagus.

00:10:37.830 --> 00:10:39.170
Sekarang mari kita coba ini.

00:10:39.410 --> 00:10:47.640
Klik kanan OK dan katakan kita ingin terhubung dengan pengguna docker otak pintar akan menjadi kata sandi Salli

00:10:47.640 --> 00:10:49.200
akan menjadi rahasia.

00:10:49.670 --> 00:10:52.150
Hei, terhubung, lihat itu.

00:10:52.230 --> 00:10:56.750
Terhubung ke database.

00:10:56.770 --> 00:10:57.560
Baiklah.

00:10:57.560 --> 00:10:59.770
Sekarang mari kita bersihkan ini sedikit.

00:10:59.770 --> 00:11:06.230
Ini sedikit berantakan dan sebagian besar buruh pelabuhan menulis file.

00:11:06.370 --> 00:11:14.410
Anda akan melihat sedikit pengaturan yang berbeda karena dari API otak cerdas kami, kami dapat dengan mudah

00:11:14.410 --> 00:11:16.850
menyambung ke postscript seperti ini.

00:11:17.020 --> 00:11:26.350
Saya hanya bisa mengatakan postscrip PC quoll dan memberikan kata sandi dan rahasia saya.

00:11:26.480 --> 00:11:30.870
Jadi dalam kasus saya itu akan menjadi kata sandi Salli rahasia.

00:11:31.270 --> 00:11:42.860
Alih-alih localhost ingat itu akan menjadi postscript nomor port dan database kami lagi karena saya menggunakan ini dari laptop saya yang localhost

00:11:42.860 --> 00:11:51.690
saya mengekspos port sehingga saya bisa meninggalkan ini sebagai host lokal di server API backend ketika saya

00:11:51.710 --> 00:11:58.730
benar-benar terhubung ke proscribes saya harus melakukan ini dalam kasus kami meskipun karena

00:11:58.730 --> 00:12:09.290
saya melakukan ini dari komputer saya dari host lokal saya jika saya melakukan host lokal saya melihat bahwa saya terhubung.

00:12:09.380 --> 00:12:12.070
Sempurna.

00:12:12.100 --> 00:12:17.770
Sekarang pengaturan yang ingin kita lakukan di sini adalah alih-alih memiliki semua ini, kita hanya akan mengatakan

00:12:17.770 --> 00:12:19.830
bahwa ada tulisan tambahan yang benar.

00:12:21.280 --> 00:12:28.820
Dan ini Anda, saya akan merujuk pasca-krisis dan sangat mirip dengan apa yang kami lakukan di sini sehingga saya benar-benar akan menyalin

00:12:28.820 --> 00:12:30.170
dan menempel ini

00:12:35.610 --> 00:12:37.070
membuat ini sedikit lebih kecil.

00:12:37.170 --> 00:12:42.220
Ini akan merujuk rahasia postscript Salli bukan localhost.

00:12:42.240 --> 00:12:47.460
Ini akan merujuk port postscript 5:43 ke otak pintar.

00:12:47.530 --> 00:12:55.820
Dr. sekarang yang perlu saya lakukan adalah menyimpan ini kembali ke server

00:12:56.090 --> 00:13:01.250
dan mengabaikan semua hal ini dan bukannya menghapus ini karena kita bisa melakukan proses.

00:13:01.340 --> 00:13:04.630
Dan Dot postscript.

00:13:04.970 --> 00:13:10.770
Anda tepat untuk pengidentifikasi sumber daya yang unik.

00:13:10.980 --> 00:13:17.060
Dan jika saya menyimpan ini membuka

00:13:19.890 --> 00:13:28.050
terminal kami lagi mari kita menurunkan semuanya dan mulai kembali.

00:13:28.110 --> 00:13:33.790
Kami sekarang terhubung ke database itu dan semuanya harus berfungsi.

00:13:33.960 --> 00:13:34.820
Sangat keren.

00:13:34.830 --> 00:13:37.950
Kami baru saja menghubungkan dua aplikasi kami.

00:13:38.080 --> 00:13:42.000
Sekarang saatnya untuk melihat apakah ini semua berfungsi dengan aplikasi kami.

00:13:42.040 --> 00:13:43.360
Sampai jumpa di video berikutnya.

00:13:43.520 --> 00:13:43.700
Buh-Bye.