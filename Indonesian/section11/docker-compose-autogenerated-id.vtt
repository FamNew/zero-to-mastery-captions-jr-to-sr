WEBVTT

00:00:01.670 --> 00:00:09.390
Kembalilah ke video-video sebelumnya, kita belajar bagaimana daquiri dibuat menggunakan doc Rafal dan menyediakan lingkungan yang

00:00:09.390 --> 00:00:13.520
sesuai di mana layanan aplikasi kita dapat berjalan.

00:00:13.650 --> 00:00:20.210
Jadi secara hipotetis kita dapat menggunakannya untuk server simpul kita, kita dapat menggunakannya untuk database postgresql apa pun yang

00:00:20.220 --> 00:00:22.350
kita inginkan dari semua layanan kita.

00:00:22.440 --> 00:00:30.690
Sekarang ada alat nother yang sebenarnya Anda instal ketika Anda mendapat buruh pelabuhan yang disebut menulis buruh

00:00:30.690 --> 00:00:36.270
pelabuhan dan ini digunakan untuk mengatur layanan aplikasi kami selama pengembangan.

00:00:36.270 --> 00:00:43.500
Jadi ini adalah alat yang sebagian besar akan Anda gunakan selama pengembangan tetapi jika Anda ingat permintaan

00:00:43.620 --> 00:00:51.870
Brunos adalah untuk memiliki postscript kami dan server kami semua berjalan dari satu perintah tanpa kita harus menyiapkan server

00:00:51.870 --> 00:00:54.030
dan database secara terpisah.

00:00:55.000 --> 00:01:02.920
Dan Doc decompose memungkinkan Anda untuk menyusun bagian-bagian yang lebih gelap ini berbagai layanan sehingga selama pengembangan Anda dapat

00:01:02.920 --> 00:01:05.940
melakukan hal-hal ini dengan sangat mudah.

00:01:07.460 --> 00:01:09.150
Ingat diagram kita di sini.

00:01:09.630 --> 00:01:14.720
Kita akan menggunakan komposisi Dharker meskipun kita telah menggunakan Dharker untuk server kita.

00:01:14.720 --> 00:01:21.270
Kita sekarang akan menggunakan dermaga atau menulis untuk membuat wadah yang berisi semua hal ini.

00:01:21.620 --> 00:01:24.430
Kami akan fokus pada server API dan database.

00:01:24.680 --> 00:01:32.000
Dan di sesi ini dan bagian JWT kita juga akan menyertakan layanan rattus yang

00:01:32.000 --> 00:01:41.470
akan sangat menyenangkan dan sekali lagi docking Limbo mengatur layanan aplikasi kita dan itu akan menjadi benar-benar Farnam

00:01:41.470 --> 00:01:43.820
ketika kita mulai bekerja.

00:01:43.840 --> 00:01:45.870
Jadi mari kita mulai sekarang.

00:01:45.940 --> 00:01:52.360
Hanya kepala jika dia mengunduh buruh pelabuhan untuk Mac atau dermaga atau untuk Windows bebek atau menulis sudah datang dengan

00:01:52.360 --> 00:01:52.780
itu.

00:01:52.870 --> 00:01:59.160
Jika Anda menginstalnya di Linux, Anda benar-benar harus kembali ke halaman itu dan menginstal doc atau menulis secara terpisah.

00:01:59.200 --> 00:02:01.360
Jadi hanya kepala di sana.

00:02:01.580 --> 00:02:11.720
Sekarang cara yang bisa kita lakukan ini adalah cara untuk menggabungkan kedua postscript dan server API kita menjadi satu perintah

00:02:11.810 --> 00:02:18.080
Daker adalah membuat sesuatu yang disebut doc post-fight dan file penulisan dokumen.

00:02:18.080 --> 00:02:25.850
Sekali lagi kami buat di direktori root proyek kami dan itu akan disebut docker compose dan ini adalah YAML

00:02:26.300 --> 00:02:33.830
untuk ini hanya jenis file yang mereka gunakan dan Anda akan melihat bahwa paku payung yang luhur atau

00:02:33.830 --> 00:02:36.890
editor Anda akan mengenali sintaks tertentu .

00:02:36.890 --> 00:02:44.600
Jadi sekali lagi doc dapat mati YAML dan saya telah membuatnya dan Anda dapat melihat di sini bahwa editor teks

00:02:44.600 --> 00:02:49.130
saya mengenali ini sebagai file doc atau dokumen atau file penulisan.

00:02:49.140 --> 00:02:52.490
Sekarang inilah yang akan terlihat seperti file kompos bebek.

00:02:53.290 --> 00:02:56.100
Kami pertama kali memulai dengan versi yang ingin kami gunakan.

00:02:56.320 --> 00:03:02.300
Jadi dalam kasus saya ini akan menjadi versi 3. 6 yang merupakan yang terbaru.

00:03:02.300 --> 00:03:10.210
Saat ini untuk saya dan di bawah, kami memiliki sesuatu yang disebut layanan dan layanan ini adalah apa yang akan

00:03:10.210 --> 00:03:11.450
kami susun.

00:03:11.530 --> 00:03:18.510
Itu kita akan memiliki layanan API backend layanan postscripts dan juga nanti pada

00:03:18.630 --> 00:03:19.710
layanan luas.

00:03:20.050 --> 00:03:25.660
Dan mari kita beri nama untuk permukaan pertama kami yang merupakan ujung belakang.

00:03:26.720 --> 00:03:31.450
API atau kita bisa menyebutnya API otak

00:03:37.980 --> 00:03:39.030
pintar.

00:03:39.150 --> 00:03:44.850
Sekarang kita dapat memberikan opsi berbeda dan Dharker menulis sekali lagi adalah semacam file konfigurasi sehingga Anda

00:03:44.850 --> 00:03:47.940
dapat menemukan banyak dokumentasi online dan online ini.

00:03:47.940 --> 00:03:49.690
Tetapi saya akan menunjukkan kepada Anda beberapa yang umum.

00:03:49.790 --> 00:04:02.360
Salah satunya adalah nama wadah nama Rupes dan kita dapat memanggil backend wadah karena sebagai ujung belakang aplikasi kita dan omong-omong dalam file

00:04:02.360 --> 00:04:08.210
YAML lekukan seperti hal ini sehingga sekali lagi mengawasi lekukan dengan

00:04:08.210 --> 00:04:13.330
cara yang saya lakukan. dan kemudian kita juga mengatakannya.

00:04:14.070 --> 00:04:18.180
Dan kemudian kita juga dapat menentukan gambar apa yang digunakan dari Doc atau hub.

00:04:18.290 --> 00:04:23.760
Dalam kasus kami, kami bisa mengatakan simpul dan versi apa yang kami gunakan untuk simpul dan profil doc.

00:04:24.020 --> 00:04:29.870
Mari kita gunakan yang ini saja.

00:04:29.960 --> 00:04:32.190
Kita juga bisa memberikannya perintah.

00:04:32.390 --> 00:04:37.250
Jadi itu ingat bagaimana kita kita menjalankan NPM mulai dari sini.

00:04:37.320 --> 00:04:46.020
Kami hanya bisa memberikannya perintah ketika layanan mulai atau wadah yang dibuat dan diinstal untuk menjalankan mulai

00:04:46.020 --> 00:04:50.330
kami juga dapat melakukan hal-hal seperti direktori kerja.

00:04:50.340 --> 00:05:00.900
Jadi der der yang bekerja dan akan mengatakan bahwa ini ada di folder aplikasi dan kita juga bisa melakukan Portes

00:05:00.900 --> 00:05:08.920
mengingat bahwa ketika kita menjalankan perintah dengan port binding dan penerusan yang buruk kita hanya

00:05:08.930 --> 00:05:20.740
bisa mengatakan bahwa kita ingin port 3.000 3.000 dan kemudian ada opsi lain Anda memiliki hal-hal seperti lingkungan yang memberi Anda variabel lingkungan

00:05:20.740 --> 00:05:24.730
jika Anda mungkin ingin meneruskan kunci API.

00:05:24.730 --> 00:05:28.590
Kita bisa melakukannya juga, tetapi kita akan melakukannya nanti.

00:05:28.600 --> 00:05:34.180
Kami juga memiliki hal-hal seperti tautan dan yang memberi kami layanan yang kami inginkan untuk ditautkan.

00:05:34.180 --> 00:05:39.670
Jadi jika kita memiliki post-crash misalnya kita dapat mengatakan postscripts dan tautan ke layanan postscripts itu

00:05:39.670 --> 00:05:42.950
tetapi kita tidak memilikinya sekarang sehingga kita tidak memerlukannya.

00:05:43.000 --> 00:05:52.040
Dan omong-omong kita juga dapat melakukan hal-hal seperti membangun di sini untuk membangun gambar kita dan alih-alih menggunakan ini

00:05:52.040 --> 00:05:56.330
kita dapat mengatakan bahwa kita ingin membangun dari

00:06:00.420 --> 00:06:06.960
dock atau file yang ada di sini sehingga akan membangun layanan ini dari Profil.

00:06:07.090 --> 00:06:08.200
Jadi mari kita mulai.

00:06:08.200 --> 00:06:11.020
Saya akan benar-benar menghapusnya atau berkomentar untuk saat ini.

00:06:11.200 --> 00:06:21.550
Dan ketika saya melihat Anda berkomentar dan file YAML untuk disimpan dan cara kita melakukan atau menulis dan menjalankannya mari kita keluar

00:06:21.550 --> 00:06:23.000
dari sini.

00:06:24.890 --> 00:06:36.620
Saya akan membersihkan ini kita memiliki lebih banyak ruang dan sekarang menjalankan Dr. menyusun perintah dan kita bisa mengatakan bahwa kita menang atau menulis dibangun dan

00:06:36.620 --> 00:06:44.130
itu akan membaca musim gugur ini yang baru saja kita buat dan saya ingin menunjukkan kepada Anda daerah

00:06:44.130 --> 00:06:50.770
ini karena itu bisa menjadi sangat samar dengan buruh pelabuhan setiap kali Anda membuat kesalahan dan

00:06:50.770 --> 00:06:53.060
sebenarnya khusus untuk YAML file.

00:06:53.260 --> 00:06:59.620
Dalam hal ini saya mendapatkan ere ini mengatakan bahwa ada sesuatu yang salah dan saya ingin mengawasi sintaksis yang

00:06:59.770 --> 00:07:03.940
Anda gunakan dan jarak yang Anda gunakan untuk file YAML Anda.

00:07:03.940 --> 00:07:14.620
Dalam kasus kami, kami perlu menambahkan tanda titik koma di sini atau menelepon di sini dan Anda melihat bahwa bahkan warna berubah pada editor teks saya dan jika

00:07:14.620 --> 00:07:19.690
Anda memiliki editor teks yang baik yang membantu Anda semua dengan ini, itu

00:07:19.690 --> 00:07:24.950
benar-benar besar karena bahkan jika saya membuat kesalahan ini AOD saya mendapatkan kesalahan ini.

00:07:25.000 --> 00:07:29.590
Pastikan semua spasi Anda benar karena itu bisa sangat rumit.

00:07:29.710 --> 00:07:36.910
Untungnya Dr. compose memiliki dokumentasi yang sangat bagus dan Anda dapat online dan mencari tahu

00:07:37.150 --> 00:07:38.300
bagaimana menyusun posting Anda.

00:07:38.740 --> 00:07:44.100
Sekarang mari kita jalankan atau menulis perintah Builth kita inginkan lagi.

00:07:47.500 --> 00:07:48.450
Dan lihat itu.

00:07:48.460 --> 00:07:49.660
Ini mulai bekerja.

00:07:49.660 --> 00:07:54.880
Ini mengambil dari versi simpul tempat kami membuat direktori kerja kami.

00:07:54.970 --> 00:08:02.380
Jadi itu membaca file doco kami karena kami mengatakan dibangun dari sumber

00:08:02.380 --> 00:08:12.140
kami yang memiliki file Daka itu menjalankan NPM menginstal menjalankan perintah dan semuanya dibangun menggunakan informasi ini.

00:08:12.150 --> 00:08:14.190
Jadi mari kita membahas apa yang baru saja terjadi di sini.

00:08:15.250 --> 00:08:22.150
Instruksi kami memberitahu komposer untuk membuat layanan yang disebut API otak pintar menggunakan file doc yang kami buat

00:08:22.150 --> 00:08:23.250
sebelumnya, kami

00:08:26.440 --> 00:08:34.350
memetakan wadah ke port 3000 sehingga kami memiliki akses ke sana dari laptop kami dan kami juga menjalankan NPM yang

00:08:34.360 --> 00:08:37.470
diaduk dalam wadah untuk memulai layanan kami .

00:08:37.570 --> 00:08:41.920
Sekarang kami belum benar-benar melakukan terlalu banyak perbedaan dibandingkan jika kami bekerja dengan doc.

00:08:42.130 --> 00:08:46.550
Dan ketika Anda hanya memiliki satu layanan, Anda kemungkinan besar bekerja hanya dengan satu file Bachar.

00:08:46.690 --> 00:08:52.890
Satu-satunya perbedaan sejauh ini adalah bahwa kita membangun dermaga atau menulis untuk membangun citra kita alih-alih Dr.

00:08:52.910 --> 00:08:55.220
Sekarang mari kita jalankan perintah selanjutnya.

00:08:55.260 --> 00:09:00.570
Dr. buat lari dan lihat apa yang terjadi.

00:09:02.960 --> 00:09:09.090
Semua jelas dan saya harus memberikan hal yang sebenarnya yang ingin kami katakan Consolo mengatakan buruh pelabuhan

00:09:12.370 --> 00:09:19.450
menulis run dengan wadah yang ingin kami jalankan dalam kasus kami itu adalah otak pintar API yang kami beri nama.

00:09:19.450 --> 00:09:28.060
Jadi mari kita ambil dan jalankan dan kita mendapatkan beberapa kesalahan di sini jadi mari kita debug itu dan kita melihat bahwa kita sedang

00:09:28.060 --> 00:09:29.480
mencari aplikasi path

00:09:29.490 --> 00:09:31.190
Saya mengemas Jason kami.

00:09:31.600 --> 00:09:38.370
Tetapi jika Anda ingat dalam file doc kami direktori kerja kami adalah ini.

00:09:38.420 --> 00:09:46.100
Jadi hanya untuk mendapatkan titik di dengan daftar direktori kerja coba dan salin ini di sini bukan aplikasi dasbor

00:09:46.100 --> 00:09:50.320
yang kami buat karena di situlah file paket kami ada.

00:09:50.420 --> 00:09:53.590
Jika kita menjalankan perintah build

00:10:03.540 --> 00:10:14.360
lagi dan biarkan saya menghapus ini dan lagi jalankan Gawker kapos kita jalankan smart brain API lihat itu.

00:10:14.540 --> 00:10:18.930
Kami memiliki aplikasi kami berjalan di port 3000.

00:10:19.110 --> 00:10:27.080
Dan jika kita pergi ke localhost dan pastikan kita pergi ke localhost 3000 di sini lihat itu.

00:10:27.080 --> 00:10:29.070
Bekerja.

00:10:29.090 --> 00:10:30.160
Itu luar biasa.

00:10:30.350 --> 00:10:35.480
Sekarang mari kita sedikit login di sini karena sulit untuk melihat apa yang terjadi dan apakah kita benar-benar mencapai

00:10:35.480 --> 00:10:36.600
titik yang sama.

00:10:36.950 --> 00:10:43.670
Jadi saya akan benar-benar menutup ini dengan cepat dan menginstal paket yang kita bicarakan di

00:10:44.270 --> 00:10:52.260
bagian keamanan yang disebut Morgan dan kita akan menggunakan Morgan di sini hanya untuk keperluan logging dan kemudian menambahkannya

00:10:52.350 --> 00:10:54.660
di sini dengan Konst Morgan.

00:10:55.010 --> 00:11:00.530
Ingin membutuhkan paket dan ini middleware.

00:11:00.780 --> 00:11:04.010
Jadi yang perlu kita lakukan adalah menggunakannya sama seperti yang kita lakukan di sini.

00:11:06.810 --> 00:11:10.830
Dan katakan Morgan dan berikan opsi seperti apa output yang kita inginkan.

00:11:10.830 --> 00:11:14.670
Saya suka opsi yang digabungkan dan kita akan melihat seperti apa itu.

00:11:14.670 --> 00:11:25.300
Jadi sekali lagi saya akan menjalankan docker compose build to build dari file Daker kami.

00:11:25.300 --> 00:11:34.500
Anda dapat melihat di sini kita menjalankan instalasi NPM dan biarkan saya menghapus ini dengan benar sehingga kita menghapus terminal

00:11:34.510 --> 00:11:36.370
yang telah kita kombinasikan.

00:11:36.370 --> 00:11:41.840
Sekarang untuk berjaga-jaga jika Anda memiliki kontainer yang berjalan di latar belakang atau

00:11:41.980 --> 00:11:52.250
Anda perlu mencatat apa pun yang bisa Anda lakukan, buruh pelabuhan menyusun dan menurunkan kembali semua kontainer yang mungkin Anda miliki tidak seperti yang

00:11:52.290 --> 00:12:01.300
kami miliki dan kami bisa pergi ke Dr . menulis membangun dan ini semakin mengganggu membangun dan meletakkan

00:12:01.300 --> 00:12:02.230
semuanya.

00:12:02.320 --> 00:12:10.420
Kita benar-benar dapat menjalankan buruh pelabuhan atau menulis untuk memunculkan wadah dengan dash dasbor dibangun dan dibangun.

00:12:10.420 --> 00:12:15.460
Anda hanya perlu melakukannya di awal untuk membangun dan menjalankan instal NPM dan semua yang telah

00:12:15.460 --> 00:12:17.410
kami lakukan dan file docker.

00:12:17.410 --> 00:12:20.830
Tetapi setelah itu Anda bisa terus menjalankan doc atau compose.

00:12:20.830 --> 00:12:30.560
Sejauh ini saya menjalankan ini sedang membangun backend kami dan melihat bahwa itu sekarang masuk kembali dan sesuai dengan nama yang kami berikan wadah

00:12:30.560 --> 00:12:33.730
Anda dapat melihat kembali dan ke sini.

00:12:33.800 --> 00:12:35.420
Itu yang ini.

00:12:35.720 --> 00:12:41.940
Dan menjalankan NPM mulai dan Anda melihat bahwa kita sekarang berjalan pada port aplikasi tiga ribu.

00:12:42.140 --> 00:12:48.990
Dan jika saya kembali sekarang dan saya menyegarkan tampilan bahwa kita baru saja mendapatkan logging.

00:12:48.990 --> 00:12:55.540
Jika saya melakukan ini tiga kali lagi dan menyegarkan, kami melihat bahwa kami telah login.

00:12:55.540 --> 00:13:02.410
Jadi kami baru saja membuat file komposisi buruh pelabuhan dengan API otak pintar kami.

00:13:02.410 --> 00:13:04.410
Tapi idealnya kami ingin melakukan lebih dari itu.

00:13:04.420 --> 00:13:08.190
Idealnya kita dapat memiliki tahun postscript dan tahun Radice.

00:13:08.290 --> 00:13:12.200
Jadi di video berikutnya kita akan berbicara sedikit tentang itu.

00:13:12.260 --> 00:13:13.240
Saya akan melihat yang berikutnya.