WEBVTT

00:00:01.310 --> 00:00:02.180
Witamy spowrotem.

00:00:02.480 --> 00:00:08.560
Kontynuujmy naszą gwiazdę bezpieczeństwa i rozmawiajmy o sekretach kodu i sekretach kodu.

00:00:08.600 --> 00:00:10.120
To całkiem proste.

00:00:10.280 --> 00:00:12.330
Są dwie główne rzeczy, na których chcemy się skupić.

00:00:13.230 --> 00:00:19.260
Zmienne środowiskowe i historia commitów.

00:00:19.270 --> 00:00:24.290
Rzućmy okiem na obu mam tutaj naszych przyjaciół Robo.

00:00:24.290 --> 00:00:25.310
Nic zbyt szalonego.

00:00:25.310 --> 00:00:27.500
Ten sam stary, ten sam stary.

00:00:27.510 --> 00:00:34.770
W naszych aplikacjach jest wiele razy, gdy mamy ważne informacje, które możemy chcieć ukryć.

00:00:34.890 --> 00:00:42.750
Na przykład czasami mamy klucz API podobny do tego, jaki robimy w inteligentnej aplikacji mózgowej z klarownym

00:00:42.780 --> 00:00:50.080
interfejsem API, który umożliwia nam wysłanie żądania HTP w celu wyjaśnienia i wyjaśnienia im odpowiedzi.

00:00:50.830 --> 00:00:56.710
Są też czasy, kiedy możemy chcieć połączyć się z bazą danych i potrzebujemy hasła i

00:00:56.710 --> 00:01:01.490
użytkownika, a być może są jeszcze inne sekrety, które chcemy mieć.

00:01:02.520 --> 00:01:07.130
A może nawet po prostu potrzebujemy dodatkowych zmiennych.

00:01:07.170 --> 00:01:10.880
To, co nazywamy zmiennymi środowiskowymi w naszych celach rozwojowych.

00:01:11.100 --> 00:01:19.080
Pozwól mi pokazać, jak to będzie działało w Roba we Francji, na przykład po wyjęciu z pudełka

00:01:19.320 --> 00:01:26.930
z ponownym utworzeniem mamy dostęp do konsoli let's log tej kropki procesu oraz węzła i

00:01:29.510 --> 00:01:30.850
zmiennej Dot.

00:01:31.040 --> 00:01:34.210
A to mówi w tym procesie, że jesteśmy uruchomieni.

00:01:34.520 --> 00:01:37.460
Podaj mi zmienny węzeł środowiska.

00:01:37.670 --> 00:01:39.020
I skąd się to wzięło.

00:01:39.050 --> 00:01:42.580
To jest domyślnie ustawione przez Craisa.

00:01:42.620 --> 00:01:51.890
Jeśli to zapiszę i wrócę, spójrzmy na nasze przeciw. Mamy nasz program rejestrujący, ale widzimy, że mamy tutaj

00:01:51.890 --> 00:01:59.870
logi R, która jest tutaj przekazywana, i jest to robione domyślnie, ponieważ wewnętrznie aplikacja Cray re-act daje nam wersję

00:02:00.170 --> 00:02:07.940
M węzła, a kiedy to uruchomimy, mówi ah, że pracujemy w dystrybucji. skonfigurować aplikację tak, aby była lepsza

00:02:07.940 --> 00:02:14.460
dla celów rozwoju, gdy faktycznie uruchomimy starą konstrukcję NPM, zmieniliśmy to środowisko nuty na produkcję

00:02:14.490 --> 00:02:21.880
tak, aby było w stanie powiedzieć, że jest to w porządku dla produkcji, a nie dla rozwoju.

00:02:21.890 --> 00:02:27.140
Zamierzam zminimalizować kod, który zamierzam wykonać, wszystkie te optymalizacje korzystają z bibliotek zoptymalizowanych dla

00:02:27.140 --> 00:02:29.440
produkcji i robię wszystkie te rzeczy.

00:02:29.480 --> 00:02:38.510
Więc zmienne środowiskowe są użyteczne, na przykład mogę powiedzieć, że jeśli środowisko węzłowe było produkcją.

00:02:38.720 --> 00:02:49.470
Chcę dodać Google Analytics, na przykład, myślę, że jeśli tak, jeśli proces nie ma Boga i wywołuje produkcję, to w tym

00:02:52.390 --> 00:02:56.210
bloku powiemy: uruchom Google Analytics lub coś,

00:02:59.660 --> 00:03:05.220
co chcemy, a zobaczysz, że dużo, ale wróćmy do bezpieczeństwa tutaj

00:03:05.220 --> 00:03:06.240
.

00:03:07.550 --> 00:03:16.100
Mamy teraz sposób na wprowadzanie zmiennych do tej aplikacji ze świata zewnętrznego ze środowiska.

00:03:16.100 --> 00:03:27.040
W ten sposób możemy wprowadzić hasła haseł do baz danych, nazwy użytkowników i klucze API, a nawet zmienne, które mogą być nam

00:03:27.040 --> 00:03:30.830
potrzebne ze środowiska, aby nasza aplikacja działała.

00:03:31.000 --> 00:03:36.100
A sposób, w jaki możemy to zrobić, tworzy reakcję i nie martw

00:03:36.100 --> 00:03:42.970
się. Pokażę ci, jak to zrobić poza reakcją CCRI, a także jest tworzenie kropki i 5 pętli plików.

00:03:43.000 --> 00:03:44.770
Tak więc dotarliśmy do

00:03:47.910 --> 00:03:50.050
końca, a ja już go stworzyłem.

00:03:52.830 --> 00:03:59.100
I w tym pliku M mogę dodać wszystko, co chcę z jednym warunkiem.

00:03:59.100 --> 00:04:04.500
Musimy dodać ponownie aplikację Prefekta i po tym mogę powiedzieć, co chcę.

00:04:04.500 --> 00:04:09.960
Powiedzmy, że cześć jest równa wysokiej.

00:04:10.280 --> 00:04:12.590
Brak cytatów tutaj, tak jak jest.

00:04:12.680 --> 00:04:13.810
Zapisz to w ten sposób.

00:04:14.000 --> 00:04:16.560
A teraz skopiujmy to.

00:04:16.760 --> 00:04:22.310
A teraz Konsole zalogował się do procesu, w myśl którego aplikacja re-act przywitała się.

00:04:22.550 --> 00:04:27.660
Tyle tylko, że nie potrzebujemy, aby to było teraz równe, ponieważ to jest zmienna.

00:04:28.100 --> 00:04:33.920
I mam zamiar ponownie uruchomić serwer, aby działało, więc nie uruchomimy ponownie NPM.

00:04:37.540 --> 00:04:40.130
Poczekajmy, aż się załaduje.

00:04:40.250 --> 00:04:45.020
A jeśli zwrócę się dobrze, być może najpierw będę musiał to zapisać.

00:04:45.020 --> 00:04:45.730
Głupi ja.

00:04:45.740 --> 00:04:48.420
Ponownie uruchom ponownie NPM.

00:04:50.380 --> 00:04:53.030
Tak, użyj innego portu i spójrz

00:04:56.580 --> 00:04:57.850
na to.

00:04:58.320 --> 00:04:59.990
Jestem na haju.

00:05:00.360 --> 00:05:07.650
Dzięki temu mogę bezpiecznie dodawać hasła do mojej aplikacji.

00:05:07.990 --> 00:05:09.980
Na przykład pozwól mi pokazać, że uzyskasz pomoc.

00:05:11.970 --> 00:05:14.220
Jeśli przejdziemy do

00:05:20.310 --> 00:05:21.240
inteligentnego

00:05:25.720 --> 00:05:36.390
projektu mózgu, spójrzmy wstecz, przejdźmy do API zwiększania mózgu Smar i tutaj, jeśli przejdę do obrazu kontrolerów, zobaczysz

00:05:36.480 --> 00:05:42.480
tutaj, jak mam tutaj klucz API jako twój klucz API.

00:05:42.640 --> 00:05:49.740
Cóż, nie chcę udostępniać publicznie mojego klucza API, aby go wyjaśnić, powiedzmy, że płacisz za ten interfejs

00:05:49.740 --> 00:05:50.550
API.

00:05:50.640 --> 00:05:56.370
Cóż, nie chcesz, aby ktokolwiek miał do niego dostęp, bo jeśli to zrobi, to każdy może uzyskać

00:05:56.370 --> 00:05:58.970
dostęp i wykorzystać swoją klarowną liczbę tutaj.

00:05:59.040 --> 00:06:00.660
Mógłbym zrobić proces.

00:06:00.720 --> 00:06:09.720
Miej swój klucz API tutaj, a za każdym razem, gdy ściągam tę aplikację, mam plik M-kropki i to już

00:06:09.720 --> 00:06:17.400
ma moje hasła i moje klucze już ustawione i mogę po prostu uruchomić to i tak

00:06:17.970 --> 00:06:25.590
zazwyczaj firmy wdrażają aplikacje poprzez myślenie procesowe Ampe to jakiś klucz zmienny, a każde miejsce, w

00:06:25.590 --> 00:06:30.720
którym się znajduje, ma plik środowiska, który jest całkowicie tajny.

00:06:30.720 --> 00:06:37.030
Pamiętaj, że przez większość czasu są to sekrety, których nie chcesz, aby świat poznał.

00:06:37.320 --> 00:06:44.970
Czasami widzisz folder prywatny Dot, w którym znajdują się wszystkie zmienne środowiskowe do produkcji, które udostępniają

00:06:45.300 --> 00:06:47.370
lokalne i różne środowiska.

00:06:47.370 --> 00:06:51.600
Chodzi o to, aby zachować je w tajemnicy, jak to tylko możliwe.

00:06:51.620 --> 00:06:52.800
Teraz to robi.

00:06:52.810 --> 00:07:00.250
A jeśli to przychodzi z reakcją Craisa, to w rzeczywistości pakiet NAPM, z którego każdy może skorzystać.

00:07:00.290 --> 00:07:05.110
A pod maską ten pakiet jest używany przez Create react up.

00:07:05.240 --> 00:07:08.270
Ale nawet jeśli nie jesteś uruchomiony, stwórz reakcję.

00:07:08.390 --> 00:07:10.990
Możesz po prostu użyć go przez instalację NPM.

00:07:11.030 --> 00:07:14.060
I mają dość dobrą dokumentację.

00:07:14.060 --> 00:07:19.030
Możesz zobaczyć tutaj hasło użytkownika DB i hosta, z którego mogę skorzystać.

00:07:19.160 --> 00:07:25.380
A teraz mogę użyć procesu myślowego Ampe DOB D-B użytkownika i hosta.

00:07:25.550 --> 00:07:33.290
Jest to zalecany sposób upewnienia się, że aplikacja działa i zna sekrety, które nie powinny być

00:07:33.290 --> 00:07:35.730
udostępniane nikomu w bezpieczny sposób.

00:07:36.570 --> 00:07:39.330
Teraz są to zmienne środowiskowe.

00:07:40.470 --> 00:07:44.570
Chcę wam pokazać coś interesującego i to coś, na co powinni uważać.

00:07:44.820 --> 00:07:51.480
Pobierz hub z historią zatwierdzania, niezależnie od tego, czy usuniesz swoje komentarze, czy cokolwiek,

00:07:51.480 --> 00:08:01.050
zawsze będziesz mieć historię zatwierdzania, więc nigdy nie będziesz chciał umieścić swoich tajnych plików, aby uzyskać pomoc, ponieważ są

00:08:01.110 --> 00:08:02.510
one publiczne.

00:08:02.940 --> 00:08:05.190
Więc zawsze używaj psa.

00:08:05.280 --> 00:08:11.670
Zignoruj plik lub nigdy nie używaj żadnych haseł ani kluczy API i historii commitów.

00:08:11.910 --> 00:08:14.880
Pozwól mi wykazać, dlaczego.

00:08:15.080 --> 00:08:21.200
Jeśli idziesz, aby uzyskać pomoc, przeszukiwanie tutaj i znowu jest odpowiedzialne za tę wiedzę.

00:08:21.200 --> 00:08:25.310
Nie używaj go z niecnych powodów, które oznaczają złe powody.

00:08:25.550 --> 00:08:30.360
Ale jeśli wpiszesz remove Ru Spróbujmy jeszcze raz.

00:08:30.360 --> 00:08:36.890
Usuń hasło naciśnij enter i idę zatwierdzić.

00:08:37.230 --> 00:08:44.670
Aha, i to jest moje poszukiwania, ale wróćmy do naszej strony repozytorium to repozytorium głównej strony i spróbujmy

00:08:45.060 --> 00:08:46.300
jeszcze raz.

00:08:46.380 --> 00:08:49.180
Usuń hasło i przejdź do

00:08:52.120 --> 00:08:53.370
zatwierdzenia.

00:08:53.380 --> 00:08:58.290
Mam 38 milionów zobowiązań.

00:08:58.320 --> 00:08:59.680
Przejdźmy do komentarzy tutaj.

00:08:59.680 --> 00:09:08.740
Trzysta osiemdziesiąt dziewięć tysięcy commitów, które usunęły hasła do haseł, więc widzę, gdzie ludzie

00:09:08.770 --> 00:09:11.590
usunęli hasło do bazy

00:09:14.350 --> 00:09:18.470
danych i to jest dla każdego.

00:09:18.520 --> 00:09:20.800
To nie jest zbyt dobre.

00:09:20.800 --> 00:09:23.220
Ponownie użyj tego w sposób odpowiedzialny.

00:09:23.410 --> 00:09:29.530
To tylko demonstracja, która pokazuje, że nigdy nie popełniłeś niczego, by dostać Hobba.

00:09:29.530 --> 00:09:37.720
Jest to tajemnica i jeśli popełnisz błąd, ponieważ ten zamierzony rezultat będzie tam obecny, będziesz musiał zmienić

00:09:37.720 --> 00:09:41.650
sekrety hasła, niezależnie od tego, które są natychmiast.

00:09:41.920 --> 00:09:42.860
I tam to masz.

00:09:42.880 --> 00:09:44.140
Sekrety kodu.

00:09:44.140 --> 00:09:45.400
Uważaj z nimi.

00:09:45.430 --> 00:09:46.130
Ukryj je.

00:09:46.180 --> 00:09:47.130
Chroń ich.

00:09:47.440 --> 00:09:48.940
Zobaczę w następnym.

00:09:49.150 --> 00:09:49.390
Babai.