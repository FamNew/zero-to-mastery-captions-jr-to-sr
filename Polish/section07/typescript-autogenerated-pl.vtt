WEBVTT

00:00:02.400 --> 00:00:08.550
W tej chwili, gdy mamy zainstalowany nasz kompilator Zobaczmy, jak możemy zacząć go używać.

00:00:08.580 --> 00:00:14.760
Zamierzam to wyczyścić i uczynić to trochę większym, abyś mógł zobaczyć, że wszystko,

00:00:14.790 --> 00:00:23.280
co musimy zrobić, aby stworzyć plik maszynopisu, to mieć kropkę na końcu pliku, tak jak my dodgiest dla javascript.

00:00:23.310 --> 00:00:28.440
Potrzebujemy jedynie pliku TS i jest to plik skryptu typu.

00:00:28.620 --> 00:00:32.730
Zróbmy więc najpierw katalog.

00:00:32.800 --> 00:00:35.540
Zadzwonimy do tego typu.

00:00:35.650 --> 00:00:35.990
W porządku.

00:00:35.990 --> 00:00:40.010
Już to zrobiłem, zrobiliśmy CD do tego folderu.

00:00:41.310 --> 00:00:50.450
Aby nie tworzyć obszaru, który chcemy mieć CD i pisać, możemy tutaj pisać skrypt TS dotyku dla

00:00:50.450 --> 00:00:51.810
pliku maszynopisu.

00:00:52.400 --> 00:00:53.720
Otwórzmy to

00:00:57.160 --> 00:01:07.590
w subline i mamy nasz plik maszynopisów i znowu mam fajną małą wtyczkę i daje mi tutaj ikonę skryptu

00:01:07.590 --> 00:01:11.820
typu lub typu i już to wykrywa.

00:01:11.920 --> 00:01:18.850
Teraz, aby twój edytor był skonfigurowany tak, by rozumiał pismo maszynowe, być może będziesz musiał poszukać w Google i

00:01:18.850 --> 00:01:23.980
powiedzieć, jak możemy dodać maszynopis do edytora i zamierzam zostawić zasoby, aby to zrobić.

00:01:24.190 --> 00:01:28.010
Do wysublimowanego tekstu Wszystko, co musisz zrobić, to wykonać polecenie shift.

00:01:28.150 --> 00:01:32.020
Na komputerze Mac może być konieczne wykonanie zmiany sterowania P w systemie Windows.

00:01:32.020 --> 00:01:39.590
Instalujesz pakiety, a następnie instalujesz pakiety, po prostu robisz maszynopis.

00:01:40.190 --> 00:01:43.150
I już zainstalowałem paczkę.

00:01:43.150 --> 00:01:47.950
Widzisz więc, że nie pojawia się tutaj, ale powinien to być ten prosty pakiet maszynopisów.

00:01:47.950 --> 00:01:53.840
Jest kilka innych, które możesz pobrać, ale prosty typ powinien wystarczyć.

00:01:54.780 --> 00:02:02.340
Gdy to zrobisz, gdy dojdziesz do sedna, zobaczysz, że mój edytor rozpoznaje plik TS

00:02:02.400 --> 00:02:09.580
jako maszynopis i tak możesz sprawdzić, czy twój edytor ma to podświetlanie składni.

00:02:09.700 --> 00:02:12.740
Znowu możesz zobaczyć, że wszystkie skrypty

00:02:15.980 --> 00:02:19.870
typu "Bóg" są skonfigurowane, napiszmy tutaj prostą linię maszynopisową.

00:02:19.880 --> 00:02:29.520
Powrócimy do naszego prostego przykładu funkcji, która przyjmuje elementy aib i

00:02:29.520 --> 00:02:31.960
która powróci.

00:02:32.170 --> 00:02:33.670
Powiedzmy, że

00:02:36.820 --> 00:02:38.540
a a b.

00:02:38.770 --> 00:02:41.740
Bardzo prosta funkcja.

00:02:41.740 --> 00:02:47.000
Mam zamiar to zapisać i uruchommy to przez kompilator.

00:02:47.230 --> 00:02:49.230
Przywołajmy terminal.

00:02:49.370 --> 00:02:58.670
Zamierzam po prostu umieścić to na jednym pliku tylko po to, żeby wyglądało ładnie i tutaj możemy uruchomić TS

00:02:58.760 --> 00:03:01.520
C dla kompilatora i pliku.

00:03:01.520 --> 00:03:03.420
Chcemy uruchomić kompilator.

00:03:03.500 --> 00:03:07.690
W naszym przypadku dopisek maszynopisu TS

00:03:10.940 --> 00:03:18.900
So maszynopis TS powiedzmy ustawić enter, podczas gdy dużo koduję, być może zauważyłeś.

00:03:19.140 --> 00:03:26.220
Dlaczego po prostu nie napiszesz funkcji błędu i ponownie wpisz polecenie scrip wykrywa te błędy za każdym razem,

00:03:26.250 --> 00:03:27.870
gdy wprowadzisz nieprawidłowy javascript.

00:03:28.050 --> 00:03:34.580
To będzie w grze, kiedy robisz coś zabawnego, gdy próbujesz to zrobić ponownie.

00:03:34.610 --> 00:03:41.930
Napiszmy właściwy javascript, więc ten jest tylko deklaracją funkcji, więc zapiszmy i uruchommy to

00:03:41.930 --> 00:03:42.530
ponownie.

00:03:45.190 --> 00:03:47.950
W porządku, to wszystko.

00:03:48.030 --> 00:03:57.090
Brak błędów, ale widzisz tutaj, że został utworzony plik jp maszynopisu i jeśli przejdę do maszynopisu Tak, wszystko w

00:03:58.260 --> 00:04:01.510
porządku Mam dokładnie to samo wyjście.

00:04:01.680 --> 00:04:02.680
Ta funkcja.

00:04:02.820 --> 00:04:08.900
Ta funkcja przeszła przez kompilator i została skompilowana do javascript.

00:04:08.940 --> 00:04:15.510
Nic nie jest tak naprawdę inne, ponieważ nie zrobiliśmy tutaj nic innego.

00:04:15.510 --> 00:04:18.840
W porządku, więc zmieńmy to w funkcję Erol.

00:04:18.900 --> 00:04:22.390
Powiedzmy, że consomme jest równy jej funkcji

00:04:27.490 --> 00:04:36.190
i ponownie pojawia się w kompilatorze i wygląda na to, że nie ma błędu, więc wróćmy do

00:04:36.190 --> 00:04:38.390
naszego pliku jazzowego i.

00:04:38.490 --> 00:04:39.040
Whoa.

00:04:39.150 --> 00:04:39.820
Spójrz na to.

00:04:40.700 --> 00:04:49.760
Zmieniło to nasz javascript lub nasz maszynopis na plik javascript, ale używa składni Yes 5, więc nie

00:04:49.760 --> 00:04:51.950
ma tutaj funkcji błędu.

00:04:52.170 --> 00:04:57.630
I możesz się zastanawiać, czy to nie to, co Babel.

00:04:58.080 --> 00:05:02.540
Cóż, chodźmy do Babbel.

00:05:02.690 --> 00:05:08.770
Otwórz przeglądarkę i powiedz Babel i przejdź do kompilatora Biblii.

00:05:10.150 --> 00:05:14.740
I mają tu sprytne małe narzędzie, które mówi: po prostu spróbuj.

00:05:16.420 --> 00:05:24.870
I właśnie tutaj możemy po prostu uruchomić to, co tutaj zrobiliśmy, więc po prostu skopiuj i wklej naszą funkcję i zobaczmy,

00:05:28.300 --> 00:05:29.220
co otrzymamy.

00:05:34.920 --> 00:05:41.350
Jeśli klikniemy i ustawimy, zobaczymy, że otrzymujemy to samo.

00:05:41.610 --> 00:05:46.260
Kompiluje nasz nowy kod ESX.

00:05:46.430 --> 00:05:48.810
Tak, pięć.

00:05:48.860 --> 00:05:53.510
Więc tak, robi dokładnie to samo, co bełkot.

00:05:54.010 --> 00:06:01.640
Jest to kolejny sposób na wypróbowanie nowych funkcji javascript i nadal kompilacja go do czegoś,

00:06:01.640 --> 00:06:03.620
co przeglądarka rozumie.

00:06:03.620 --> 00:06:10.970
A teraz może mieć sens, dlaczego maszynopis jest nadzbiorem skryptu javascript, pozwala nam używać nowych funkcji,

00:06:10.970 --> 00:06:16.030
których javascript nie miałby inaczej, a my po prostu je skompilowaliśmy.

00:06:16.960 --> 00:06:23.500
Maszynka do pisania stara się również zachować zgodność z nowoczesnymi funkcjami javascript, więc zostaną

00:06:23.500 --> 00:06:27.820
one zaimplementowane, aby kompilator mógł zrozumieć nasze funkcje.

00:06:27.860 --> 00:06:28.910
Bardzo fajny.

00:06:28.970 --> 00:06:31.400
Teraz napiszmy nasz pierwszy typ.

00:06:31.750 --> 00:06:33.710
Składnia ponownie maszynopisu.

00:06:33.770 --> 00:06:40.100
Mają naprawdę dobrą dokumentację na ten temat, a my pójdziemy krok po kroku,

00:06:40.100 --> 00:06:48.380
aby zrobić coś w rodzaju coachingu, lub w naszym przypadku jest to liczba, a B również powinna być liczbą.

00:06:48.510 --> 00:06:53.670
Kiedy dwa outsy bazują tutaj tylko po to, żeby wszystko było czystsze.

00:06:53.820 --> 00:07:03.160
Jeśli teraz to zapisam i obejrzę to, jak już mam, widzisz, jak mój redaktor daje mi małą wskazówkę.

00:07:03.180 --> 00:07:04.770
To kolejna zaleta maszynopisu.

00:07:04.770 --> 00:07:09.350
Pomoże mi w niektórych spodniach, kiedy pracuję nad moim kodem.

00:07:11.260 --> 00:07:14.120
Ale na razie zobaczmy, do czego to się kompiluje.

00:07:14.360 --> 00:07:22.910
Chcę uruchomić go ponownie i przejść do mojego pliku javascript i tak, nie mamy żadnego z tego numeru

00:07:23.010 --> 00:07:23.500
liczbowego.

00:07:23.600 --> 00:07:29.060
Kompilator go usuwa, ponieważ jest to kod, który wchodzi do produkcji i nie chcemy

00:07:29.090 --> 00:07:34.950
tych X-bajtów w naszym kodzie, które spowodują, że nasz kod będzie cięższy do wysłania do klienta.

00:07:35.670 --> 00:07:38.850
Kompilator robi to automatycznie dla nas.

00:07:38.850 --> 00:07:40.140
Bardzo fajny.

00:07:40.140 --> 00:07:41.510
Ale sprawdź to.

00:07:41.730 --> 00:07:50.970
Jeśli zrobię jakieś cztery plus pięć, to co właśnie zrobiłem.

00:07:52.280 --> 00:07:53.390
Mój redaktor.

00:07:53.450 --> 00:07:58.020
Automatycznie nie zrobiłem nic poza ustawieniem maszynopisu za pomocą mojego edytora.

00:07:58.130 --> 00:08:03.260
Spodziewam się argumentów, ale mam jeden, bo robię cztery plus pięć.

00:08:03.300 --> 00:08:08.330
Ponownie, jeśli zrobimy cztery, przyjdzie pięć, a teraz wszystko powinno działać.

00:08:08.670 --> 00:08:10.170
I nie dostaję żadnych błędów.

00:08:10.200 --> 00:08:17.340
Jeśli zapiszę i uruchomię TMC, wszystko działa.

00:08:17.440 --> 00:08:19.120
Nasz kod nadal działa.

00:08:19.120 --> 00:08:29.090
Jeśli wybieram okno dialogowe i po prostu damy mu stałą odpowiedź.

00:08:30.040 --> 00:08:31.250
A czym jest ten dziennik konsoli.

00:08:31.250 --> 00:08:36.980
Odpowiedź.

00:08:37.060 --> 00:08:38.930
I uruchommy to ponownie.

00:08:40.600 --> 00:08:40.940
W porządku.

00:08:40.950 --> 00:08:51.720
Wszystko działa, ale jeśli wiem, jaki typ pomijają nas podejrzani, otrzymuję odpowiedź 9.

00:08:51.800 --> 00:08:52.640
Bardzo fajny.

00:08:53.570 --> 00:09:04.140
Co jeśli zrobię ciąg znaków z napisem "cześć", czy widzisz, że mój edytor ma podkreślenie czerwone.

00:09:04.140 --> 00:09:11.810
Teraz i jeśli umieściłem kursor nad tym podkreślonym rodzajem sprawdzania pisowni na twoim słowie lub

00:09:12.230 --> 00:09:20.930
dokumencie tekstowym, argument argumentu za literówką nie jest przypisywany do parametru typu number, ponieważ powiedziałem, że ma

00:09:20.990 --> 00:09:22.630
typ liczby.

00:09:22.750 --> 00:09:31.010
Nawet jeśli próbowałem uruchomić TSC teraz, o ile go nie zapisałem, zapiszesz to, nawet jeśli teraz uruchomiłem TSC.

00:09:33.530 --> 00:09:39.440
To faktycznie spowoduje błąd, mówiąc, że dokładnie to, co powiedział w moim edytorze.

00:09:39.440 --> 00:09:43.550
Ten typ łańcucha nie będzie działał z typem liczby.

00:09:43.550 --> 00:09:45.070
Jakie to jest świetne.

00:09:45.080 --> 00:09:52.820
Chodzi o to, że mówimy, że przechwytuje błędy w czasie kompilacji, ponieważ ten kod nigdy nie przejdzie

00:09:52.820 --> 00:09:59.090
do produkcji, ponieważ abyśmy mogli przesłać kod do produkcji, musimy najpierw przekonwertować go

00:09:59.090 --> 00:10:00.410
na Javascript.

00:10:00.650 --> 00:10:08.240
A kiedy konwertujemy na javascript łapiemy te błędy w naszym kompilatorze i jeśli rzucają jakieś błędy, wiemy, że

00:10:08.270 --> 00:10:15.410
musimy je naprawić w porównaniu do Javascriptu, tak jak działa to javascript jest wysyłany do przeglądarki, a

00:10:15.410 --> 00:10:21.920
przeglądarka robi to, co nazywa się po prostu w czasie kompiluje i kompiluje kod na

00:10:21.920 --> 00:10:22.520
miejscu.

00:10:22.670 --> 00:10:28.280
Dla każdego z ich użytkowników prawdopodobnie spowoduje to błąd, a użytkownik zobaczy pusty ekran lub

00:10:28.280 --> 00:10:31.410
chleb i nie będziemy wiedzieć, co robić.

00:10:31.880 --> 00:10:34.520
To całkiem miłe.

00:10:35.000 --> 00:10:42.640
A tak przy okazji, być może zauważyłeś, że nadal kompiluje nasz javascript do parametru hello string.

00:10:42.710 --> 00:10:44.090
To po prostu coś, co robi.

00:10:44.090 --> 00:10:49.360
Ale widzisz, że błędy pojawiają się, więc nie wysłałeś tego do produkcji,

00:10:49.370 --> 00:10:54.180
zobaczysz, że są błędy i że musisz naprawić pewne rzeczy.

00:10:54.200 --> 00:10:55.100
W porządku.

00:10:55.400 --> 00:10:58.250
To wygląda całkiem ekscytująco i obiecująco.

00:10:58.340 --> 00:11:06.500
Właśnie dodaliśmy tę wspaniałą funkcję, aby upewnić się, że nasz kod jest mniej podatny na błędy.

00:11:06.500 --> 00:11:07.730
Wypróbuj go sam.

00:11:07.730 --> 00:11:14.890
Upewnij się, że twój edytor tekstu ma całą tę konfigurację i pamiętaj.

00:11:15.190 --> 00:11:18.310
Jeśli masz problemy ze swoim edytorem, Google jest tu twoim przyjacielem.

00:11:18.400 --> 00:11:24.160
Jest mnóstwo zasobów online dla każdego edytora, który musisz skonfigurować za pomocą maszynopisu, ale nie powinno

00:11:24.160 --> 00:11:26.580
to zająć więcej niż kilka minut.

00:11:26.620 --> 00:11:29.380
Może Max na godzinę.

00:11:29.550 --> 00:11:31.490
Dobra, do zobaczenia w następnym wideo.

00:11:31.730 --> 00:11:32.010
PA pa.