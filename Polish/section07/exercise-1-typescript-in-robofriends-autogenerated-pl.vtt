WEBVTT

00:00:00.840 --> 00:00:01.730
Witamy spowrotem.

00:00:02.040 --> 00:00:04.290
Teraz jest czas ćwiczeń.

00:00:04.290 --> 00:00:11.850
Ostrzegamy, że to prawdopodobnie najtrudniejsze ćwiczenie w całym kursie.

00:00:11.880 --> 00:00:14.280
To będzie naprawdę frustrujące.

00:00:14.490 --> 00:00:18.910
I może powinieneś powiedzieć coś nie tak miłego o mnie.

00:00:19.320 --> 00:00:28.320
Należy jednak pamiętać, że amerykańscy programiści zawsze mieli do czynienia z zadaniami, które nie mają jasnego rozwiązania.

00:00:28.470 --> 00:00:34.080
Będziemy musieli obejrzeć w Google przykłady kodu i dowiedzieć się, co należy

00:00:34.290 --> 00:00:41.340
zrobić, ponieważ nasz szef, nasza firma lub nasz projekt nie dbają o to, że jesteśmy sfrustrowani,

00:00:41.340 --> 00:00:43.280
czasami potrzebujemy dostarczyć pracy.

00:00:43.710 --> 00:00:50.610
W tym ćwiczeniu możesz odczuwać frustrację, zwłaszcza jeśli maszynopis jest dla ciebie nowy, ale po prostu trzymaj

00:00:50.700 --> 00:00:51.670
się go.

00:00:51.690 --> 00:00:57.240
Mam zamiar dostarczyć film z rozwiązaniem po tym, więc jeśli naprawdę poczujesz się naprawdę

00:00:57.240 --> 00:00:59.260
sfrustrowany, możesz kontynuować oglądanie.

00:00:59.280 --> 00:01:07.980
Ale zalecam, abyś podążał za tym ćwiczeniem i staraj się dodawać typy w jak największym stopniu i miejmy nadzieję,

00:01:08.370 --> 00:01:12.000
że nauczysz się z niego trochę maszynopisu.

00:01:12.000 --> 00:01:19.260
Teraz skonfigurowałem wszystko dla ciebie po prostu, aby było łatwiej, ponieważ konfiguracja projektu niekoniecznie

00:01:19.260 --> 00:01:21.370
jest celem tego kursu.

00:01:22.920 --> 00:01:26.370
Widzisz, korzystam ze skryptu Utwórz typ reakcji.

00:01:26.580 --> 00:01:34.920
Postępuję zgodnie z instrukcjami, które są tylko do pobrania, aby utworzyć ponownie, a następnie uruchom go za pomocą opcji

00:01:35.820 --> 00:01:43.260
maszynopisu, a to po wyjęciu z pudełka daje nam wszystko, czego potrzebujemy, aby zacząć pisać maszynopis.

00:01:43.280 --> 00:01:52.170
W końcu wziąłem naszych przyjaciół robo i przenieśliśmy pliki do nowej aplikacji zawierającej maszynopis.

00:01:52.170 --> 00:02:01.430
A więc mam tutaj nasz projekt na maszynopis, do którego mam dostęp, zanim cię po prostu

00:02:01.430 --> 00:02:02.120
zwolnię.

00:02:02.120 --> 00:02:08.420
Należy pamiętać, że istnieje kilka różnic, takich jak plik konfiguracyjny TS, który daje

00:02:08.420 --> 00:02:10.340
nam opcję kompilatora.

00:02:10.520 --> 00:02:15.320
Widzimy, gdzie to będzie, że używamy kolejnych modułów E-S.

00:02:15.770 --> 00:02:18.220
Mamy cel, ponieważ ma pięć.

00:02:18.260 --> 00:02:21.620
Widzimy, że pozwalamy również GSX reagować.

00:02:21.620 --> 00:02:31.320
Co oznacza, że jeśli przejdę do moich folderów źródłowych, nasze pliki nie są J. S. pliki są plikami TSX.

00:02:31.670 --> 00:02:37.910
Mają ten x na samym dole, ponieważ kompilator maszynki do pisania

00:02:41.780 --> 00:02:49.340
musi zrozumieć GSX. Jeśli przejdziemy w dół, zauważymy, że wykluczamy pewne rzeczy, których nie

00:02:49.340 --> 00:02:52.490
chcemy, aby kompilator maszynopisu działał.

00:02:52.500 --> 00:02:59.730
Nareszcie jest coś, co nazywa się lintami TS i właściwie to skomentowałem.

00:02:59.820 --> 00:03:10.060
Jeśli przejdziemy do domyślnego projektu z roku, zobaczysz, że linta TS ma kilka zalecanych Lantingów i reaguje jak również maszynopis,

00:03:10.120 --> 00:03:16.810
a także kilka ładniejszych konfiguracji, aby upewnić się, że nasz kod jest ładny,

00:03:16.810 --> 00:03:20.330
ale usunąłem to z naszego projekt.

00:03:20.340 --> 00:03:26.430
Widać tutaj, że są to wszystkie reguły Lanting, abyśmy mogli ponownie przejść przez coś o

00:03:26.490 --> 00:03:32.150
nazwie Slint, ponieważ właśnie kompilujemy kod maszynowy Kingo i lintujemy również nasze pliki.

00:03:32.370 --> 00:03:36.140
Ale usunąłem je, ponieważ będzie to jeszcze bardziej frustrujące.

00:03:36.150 --> 00:03:39.320
Po prostu będziesz musiał zajmować się wszystkimi tymi obszarami.

00:03:39.480 --> 00:03:44.830
A ponieważ teraz skupiamy się tylko na maszynopisie i niekoniecznie ograniczamy.

00:03:45.060 --> 00:03:48.880
Skomentowałem to, jeśli chcesz dodatkowego wyzwania, które możesz skomentować.

00:03:48.900 --> 00:03:51.700
Ale przygotuj się na trudną drogę.

00:03:53.060 --> 00:04:01.970
Na koniec, jeśli przejdziemy do pakowania Jason File, zobaczymy, że w zależnościach od dev mamy

00:04:02.210 --> 00:04:12.080
pakiet typecript, a także typy act, czyli pliki deklaracji typów dla naszego węzła testowego, na który reagujemy

00:04:12.080 --> 00:04:13.850
i reagujemy.

00:04:13.970 --> 00:04:22.400
Jeśli przejdziemy do pliku lub folderu modułów węzła i przejdziemy do typów, mamy dostęp do wszystkich definicji typów, których

00:04:23.330 --> 00:04:26.800
możemy używać z tymi bibliotekami stron trzecich.

00:04:27.170 --> 00:04:29.950
Więc jak zacząć.

00:04:30.020 --> 00:04:40.230
Chcę po prostu pisać typy, ponieważ jeśli uruchomisz NPM, uruchom tutaj kompilator maszynopisów, a teraz aplikacja

00:04:40.590 --> 00:04:45.560
działa i widzimy, że nie mamy błędów.

00:04:45.690 --> 00:04:56.250
Ale jeśli zrobimy coś śmiesznego w naszych komponentach, jeśli powiem, że jest to ciąg znaków, zobaczysz, że maszynopis zawodzi, ponieważ ciąg znaków

00:04:56.290 --> 00:05:03.490
nie ma nazwy właściwości, ponieważ oczekuje obiektu, który ma skrypt, który już działa po

00:05:03.490 --> 00:05:05.330
wyjęciu z pudełka.

00:05:05.470 --> 00:05:10.040
Chciałem kontynuować i spróbować dodać typy dla komponentów i kontenerów.

00:05:10.270 --> 00:05:18.450
A ponieważ jest to trochę podchwytliwe, zacząłem od troszeczkę w aplikacji dot. TSX i znowu się tu

00:05:18.450 --> 00:05:19.560
nie denerwuję.

00:05:19.560 --> 00:05:23.650
Jest to tylko standard, aby wszystko o nim powtórzyć.

00:05:23.700 --> 00:05:26.230
Czy te linie są tutaj?

00:05:27.050 --> 00:05:32.010
Gdzie eksportuję, ponieważ mógłbym chcieć użyć mojego robota interfejsu.

00:05:32.060 --> 00:05:39.080
I to jest po prostu wspólna składnia, w której, ponieważ jest to interfejs, powiem I, a następnie robotowi nazwę interfejsu

00:05:39.080 --> 00:05:43.360
o nazwie I. RE. i e-mail.

00:05:43.400 --> 00:05:44.740
Widzieliśmy to już wcześniej.

00:05:45.080 --> 00:05:50.720
A potem mamy również interfejs dla naszych rekwizytów, które otrzymuje aplikacja.

00:05:50.720 --> 00:05:53.030
W naszym przypadku tak naprawdę nie otrzymujemy żadnych rekwizytów.

00:05:53.060 --> 00:05:54.390
Więc jest pusty.

00:05:54.800 --> 00:06:02.060
Mamy też interfejs dla stanu naszej aplikacji, w którym roboty i roboty Hershfielda

00:06:02.060 --> 00:06:06.470
stanowią układ robotów interfejsów, a następnie wyszukują.

00:06:06.470 --> 00:06:16.630
Czuję, że jestem siłą, a na koniec mam komponent Riaka, który przyjmuje rekwizyty, które są puste, i stan, który jak

00:06:17.110 --> 00:06:24.610
widzisz ma roboty, a Hershfield i ja dodaliśmy to i tutaj, ponieważ reakcja jest

00:06:24.610 --> 00:06:29.130
dość specyficzna i może cię podstępem potknąć cię.

00:06:29.200 --> 00:06:35.620
Ale teraz, kiedy już wiesz, jak to zrobić, możesz odejść sam i zacząć dodawać typy.

00:06:36.510 --> 00:06:39.270
Tak jak powiedziałem, będzie to trudne.

00:06:39.540 --> 00:06:43.680
To będzie frustrujące, ale zachęcam do wypróbowania tego.

00:06:44.010 --> 00:06:50.190
Aż do końca tego ćwiczenia otrzymasz wiadomość na naszym czacie społecznościowym, w jaki sposób lubisz typy

00:06:50.190 --> 00:06:55.650
i jakie są twoje wrażenia, ponieważ jest tak wielu ludzi, którzy kochają maszynopis i

00:06:55.650 --> 00:07:00.240
tak wielu ludzi, którzy nienawidzą maszynopisu i to naprawdę polaryzujące narzędzie.

00:07:00.240 --> 00:07:07.590
Więc chcę usłyszeć o tym wszystkim w naszej społeczności czatu, ale na razie zacznijcie pracować nad tym i zobaczę was w filmie

00:07:07.770 --> 00:07:08.750
z rozwiązaniem.