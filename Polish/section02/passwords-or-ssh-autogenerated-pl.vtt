WEBVTT

00:00:01.240 --> 00:00:10.180
Witamy ponownie po ustanowieniu zabezpieczonej komunikacji symetrycznej, którą serwer musi zweryfikować, aby sprawdzić, czy użytkownik

00:00:10.420 --> 00:00:14.790
ma prawo do dostępu do niego.

00:00:15.100 --> 00:00:20.380
Jeśli tak nie było, to każdy może połączyć się z serwerem.

00:00:20.830 --> 00:00:29.140
Widzisz, że rozmawialiśmy o kluczu Diffiego Helmana, wymieniającego szyfrowanie asymetryczne w celu uzyskania klucza symetrycznego,

00:00:29.140 --> 00:00:31.390
abyśmy mogli się komunikować.

00:00:31.810 --> 00:00:36.370
I użyliśmy hashu, aby się upewnić, że nie ma śmiesznego interesu.

00:00:36.670 --> 00:00:44.830
Czwartą rzeczą jest uwierzytelnienie użytkownika, ale chcemy się upewnić, że ktokolwiek próbuje się z nami komunikować, jest kimś,

00:00:44.830 --> 00:00:51.170
z kim chcemy się komunikować i mamy prawo do komunikowania się z nim.

00:00:52.620 --> 00:01:01.590
I dlatego, jeśli wrócimy do mojego terminala, poprosiliśmy o hasło i jest to domyślne zachowanie.

00:01:01.710 --> 00:01:11.540
Jeśli I S-sh do czegokolwiek, otrzymam pytanie o hasło, ponieważ chcę się upewnić, że nie chcesz, aby upewnić się,

00:01:11.900 --> 00:01:18.740
że z komputera nie można uzyskać dostępu do mojego serwera Digital Ocean.

00:01:18.750 --> 00:01:19.420
Dobrze.

00:01:19.450 --> 00:01:20.390
Tak jak za to zapłaciłem.

00:01:20.390 --> 00:01:23.510
Możesz po prostu wejść i zrobić to, co chcesz.

00:01:23.520 --> 00:01:25.890
Zdejmij moją stronę internetową.

00:01:25.950 --> 00:01:32.010
Nie, chcę mieć pewność, że ktokolwiek uruchomi to polecenie, ponieważ nie możesz tego uruchomić, a

00:01:32.010 --> 00:01:34.720
otrzymasz pytanie o to samo hasło.

00:01:36.040 --> 00:01:39.220
Ale chcę się upewnić, że tylko ja mogę uzyskać do niego dostęp.

00:01:39.310 --> 00:01:46.310
Powodem, dla którego udało mi się zapobiec temu i automatycznie się zalogowałem, było ponowne przejście przez S-sh.

00:01:46.390 --> 00:01:49.460
Więc weź ze mną wyjaśnię, co tu się dzieje.

00:01:49.510 --> 00:01:58.260
Teraz są dwa sposoby, że możemy rzeczywiście uwierzytelnić się na serwerze jako pierwszy i to jest to, czego

00:01:58.260 --> 00:02:01.430
używa większość użytkowników S-sh to hasło.

00:02:01.630 --> 00:02:05.350
Użytkownik jest proszony o podanie nazwy użytkownika, po której następuje hasło.

00:02:05.350 --> 00:02:11.380
W tym przypadku użytkownik jest rootem, a hasło, podczas gdy hasło jest czymś, co cyfrowe powinno wysłać

00:02:11.380 --> 00:02:15.670
mi e-mail, gdy po raz pierwszy utworzyłem tę kroplę lub serwer.

00:02:16.000 --> 00:02:24.520
A ponieważ hasło to zostanie wysłane po nawiązaniu połączenia S-sh, a mój komputer i serwer mają

00:02:24.550 --> 00:02:29.420
klucz symetryczny, jest on zaszyfrowany i bezpieczny do wysłania.

00:02:29.770 --> 00:02:35.950
Mimo że hasła są szyfrowane, nadal nie zaleca się używania haseł do bezpiecznych połączeń,

00:02:35.950 --> 00:02:43.160
ponieważ możesz ich użyć i po prostu użyć brutalnej siły i wypróbować na serwerze cały pakiet

00:02:43.180 --> 00:02:44.040
haseł.

00:02:44.170 --> 00:02:47.540
A jeśli hasło jest naprawdę złe, tak jak dwie trzecie.

00:02:47.860 --> 00:02:52.260
Cóż, atakujący może łatwo uzyskać dostęp do twojego serwera.

00:02:52.330 --> 00:02:56.670
Lepszą alternatywą jest drugi sposób na uzyskanie uwierzytelnienia.

00:02:56.890 --> 00:02:58.970
I o tym będziemy mówić w następnych kilku.

00:02:58.990 --> 00:03:05.890
Jest to główny powód, dla którego chcemy założyć S-sh z wstaniem i powrotem do tego, co

00:03:06.100 --> 00:03:10.200
Bruno prosi nas, abyśmy początkowo przygotowali S-sh z pomocą.

00:03:10.210 --> 00:03:19.090
W końcu w długi sposób pokażę ci następny film, ostateczną moc S-sh i

00:03:19.090 --> 00:03:23.290
jak możesz uniknąć używania haseł.

00:03:23.410 --> 00:03:25.000
Zobaczę w następnym Buh-Bye.