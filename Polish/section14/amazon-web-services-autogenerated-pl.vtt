WEBVTT

00:00:00.780 --> 00:00:02.190
Witamy spowrotem.

00:00:02.190 --> 00:00:09.480
Jestem na stronie internetowej platformy AWOS tutaj i widać, że mają wiele usług, z których możemy

00:00:09.480 --> 00:00:10.290
skorzystać.

00:00:10.410 --> 00:00:12.960
Wszystkie z dość interesująco brzmiącymi imionami.

00:00:12.990 --> 00:00:20.040
Amazon jest uznaniem Rory Amazon, dzięki któremu możemy uzyskać rozpoznawanie obrazów podobne do naszego interfejsu

00:00:20.040 --> 00:00:21.090
API clarify.

00:00:21.090 --> 00:00:24.180
Mają pamięć, którą mają obliczoną.

00:00:24.180 --> 00:00:25.590
Mają migrację.

00:00:25.590 --> 00:00:27.840
Mają nasze VR.

00:00:27.960 --> 00:00:33.420
Jeśli jest jedna rzecz, której nie brakuje, to wszystkie usługi, które powodują ból w twojej głowie i

00:00:33.420 --> 00:00:37.050
po prostu nie możesz zdecydować, czego potrzebujesz i co chcesz robić.

00:00:37.320 --> 00:00:39.560
Przejdę więc do kilku podstawowych.

00:00:39.600 --> 00:00:44.830
Niektóre z najpowszechniejszych rzeczy, które najprawdopodobniej spotkasz na

00:00:44.840 --> 00:00:46.510
co dzień.

00:00:46.680 --> 00:00:51.660
Ale jeśli chcesz, możesz zbadać różne usługi i zobaczyć, co oferują.

00:00:51.660 --> 00:00:58.760
Jest szansa, że jeśli próbujesz coś zrobić, Amazon prawdopodobnie oferuje dla niego proste rozwiązanie.

00:00:58.890 --> 00:01:05.010
Teraz nadal będziesz musiał napisać kod, ale zadbają o wszystkie te punkty bólu, których

00:01:05.010 --> 00:01:10.180
być może nie chcemy się martwić takimi konfiguracjami konfiguracji w maszynach.

00:01:10.210 --> 00:01:12.650
Zresztą wracajmy na właściwe tory.

00:01:12.760 --> 00:01:19.130
Te, o których będę mówić, to te pięć i jak już mówiłem, to te najpopularniejsze,

00:01:19.160 --> 00:01:20.220
jakie zobaczysz.

00:01:20.480 --> 00:01:27.680
A teraz wchodzimy w to, co nazywamy polem deweloperskim, które jako programista stron internetowych może nie dotykać tak wiele, ponieważ

00:01:27.680 --> 00:01:32.720
niektóre firmy mają oddanych ludzi, którzy pracują nad tymi rzeczami, ponieważ jest tak wiele

00:01:32.780 --> 00:01:34.590
rzeczy, które muszą nadążyć.

00:01:34.820 --> 00:01:40.500
Ale bardzo ważne jest, abyśmy wiedzieli, w jaki sposób te elementy wpadają w nasz pakiet dla programistów internetowych.

00:01:42.730 --> 00:01:49.810
Zacznijmy od tego w rogu łatwego do ponownego nazwania Amazon nie jest najlepszym nazewnictwem.

00:01:49.800 --> 00:01:53.680
Więc ciężko jest naprawdę owinąć rękę.

00:01:53.710 --> 00:01:56.910
Być może będziesz musiał wrócić do tego filmu, ale dostaniesz go pod koniec.

00:01:56.920 --> 00:01:59.130
Nie martw się teraz.

00:01:59.180 --> 00:02:06.000
Easy 2 to coś, co nazywamy maszyną do pracy na gołym metalu i jakąkolwiek moc obliczeniową.

00:02:06.070 --> 00:02:11.980
Więc chcesz myśleć o prostym jako podstawowym serwerze, który możesz uruchomić tak jak serwer Digital

00:02:11.980 --> 00:02:13.870
Ocean Linux, który stworzyliśmy.

00:02:13.950 --> 00:02:22.320
To właśnie E. C: możesz uruchomić swój back and rest API lub serwer na łatwym

00:02:22.320 --> 00:02:24.520
zamiast, powiedzmy, Digital Ocean lub Laroque.

00:02:24.990 --> 00:02:29.400
To całkiem fajne i już wcześniej używaliśmy czegoś takiego, więc ma to sens.

00:02:29.430 --> 00:02:36.430
Wystarczy, że zarejestrujesz się na AWOS i powiesz, że tego chcę, a oni wszystko dla ciebie przygotują.

00:02:36.450 --> 00:02:42.270
Możesz im powiedzieć: Och, tak, chcę, żeby to węzeł był dostępny i źle na komputerze z Linuksem.

00:02:42.510 --> 00:02:43.320
To jest miłe.

00:02:43.320 --> 00:02:46.930
Jest to serwer typu "bare metal" ogólnego przeznaczenia.

00:02:46.980 --> 00:02:55.270
Następnie są trzy, a ESRI to, co nazywamy usługą przechowywania obiektów.

00:02:55.340 --> 00:03:04.170
Teraz oznacza to, że każdy obiekt jest przechowywany jako plik z jego metadanymi i identyfikatorem, co można uznać

00:03:04.170 --> 00:03:06.060
za prawo obiektu.

00:03:06.090 --> 00:03:10.690
Tak szybko, jak tylko przechowujesz obiekt, masz klucz lub identyfikator.

00:03:10.920 --> 00:03:17.450
I z tym ja. RE. możesz uzyskać dostęp do dowolnego obiektu, który przechowuje Id i dlaczego jest to przydatne.

00:03:17.550 --> 00:03:26.430
Cóż, z takim wdziękiem pozwala nam przesyłać i przechowywać, a także pobierać praktycznie dowolne pliki lub obiekty, które mogą

00:03:27.030 --> 00:03:34.620
nam się spodobać, jeśli chcemy przechowywać obraz, który możemy załadować na Esrey, jeśli chcemy przechowywać masywny

00:03:34.620 --> 00:03:37.650
obiekt, ale możemy zapisz to tutaj.

00:03:37.860 --> 00:03:45.320
Na przykład dzięki naszej inteligentnej aplikacji do mózgu chcemy załadować obrazy lub zapisać obrazy wysyłane przez

00:03:45.330 --> 00:03:53.970
użytkowników w celu wyjaśnienia interfejsu API, abyśmy mogli w przyszłości lepiej szkolić model, a S3 ma limit wielkości wynoszący

00:03:54.060 --> 00:03:55.020
pięć gigabajtów.

00:03:55.020 --> 00:04:00.480
Więc możesz sobie wyobrazić, że możesz załadować całkiem duże rzeczy, ale jest to świetne miejsce do przechowywania.

00:04:00.510 --> 00:04:07.650
Być może chcemy mieć zdjęcia profilowe dla naszej inteligentnej aplikacji mózgowej i naszych użytkowników, więc możemy

00:04:07.650 --> 00:04:10.980
załadować zdjęcia profilowe i wiadro S3.

00:04:10.980 --> 00:04:12.060
Porozmawiajmy o następnym.

00:04:12.060 --> 00:04:14.900
I to właśnie mnie naprawdę podnieca.

00:04:14.940 --> 00:04:17.940
I będziemy eksperymentować z tym w tej sekcji.

00:04:19.090 --> 00:04:26.440
Nazywa się Lamda i Lamda, a Lamda umożliwia uruchamianie kodu praktycznie dla dowolnego typu aplikacji lub z powrotem

00:04:26.440 --> 00:04:27.650
do użytku.

00:04:27.670 --> 00:04:33.910
Piękno polega na tym, że po prostu podałeś funkcję lambda, która mówi: Hej, daj mi tylko funkcję i daj mi

00:04:33.940 --> 00:04:36.690
znać, kiedy ją uruchomię, a ja to uruchomię.

00:04:36.790 --> 00:04:37.600
to jest to!

00:04:37.600 --> 00:04:39.710
Potrzebujemy zerowej administracji.

00:04:39.730 --> 00:04:41.670
Konfiguracja zerowa.

00:04:41.750 --> 00:04:47.390
Wystarczy, że prześlesz nasz kod, a Lamda zajmie się wszystkim, co jest wymagane do uruchomienia i

00:04:47.390 --> 00:04:49.240
skalowania kodu z wysoką dostępnością.

00:04:49.280 --> 00:04:53.800
Oznacza to, że gdy potrzebujemy tego kodu, nie martw się, że Amazon się tym zajmie.

00:04:53.870 --> 00:05:00.050
Jeśli 1000 osób spróbuje uruchomić kod w tym samym czasie, funkcja w tym samym czasie

00:05:00.140 --> 00:05:05.460
powiedzmy funkcję wstawiania obrazu, a lambda automatycznie będzie skalować i mieć olej.

00:05:05.480 --> 00:05:12.300
Po prostu utworzę wiele instancji tej funkcji, aby obsłużyć tysiąc milionów użytkowników.

00:05:12.470 --> 00:05:16.550
I o tym będziemy mówić później w tym kursie, gdy będziemy budować naszą własną funkcję

00:05:16.550 --> 00:05:19.410
lambda, a będziesz miał lepsze pojęcie o tym, co robi.

00:05:19.430 --> 00:05:21.830
Ma kilka naprawdę interesujących aplikacji.

00:05:22.040 --> 00:05:26.720
Na przykład przy pomocy lambda możesz użyć zdarzeń, aby uzyskać wyzwolenie.

00:05:26.720 --> 00:05:33.940
Może ktoś wspomniał o Tobie w twojej aplikacji, podczas gdy możesz wyzwolić lambdę, aby uruchomić funkcję powiadamiania o

00:05:33.950 --> 00:05:37.280
wiadomości, a my zajmiemy się tym później.

00:05:37.280 --> 00:05:38.120
Więc trzymaj się mocno.

00:05:38.120 --> 00:05:39.560
To bardzo ekscytujące.

00:05:40.290 --> 00:05:41.740
Porozmawiajmy o następnym.

00:05:41.850 --> 00:05:49.730
Chmura frontowa Amazon Cloud front to serwer WWW, który przyspiesza dystrybucję naszych plików statycznych

00:05:49.730 --> 00:05:58.300
i możesz myśleć o tym jak o CDN są shemale Pliki CSS javascript mogą być teraz umieszczane

00:05:58.940 --> 00:06:07.840
w chmurze, a Amazon dostarcza te treści przez światową sieć centrów danych dokładnie tak, jak robi to CDN.

00:06:07.840 --> 00:06:13.150
Więc mówiliśmy o CloudFlare przed i CDN również.

00:06:13.150 --> 00:06:19.450
Znowu coś, co pokrywamy i wydajimy część 3, a to sprawia, że nasze aplikacje są wyjątkowo

00:06:19.450 --> 00:06:26.160
szybkie, gdy prosimy o pliki javascript CSSA poczty HD, ponieważ Amazon ma tak wiele serwerów na całym świecie.

00:06:26.350 --> 00:06:32.890
Jeśli jestem w Indiach, to cokolwiek serwer jest mi najbliższy, będzie obsługiwać ten plik statyczny, a

00:06:32.890 --> 00:06:34.900
także zapewni automatyczne HGT.

00:06:34.920 --> 00:06:35.510
Tak.

00:06:35.530 --> 00:06:38.120
Tak bezpieczne połączenie.

00:06:38.300 --> 00:06:41.700
I wreszcie mamy coś takiego jak Dynamo D-B.

00:06:42.050 --> 00:06:49.100
Znowu Amazon pozwala również na posiadanie baz danych i jest to szybka baza danych bez bazy danych.

00:06:49.100 --> 00:06:56.940
I znowu zarządzają skalowaniem dla ciebie i używają czegoś, co znamy z modelu przechowywania wartości klucza, klucza i

00:06:56.980 --> 00:07:03.980
wartości, i możesz uzyskać dostęp do dowolnej wartości w bazie danych za pośrednictwem tego klucza.

00:07:04.460 --> 00:07:11.870
Jest znany ze swojej niezawodności w działaniu i wiele osób korzysta z niej i gier mobilnych

00:07:12.110 --> 00:07:14.940
Hayati i wielu innych rzeczy.

00:07:16.820 --> 00:07:20.610
To było dużo i jest mnóstwo innych usług.

00:07:20.670 --> 00:07:23.330
Mam jednak nadzieję, że daje to wyobrażenie o tym, co nam dostarczają.

00:07:23.430 --> 00:07:28.570
Więc nie musimy wychodzić na własną rękę i zacząć budować rzeczy od zera.

00:07:28.710 --> 00:07:38.450
Teraz jest coś, co nazywa się schematami blokowymi lub schematami blokowymi Amazona i pokazuje, czego ludzie używają do tworzenia architektury

00:07:38.450 --> 00:07:42.970
lub jak ich logika przepływa przez ich aplikację.

00:07:43.010 --> 00:07:48.740
Istnieje wiele sposobów, dzięki którym możesz dołączać kawałki jak klocki Lego i próbować różnych rzeczy.

00:07:48.800 --> 00:07:49.880
Oto przykład.

00:07:51.060 --> 00:07:58.500
Dzięki naszej aplikacji, nasz inteligentny mózg może na przykład mieć fanów w chmurze na całym

00:07:58.500 --> 00:08:05.010
świecie, więc gdy użytkownik wejdzie online z dowolnego miejsca na świecie, otrzyma serwery

00:08:05.280 --> 00:08:12.680
CSSA i javascript z dowolnej usługi najbliższej, a następnie CDN chce, aby użytkownik miał pliki.

00:08:12.870 --> 00:08:21.390
Jeśli złożą wniosek do naszego API Back and Rest, który możemy umieścić na naszej instancji C-2, to teraz nasz

00:08:21.450 --> 00:08:23.800
rest API, nasz serwer Xpress.

00:08:24.030 --> 00:08:33.320
A tutaj, być może, możemy przechowywać informacje o naszych użytkownikach w Dynamo DB, nasze profile użytkowników być może zostawimy je

00:08:33.320 --> 00:08:40.280
tutaj, a potem, być może, po przesłaniu obrazu zamiast jego pracy tutaj, ponieważ ten komputer

00:08:40.490 --> 00:08:46.310
jest już zajęty słuchaniem połączeń, może po prostu wywołaj funkcję lambda

00:08:46.310 --> 00:08:52.330
i ta funkcja lambda mówi, że po prostu przesyłasz mi URI obrazu.

00:08:52.520 --> 00:09:00.620
Zamierzam wysłać ten obraz, aby wyjaśnić, uzyskać odpowiedź i być może przechowywać ten obiekt odpowiedzi w naszym pojemniku Esrey,

00:09:00.650 --> 00:09:03.340
abyśmy mogli go później przeanalizować.

00:09:03.560 --> 00:09:07.030
A wiadro Esrey'a zwróci nam cokolwiek.

00:09:07.040 --> 00:09:09.500
Clarify przysłał nam.

00:09:09.870 --> 00:09:12.920
I jest tak wiele sposobów na zbudowanie tego.

00:09:13.070 --> 00:09:14.380
I to jest jej piękno.

00:09:14.390 --> 00:09:20.980
Jest jak małe dziecko, które buduje różne rzeczy w oparciu o twoje potrzeby.

00:09:21.260 --> 00:09:27.410
I w tym momencie ważne jest, aby być starszym programistą i zrozumieć, jak rzeczy się

00:09:27.470 --> 00:09:34.320
ze sobą łączą, ponieważ możesz spojrzeć na te diagramy i potrzeby aplikacji, aby zdecydować, jaki jest najlepszy możliwy

00:09:34.320 --> 00:09:34.990
przepływ.

00:09:36.100 --> 00:09:38.700
Przyjrzyjmy się niektórym zdjęciom, które wymyślili ludzie.

00:09:39.670 --> 00:09:43.620
Jeśli po prostu napiszę tutaj powiedzmy przepływ AWOS i

00:09:46.460 --> 00:09:47.860
zróbmy zdjęcia.

00:09:47.890 --> 00:09:48.940
Mam dzienniki

00:09:51.910 --> 00:09:57.270
przepływu, które widzisz tutaj, że otrzymujemy mnóstwo różnych rzeczy, które możemy zrobić.

00:09:57.430 --> 00:09:59.470
A czasami boli cię głowa.

00:09:59.590 --> 00:10:02.470
Możemy otworzyć ten, ale możemy go zobaczyć.

00:10:02.590 --> 00:10:05.070
Twoja głowa rani wszystko, co możesz zrobić.

00:10:06.140 --> 00:10:12.500
Teraz najlepszą rzeczą, jaką możesz zrobić, to dowiedzieć się, co każdy z nich robi, a kiedy pojawia się

00:10:12.500 --> 00:10:18.740
problem, gdy mówisz, że mój serwer zaczyna zwalniać z powodu wszystkich tych użytkowników, co możemy zrobić, aby skalować

00:10:18.740 --> 00:10:20.540
go, aby nim zarządzać.

00:10:20.540 --> 00:10:26.750
Możesz powiedzieć Pozwól mi sprawdzić Amazon i zobaczyć, jakiego rodzaju usługi mogą nam

00:10:26.750 --> 00:10:27.310
pomóc.

00:10:27.650 --> 00:10:33.410
I jak już mówiłem, zaczyna się temat, który nazwaliśmy opami, a niektórzy twórcy stron internetowych mogą

00:10:33.440 --> 00:10:35.000
nawet tego nie dotknąć.

00:10:35.070 --> 00:10:41.330
Tak, ale jako starszy programista, ważne jest, aby rozumieć infrastrukturę i sposób łączenia rzeczy

00:10:41.540 --> 00:10:43.430
oraz ich rozwój.

00:10:43.880 --> 00:10:50.470
Ponieważ budując aplikacje z myślą o tym pomyśle, kiedy zaczynamy bardzo bardzo.

00:10:50.630 --> 00:10:57.560
Dopóki mamy takie rzeczy na głowie, piszemy kod, który będzie działał dobrze z niektórymi elementami

00:10:58.040 --> 00:10:59.440
tej infrastruktury.

00:10:59.510 --> 00:11:06.380
Na przykład, jeśli mamy małe, małe funkcje, możemy teraz powoli dodawać niektóre z

00:11:07.330 --> 00:11:10.640
tych funkcji do lambosa AWOS.

00:11:10.650 --> 00:11:11.300
W porządku.

00:11:11.400 --> 00:11:15.750
Mam więc nadzieję, że zaczynasz być nieco podekscytowany, ponieważ wkrótce będziemy

00:11:15.750 --> 00:11:18.800
wdrażać naszą własną funkcję lambda z AWOS.

00:11:18.810 --> 00:11:21.690
Na razie jednak zobaczę w następnym wideo.