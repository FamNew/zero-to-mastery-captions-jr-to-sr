WEBVTT

00:00:01.170 --> 00:00:08.130
Selamat datang kembali, inilah saatnya bagi kita untuk benar-benar memulai sesi implementasi karena kita sekarang memiliki profil

00:00:08.160 --> 00:00:14.300
untuk dikerjakan dan ingat tujuan kita di sini adalah untuk mencoba dan melakukan ini.

00:00:14.360 --> 00:00:17.310
Kami akan masuk ke aplikasi kami.

00:00:17.540 --> 00:00:20.920
Pengguna akan mengirim nama pengguna dan kata sandi.

00:00:21.110 --> 00:00:32.830
Server kemudian akan menghasilkan token JWT dan kami akan mengirimkannya kepada pengguna sehingga lain kali mereka mengakses rute

00:00:32.830 --> 00:00:40.960
mereka yang dilindungi atau memerlukan otentikasi seperti profil 23 mereka harus mengirim

00:00:40.960 --> 00:00:51.070
token JWT ini dengan mereka sehingga ketika pengguna mendapatkan profil atau memperbarui profil dengan melakukan permintaan

00:00:51.070 --> 00:00:52.270
POST.

00:00:52.390 --> 00:00:57.160
Ya mereka harus mengirim token JWT ke server.

00:00:57.460 --> 00:01:05.290
Server kemudian dapat memverifikasi token menggunakan metode verifikasi DOD atau dalam kasus kami itu sebenarnya dapat

00:01:05.290 --> 00:01:11.960
menyimpan token dalam pengecekan basis data kami untuk memastikan bahwa itu token.

00:01:12.190 --> 00:01:18.580
Dan kemudian jika semuanya sudah beres, Anda dapat memiliki profil Anda atau Anda dapat memperbarui profil Anda.

00:01:18.670 --> 00:01:20.910
Dan dalam video ini kita akan mengerjakan bagian ini.

00:01:20.950 --> 00:01:27.150
Kita akan membuat token JWT setelah tanda pengguna dan mari kita mulai.

00:01:28.840 --> 00:01:36.250
Sekarang jika kita kembali ke server kita Ya kita memiliki docker kami menulis berjalan di latar belakang di sini

00:01:36.250 --> 00:01:41.970
semuanya memeriksa titik akhir yang ingin kita kerjakan adalah tanda masuk titik akhir.

00:01:42.010 --> 00:01:48.070
Jadi ketika kita masuk kita memanggil fungsi ini menangani Seinen dan Anda lihat di sini bahwa itu sedikit

00:01:48.370 --> 00:01:50.040
berbeda dari yang lain.

00:01:50.110 --> 00:01:57.660
Anda melihat bahwa semua titik akhir lainnya menerima respons permintaan dan kemudian mereka memiliki fungsi yang

00:01:57.660 --> 00:01:59.770
menerima respons permintaan sisanya.

00:01:59.770 --> 00:02:05.300
Dan kami juga memasukkan database dan skrip yang merupakan hashing library.

00:02:05.320 --> 00:02:09.390
Sekarang ini sedikit berbeda karena saya ingin menunjukkan cara yang berbeda dalam melakukannya.

00:02:09.550 --> 00:02:16.000
Dalam hal ini setiap kali penandatanganan disebut dengan baik tanda pegangan akan dipanggil dengan database

00:02:16.000 --> 00:02:18.480
dan dicengkeram menggunakan injeksi ketergantungan.

00:02:18.520 --> 00:02:24.830
Yaitu kita memberikan ketergantungan pada basis data dan menjadi korup untuk menangani seinen sehingga ketika menangani penandatanganan

00:02:24.850 --> 00:02:26.720
dipanggil di sini dan masuk.

00:02:26.840 --> 00:02:30.330
Ya itu disebut dengan skrip DB.

00:02:30.640 --> 00:02:36.060
Dan setiap kali ada permintaan pos fungsi akan dijalankan kembali.

00:02:36.070 --> 00:02:38.330
Jadi sekali lagi ini adalah fungsi tingkat tinggi.

00:02:38.440 --> 00:02:43.150
Fungsi yang mengembalikan fungsi dan menerima respons permintaan.

00:02:44.790 --> 00:02:47.120
Dan itu bekerja dua arah.

00:02:47.130 --> 00:02:54.810
Anda dapat melakukannya dengan cara ini atau kami dapat melakukannya dengan cara ini dan ini lebih

00:02:55.080 --> 00:03:04.650
bersih karena ketika kami menjalankan fungsi ini dan kemudian setiap kali posting terkena setiap kali pengguna bersinar, kami akan menambahkan respons

00:03:05.040 --> 00:03:08.230
permintaan secara otomatis ke penangan ini.

00:03:08.230 --> 00:03:10.720
Nah, inilah masalahnya sekarang.

00:03:10.720 --> 00:03:11.520
Tangani masuk.

00:03:11.530 --> 00:03:13.900
Kami ingin membuatnya lebih baik.

00:03:14.110 --> 00:03:19.620
Kami tidak ingin hanya mengatakan menggunakan tanda dan metode yang kami miliki sebelum kita perlu sekarang menghasilkan token.

00:03:19.630 --> 00:03:22.250
Jadi mari kita ubah ini menjadi sesuatu yang lain.

00:03:22.390 --> 00:03:29.680
Mari kita ubah menjadi katakanlah masuk autentikasi.

00:03:29.840 --> 00:03:31.380
Kedengarannya sedikit lebih resmi.

00:03:32.520 --> 00:03:32.990
BAIK.

00:03:33.120 --> 00:03:34.560
Dan ada otentikasi masuk.

00:03:34.570 --> 00:03:36.910
Kita harus membuat.

00:03:36.930 --> 00:03:43.350
Jadi mari kita pergi ke Seinen dodgy Ya dan dan masuk.

00:03:43.410 --> 00:03:51.730
Ya mari kita ubah sekarang atau mari kita tambahkan autentikasi masuk konked dan sign in

00:03:54.240 --> 00:03:59.320
autentikasi ini akan melakukan apa yang biasa dilakukan seinen.

00:03:59.430 --> 00:04:05.370
Ini akan menerima database dan skrip bata B melalui injeksi ketergantungan.

00:04:05.370 --> 00:04:08.610
Ini akan kemudian menerima respons permintaan dan kemudian

00:04:12.000 --> 00:04:14.640
akan melakukan sedikit hal di sini.

00:04:15.820 --> 00:04:22.870
Untuk saat ini, mari kita pastikan bahwa kita mengekspor fungsi baru ini alih-alih gagang masuk.

00:04:23.030 --> 00:04:31.170
Dan mari kita bicara tentang apa yang akan kita lakukan di dalam diri kita jika kita ingat diagram kita. Yah kita

00:04:31.680 --> 00:04:37.940
ingin jelas memeriksa kata sandi dan semuanya memeriksa database melakukan apa yang menangani seinen lakukan.

00:04:38.010 --> 00:04:46.340
Tetapi kami juga ingin membuat token JWT jika semuanya memeriksa dan cara saya suka menulis sesuatu adalah dengan

00:04:46.340 --> 00:04:49.220
memikirkan apa yang dilakukan fungsi.

00:04:49.370 --> 00:04:52.090
Tulis hal-hal dengan fungsi yang belum ada.

00:04:52.130 --> 00:04:54.750
Jadi kita bisa pelan-pelan membangun itu.

00:04:55.900 --> 00:04:57.290
Mari kita coba di sini.

00:04:57.340 --> 00:05:03.100
Yang ingin kami periksa pertama kali dalam hal ini adalah kami ingin memastikan bahwa pertama-tama

00:05:03.100 --> 00:05:06.950
kami akan menerima respons permintaan dari permintaan dari klien.

00:05:06.970 --> 00:05:19.280
Jadi mari kita periksa apakah pächter otorisasi diatur oleh klien karena ingat mereka dapat mengirim token JWT

00:05:19.280 --> 00:05:21.970
di header otorisasi.

00:05:22.190 --> 00:05:24.690
Dan jangan khawatir kita akan melihat bagaimana hal itu dilakukan di sisi klien.

00:05:24.800 --> 00:05:31.400
Tetapi kami ingin memeriksa karena jika mereka sudah memiliki token otorisasi ini, mereka seharusnya tidak dapat

00:05:31.400 --> 00:05:37.570
masuk lagi, mereka bisa melanjutkan dan masuk ke situs web dan ambil profil mereka.

00:05:37.640 --> 00:05:42.350
Maksud saya itu salah satu alasan utama kami melakukan ini adalah kami tidak ingin pengguna

00:05:42.350 --> 00:05:43.330
harus terus-menerus menandatanganinya.

00:05:43.850 --> 00:05:50.610
Dan di sini mari kita kembali ke pemikiran atau memiliki dua pilihan.

00:05:50.620 --> 00:05:57.060
Salah satunya adalah apakah kita memiliki otorisasi di header dan penandatanganan.

00:05:57.510 --> 00:06:04.400
Jika itu masalahnya, maka kita bisa mengatakan sesuatu seperti ambil profil pengguna untuk sekarang mari kita beri nama saja.

00:06:04.410 --> 00:06:12.790
Keluar dari token ID dan ini adalah fungsi yang tidak ada.

00:06:13.060 --> 00:06:22.920
Jadi saya hanya akan membiarkannya seperti itu dan muncul hanya memanggil konser turun ID token

00:06:22.920 --> 00:06:32.870
dan fungsi ini akan menjadi fungsi konyol yang sama sekali tidak lain dari konsol log off.

00:06:32.910 --> 00:06:39.170
OK katakan saja.

00:06:39.260 --> 00:06:46.320
Sekarang kami katakan di sini kami memiliki opsi kedua, opsi kedua adalah jika mereka tidak memiliki otorisasi.

00:06:46.520 --> 00:06:49.300
Yah kami ingin menangani penandatanganan.

00:06:49.640 --> 00:06:57.250
Jadi sekali lagi kita akan mengatakan handle seinen dan ingat bahwa handle seinen membutuhkan database

00:06:57.250 --> 00:07:00.680
sebagai objek crypt request dan response.

00:07:01.190 --> 00:07:11.180
Jadi saya akan memberikan permintaan itu atau mari kita mulai dengan permintaan skrip BB dan objek tanggapan.

00:07:11.360 --> 00:07:16.610
Dan karena ini bukan lagi fungsi urutan yang lebih tinggi, kami hanya memanggilnya sekali.

00:07:16.820 --> 00:07:24.620
Mari kita ubah ini dari fungsi yang mengembalikan fungsi menjadi hanya fungsi biasa yang bagus

00:07:25.310 --> 00:07:26.090
saja.

00:07:28.430 --> 00:07:30.850
Mari kita tambahkan ini pada baris Anda sebenarnya supaya kita bisa melihat yang

00:07:34.100 --> 00:07:35.050
lebih baik itu lebih baik.

00:07:35.050 --> 00:07:41.660
Jadi kita harus memiliki otorisasi dalam hal ini ambil ID kaleng otomatis dan mudah-mudahan ambil profil pengguna.

00:07:41.860 --> 00:07:46.950
Kalau tidak, kita ingin menangani seinen yang sudah kita miliki secara default.

00:07:47.260 --> 00:07:55.360
Sekarang di sini dengan handle seinen saya ingin membahas konsep penting dan itu adalah

00:07:55.720 --> 00:08:06.040
kita baru saja mengubah handle seinen dari menjadi handler default dari endpoint ini menjadi sekarang memiliki tanda dan otentikasi.

00:08:06.040 --> 00:08:12.630
Dan ketika kita melakukan itu secara mental hanya untuk menyederhanakan banyak hal dan untuk menghindari kesalahan di masa depan saya ingin mengatakan itu.

00:08:12.640 --> 00:08:13.160
BAIK.

00:08:13.210 --> 00:08:15.950
Karena ini adalah pawang dari titik akhir.

00:08:16.000 --> 00:08:22.400
Ini harus menjadi hal yang mengembalikan respons status 200 tanggapan Jaison.

00:08:22.660 --> 00:08:30.910
Kami tidak ingin ujung tanda pegangan mengembalikan respons dot Jaison atau status respons kesalahan 400 karena nah

00:08:31.120 --> 00:08:37.720
ini hanya fungsi pembantu sekarang yang kami gunakan di dalam handler utama.

00:08:37.720 --> 00:08:43.030
Jika karena alasan tertentu pengembang baru datang dan melihat ini dan berkata oh saya hanya akan mengembalikan respons

00:08:43.030 --> 00:08:43.870
di sini.

00:08:43.910 --> 00:08:48.960
Yah itu akan salah karena kami dapat mengirim beberapa respons.

00:08:49.010 --> 00:08:55.310
Jadi saya suka menjaga semuanya tetap bersih dan apa pun yang menangani titik akhir yang sebenarnya

00:08:55.310 --> 00:08:56.970
haruslah yang mengembalikan respons.

00:08:57.940 --> 00:09:01.530
Sekarang ada cara yang bagus untuk membersihkannya.

00:09:01.540 --> 00:09:08.350
Mari kita kembali ke tanda pegangan dan fungsinya di sini dan ubah semua tanggapan kita untuk

00:09:08.740 --> 00:09:14.240
hanya mengembalikan janji karena pada akhirnya penandatanganan pegangan adalah semacam menangani janji.

00:09:14.260 --> 00:09:20.890
Melakukan database pilih memeriksa database yang mengembalikan janji dan setiap kali kami memiliki fungsi kami

00:09:20.890 --> 00:09:26.620
ingin memastikan bahwa kami tetap konsisten bahwa fungsi harus selalu mengembalikan output yang

00:09:26.980 --> 00:09:27.910
diharapkan.

00:09:28.180 --> 00:09:33.070
Dan itu adalah sesuatu yang telah kita pelajari sebelumnya dalam kursus ini yaitu kita tidak ingin mengirim

00:09:33.190 --> 00:09:34.190
janji atau aliran.

00:09:34.450 --> 00:09:40.090
Kami ingin tetap berpegang pada sesuatu yang dapat diprediksi sehingga jika fungsi lain seperti tanda dan

00:09:40.090 --> 00:09:46.930
otentikasi menggunakannya dengan baik, kami memastikan bahwa masuk otentikasi siapa pun yang menulis ini tidak perlu khawatir tentang tanda

00:09:46.930 --> 00:09:52.540
pegangan dan fungsi kami dapat percaya bahwa itu berfungsi dan itu hanya mengembalikan janji.

00:09:52.540 --> 00:09:59.260
Baiklah mari kita ubah ini sehingga sekarang kita memiliki respons yang berasal dari otentikasi seinen dan mengubah

00:09:59.260 --> 00:10:04.750
handle seinen untuk memastikan tidak melakukan respons apa pun dan hanya mengembalikan janji.

00:10:04.760 --> 00:10:12.230
Sekarang hal pertama yang akan saya lakukan adalah menangani seinen kita perlu mengembalikan sesuatu ke klien ke ujung

00:10:12.250 --> 00:10:13.030
depan.

00:10:13.180 --> 00:10:16.260
Begitu banyak semacam respons yang kami kirim kembali.

00:10:16.720 --> 00:10:24.490
Jadi katakanlah di sini saya akan menambahkan satu titik kemudian untuk menangani seinen dan mungkin saya akan menyimpan ini pada satu baris

00:10:24.490 --> 00:10:26.080
sehingga lebih mudah dilihat.

00:10:26.500 --> 00:10:33.310
Jadi tanda pegangan itu akan memiliki titik maka akan menerima pengguna seperti yang Anda lihat di sini.

00:10:33.310 --> 00:10:40.760
Kami akan mengembalikan pengguna dari sini dan pengguna ini atau biarkan saja data untuk saat ini.

00:10:42.120 --> 00:10:52.140
Data ini akan miliki untuk saat ini, mari kita lakukan respons Daut Jaison dan baru saja mengembalikan data.

00:10:52.490 --> 00:11:01.350
Itu adalah pengguna yang kami tertarik dan untuk beberapa alasan jika itu tidak bekerja dengan baik maka

00:11:01.350 --> 00:11:09.830
kita bisa melakukan tangkapan bodoh dan uang tunai saham mereka akan menerima status respons udara.

00:11:11.070 --> 00:11:18.120
400 dan untuk sekarang kita bisa mengembalikan udara yang sebenarnya.

00:11:18.120 --> 00:11:19.400
Baiklah.

00:11:19.570 --> 00:11:26.070
Sekarang jika saya kembali ke sini sekarang kita perlu memastikan bahwa tanda masuk sebagai imbalan adalah

00:11:26.220 --> 00:11:32.160
janji karena sementara kita melakukan 8. 10 menangkap kembali ke sini kita melihat tanda pegangan dan fungsi.

00:11:32.250 --> 00:11:38.880
Dan hal pertama yang saya perhatikan adalah kenyataan bahwa jika tidak ada email dan kata sandi yang diberikan dengan

00:11:38.880 --> 00:11:43.310
baik, kami akan mengembalikan status untuk Hodgin yang tidak ingin kami lakukan.

00:11:43.320 --> 00:11:50.880
Mungkin sebaliknya yang ingin kita lakukan adalah menolak janji sehingga itu masuk dalam tanda pegangan di sini.

00:11:51.720 --> 00:12:02.490
Jadi saya akan mengubahnya ke alih-alih status respons ke titik tolak janji yang secara otomatis menolak

00:12:02.490 --> 00:12:05.320
dan mengembalikan janji.

00:12:05.340 --> 00:12:06.580
Bagus dan sederhana.

00:12:06.930 --> 00:12:10.090
Jika kita terus turun di sini langkah selanjutnya kita melihatnya.

00:12:10.170 --> 00:12:14.640
Baiklah, kami sedang melakukan pencarian basis data ini tetapi sebenarnya kami tidak mengembalikan apa pun di sini.

00:12:14.640 --> 00:12:16.470
Saya tidak melihat kata kunci kembali.

00:12:16.520 --> 00:12:18.910
Kami kembali di dalamnya tetapi tidak di sini.

00:12:18.990 --> 00:12:21.260
Dan ini adalah kesalahan umum dengan janji-janji.

00:12:21.280 --> 00:12:24.990
Kami selalu ingin memastikan bahwa Anda kembali berjanji.

00:12:24.990 --> 00:12:29.390
Jadi dalam kasus kami, mari kita tambahkan kata kunci kembali di sini.

00:12:29.400 --> 00:12:31.250
Sekarang kami mengembalikan janji ini.

00:12:31.440 --> 00:12:34.220
Dan ketika kita masuk ke dalamnya kita melihat itu.

00:12:34.230 --> 00:12:34.480
BAIK.

00:12:34.500 --> 00:12:37.050
Kami tidak ingin mendapat jawaban.

00:12:37.050 --> 00:12:41.790
Kami hanya ingin mengembalikan pengguna dan mungkin kami bahkan ingin mengubah nama

00:12:41.790 --> 00:12:47.970
untuk menangani tanda dan mungkin memeriksa kata sandi nama pengguna atau sesuatu di sepanjang baris tersebut.

00:12:47.970 --> 00:12:56.760
Untuk saat ini, mari kita ubah ini menjadi liner kecil yang bagus atau mari kita ambil seperti ini dan kembalikan

00:12:57.750 --> 00:12:58.370
pengguna.

00:12:58.420 --> 00:13:05.070
Sekarang ingat mengembalikan array pengguna dalam kasus kami satu pengguna yang kembali dari memeriksa kata sandi dan

00:13:05.250 --> 00:13:07.760
email yang terlihat sedikit lebih bersih.

00:13:08.030 --> 00:13:15.400
Dan kemudian untuk tangkapan DOT di sini kami ingin memastikan bahwa alih-alih status

00:13:15.400 --> 00:13:18.920
lagi kita bisa mengatakan janji.

00:13:19.000 --> 00:13:21.220
Menolak.

00:13:21.430 --> 00:13:27.160
Dan sekali lagi di sini untuk setiap kesalahan, kami hanya akan berjanji tidak menolak.

00:13:27.490 --> 00:13:28.030
Baiklah.

00:13:28.030 --> 00:13:34.450
Jadi tidak masalah apa fungsi ini harus mengembalikan janji sekarang sehingga dengan tanda pegangan dan kita

00:13:34.450 --> 00:13:39.280
bisa menanganinya seperti ini kemudian mengirimkan data kepada kami yang merupakan pengguna.

00:13:39.310 --> 00:13:42.550
Kalau tidak, kami akan menangkap kesalahan yang kami terima.

00:13:42.610 --> 00:13:48.580
Dalam kasus kami bisa mendapatkan kredensial pengguna Ron dan baru saja mengembalikan respons Jaison.

00:13:48.880 --> 00:13:51.860
Sekarang mari kita aman di sini dan menguji kode kita.

00:13:51.860 --> 00:13:54.830
Kami telah menulis sedikit kode tanpa benar-benar mengujinya.

00:13:54.950 --> 00:14:02.830
Jadi mari kita kembali ke sini dan keluar dan uji dengan teman lama kita yang baik. com atau delapan jam sehari dan buka konsol

00:14:03.570 --> 00:14:06.820
pastikan tidak ada kesalahan di sini.

00:14:07.090 --> 00:14:09.040
Saat saya mengklik masuk.

00:14:09.070 --> 00:14:10.950
Baiklah, lihat tempat itu.

00:14:10.960 --> 00:14:12.960
Dan kami masih dapat masuk.

00:14:13.030 --> 00:14:18.620
Kami sama sekali tidak mencapai apa pun dalam hal fungsionalitas di ujung depan.

00:14:18.760 --> 00:14:21.820
Tetapi kami sekarang memiliki lebih banyak fleksibilitas.

00:14:21.850 --> 00:14:29.280
Kami masih mengembalikan pengguna saat mereka masuk pengguna dari database.

00:14:29.560 --> 00:14:36.490
Tetapi kami juga telah memperpanjang. Jadi sekarang kami memeriksa header otorisasi dan jika ada, kami

00:14:36.580 --> 00:14:39.600
hanya dapat mengambil token autentikasi Heidi.

00:14:39.820 --> 00:14:47.190
Sekarang kita sudah mengaturnya di video berikutnya, saya ingin benar-benar menghasilkan token JWT untuk pengguna ini.

00:14:47.290 --> 00:14:51.640
Jika ini adalah pertama kalinya mereka loggy lagi, mereka tidak memiliki token otorisasi.

00:14:51.640 --> 00:15:00.970
Yah saya ingin menangani seinen dengan meraih pengguna tetapi juga ketika saya mengembalikan data pengguna saya juga ingin mengembalikan token

00:15:00.970 --> 00:15:06.570
JWT sehingga dalam kunjungan mendatang mereka tidak harus melalui langkah ini lagi.

00:15:07.530 --> 00:15:08.160
Saya akan lihat yang itu.