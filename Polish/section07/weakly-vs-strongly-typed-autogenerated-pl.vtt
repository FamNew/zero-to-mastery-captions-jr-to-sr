WEBVTT

00:00:02.600 --> 00:00:10.300
Porozmawiajmy o silnym i słabym pisaniu, a wiele osób używa tych terminów zamiennie.

00:00:10.530 --> 00:00:17.250
Oznacza to, że mają tendencję do mówienia, że języki dynamiczne są słabo napisane, a języki statyczne są silnie wpisane,

00:00:17.550 --> 00:00:21.930
co po prostu nie jest tak, jak widać tutaj na wykresie.

00:00:21.960 --> 00:00:29.340
Możesz mieć język grecki, który jest statycznie napisany i silny język, który jest dynamicznie wpisany.

00:00:29.380 --> 00:00:31.090
Więc wyjaśnijmy to.

00:00:31.420 --> 00:00:37.850
JavaScript jest językiem dynamicznym lub dynamicznie pisanym językiem, który jest słabo wpisany.

00:00:37.870 --> 00:00:38.950
Co to znaczy.

00:00:39.400 --> 00:00:43.550
W javascript mogę to zrobić w javascript.

00:00:43.550 --> 00:00:54.880
Mogę powiedzieć, że zmienna A równa się Booya, a następnie mogę dodać 17

00:00:57.730 --> 00:01:01.340
Bruja z 17.

00:01:01.500 --> 00:01:06.810
Tak właśnie działa cotygodniowy język.

00:01:07.170 --> 00:01:10.700
JavaScript mówi, że jesteś szalona.

00:01:10.710 --> 00:01:15.460
Próbujesz dodać ciąg do 17.

00:01:15.540 --> 00:01:17.150
Chyba wiem, co próbujesz zrobić.

00:01:17.160 --> 00:01:20.590
Myślę, że próbujesz dodać 17 do Bruja.

00:01:20.610 --> 00:01:29.130
Zamierzam zmienić ten numer 17 w ciąg znaków i zrobić to, a to jest często nazywane typem coarsen

00:01:29.420 --> 00:01:34.200
i Javascript i może to prowadzić do niezamierzonych konsekwencji.

00:01:34.200 --> 00:01:37.410
I wiele osób denerwuje się javascript dla tej funkcji.

00:01:38.760 --> 00:01:47.430
Ponieważ w mocno napisanym języku możesz to zrobić na przykład w Pythonie.

00:01:47.490 --> 00:01:51.320
Widać, że jest dynamiczny, ale mocno wpisany.

00:01:51.480 --> 00:01:56.030
Jeśli napiszemy jakiś kod w Pythonie, powiedzmy, że wszystko robimy.

00:01:56.310 --> 00:01:58.440
I zamierzam użyć tutaj Pythona.

00:01:58.470 --> 00:01:59.760
Zignoruj składnię.

00:01:59.940 --> 00:02:05.270
Powiedzmy, że zmienna równa się bruja.

00:02:05.270 --> 00:02:16.010
Znowu, a następnie zrobię a lub zmienną plus 17 tutaj.

00:02:17.490 --> 00:02:23.660
Cóż, to faktycznie spowoduje błąd w Pythonie, ponieważ będzie to oznaczać, kto jest tym, kim jest

00:02:24.360 --> 00:02:25.680
ten zwariowany facet.

00:02:25.830 --> 00:02:28.190
Próbujesz dodać ciąg i liczby.

00:02:28.230 --> 00:02:29.640
To nie działa.

00:02:29.700 --> 00:02:34.920
I to jest rodzaj rzucania błędu, ponieważ mocno wpisany.

00:02:35.000 --> 00:02:38.350
Dobra, mam nadzieję, że dobrze to ilustruje.

00:02:38.400 --> 00:02:44.460
Teraz są jeszcze plusy i minusy, ale jest to poza zakresem tego kursu.

00:02:44.480 --> 00:02:49.850
Jeśli naprawdę chcesz się w to wmieszać i zaufaj mi, jest tam mnóstwo informacji,

00:02:49.850 --> 00:02:53.690
ponieważ ludzie są tak mocno opowiadani o tych tematach.

00:02:53.810 --> 00:02:55.300
Polecam ich sprawdzenie.

00:02:55.340 --> 00:03:02.920
Przechodzenie do Google i pisanie na silnym lub słabo wpisanym tekście. Wróćmy do głównego tematu,

00:03:03.130 --> 00:03:04.880
jakim jest maszynopis.

00:03:05.080 --> 00:03:11.210
Jak dodać maszynę do maszyn typu javascript?

00:03:11.330 --> 00:03:14.210
Dobra, zostawię cię w niepewności.

00:03:14.970 --> 00:03:16.860
Do zobaczenia w następnym wideo.

00:03:16.880 --> 00:03:17.190
Babai.