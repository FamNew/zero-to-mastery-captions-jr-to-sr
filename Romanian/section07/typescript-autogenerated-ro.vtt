WEBVTT

00:00:02.400 --> 00:00:08.550
În momentul în care avem instalat compilatorul nostru Să vedem cum putem începe să îl folosim.

00:00:08.580 --> 00:00:14.760
Am de gând să clar acest lucru și să facă acest lucru un pic mai mare, astfel încât să puteți

00:00:14.790 --> 00:00:23.280
vedea tot ce trebuie să faceți pentru a crea un fișier tipar este de a avea un punct ts la sfârșitul fișierului la fel ca am dodgiest pentru javascript.

00:00:23.310 --> 00:00:28.440
Tot ce avem nevoie este un fișier TS și acesta este un fișier script de tip.

00:00:28.620 --> 00:00:32.730
Asa ca sa facem asta, sa facem mai intai un director.

00:00:32.800 --> 00:00:35.540
Vom numi acel tip.

00:00:35.650 --> 00:00:35.990
In regula.

00:00:35.990 --> 00:00:40.010
Eu deja am făcut-o pe CD-ul în dosarul acela.

00:00:41.310 --> 00:00:50.450
Deci, pentru a nu face teritoriu, vrem un CD și să tastăm și aici putem face touch tip TS script pentru

00:00:50.450 --> 00:00:51.810
un fișier tipcript.

00:00:52.400 --> 00:00:53.720
Să o

00:00:57.160 --> 00:01:07.590
deschidem în subliniere și să avem fișierul nostru de tipărire și din nou am o mufă mică și îmi dă o pictogramă tip

00:01:07.590 --> 00:01:11.820
sau tip de script aici și o detectează deja.

00:01:11.920 --> 00:01:18.850
Acum, pentru a-ți seta editorul pentru a înțelege tipografia, ar fi posibil să te afli în Google și să spui cum putem

00:01:18.850 --> 00:01:23.980
adăuga un tip la editorul tău și am să-ți las resursele pentru a face asta.

00:01:24.190 --> 00:01:28.010
Pentru textul Sublim Tot ce trebuie să faceți este să schimbați comanda.

00:01:28.150 --> 00:01:32.020
Pe un Mac este posibil să fie nevoie să faceți o schimbare de control P pe Windows.

00:01:32.020 --> 00:01:39.590
Tu instalezi pachetele și apoi în pachetele de instalare doar pur și simplu face tip.

00:01:40.190 --> 00:01:43.150
Și am instalat deja pachetul.

00:01:43.150 --> 00:01:47.950
Deci, vedeți că nu apare aici, dar ar trebui să fie doar acest pachet simplu de tipărire.

00:01:47.950 --> 00:01:53.840
Există și alte câteva pe care le puteți descărca, dar tipul simplu ar trebui să facă foarte bine.

00:01:54.780 --> 00:02:02.340
Odată ce faceți acest lucru, dacă mergeți la partea de jos, veți vedea că editorul meu recunoaște fișierul

00:02:02.400 --> 00:02:09.580
TS ca tipograf și astfel puteți verifica dacă editorul dvs. are acea sintaxă evidențiind pentru ea.

00:02:09.700 --> 00:02:12.740
Din nou, puteți vedea că scriptul de tip

00:02:15.980 --> 00:02:19.870
Dumnezeu, toate înființat, să scriem aici o linie simplă de tipărire.

00:02:19.880 --> 00:02:29.520
Ne vom întoarce la exemplul nostru simplu al funcției pe care o ia în a și b

00:02:29.520 --> 00:02:31.960
și se va întoarce.

00:02:32.170 --> 00:02:33.670
Să spunem

00:02:36.820 --> 00:02:38.540
un plus b.

00:02:38.770 --> 00:02:41.740
O funcție foarte simplă.

00:02:41.740 --> 00:02:47.000
O să salvez asta și să o conducem prin compilator.

00:02:47.230 --> 00:02:49.230
Să aducem terminalul.

00:02:49.370 --> 00:02:58.670
Am de gând să pun doar acest lucru pe un fișier doar așa că ar părea frumos și aici putem rula TS C

00:02:58.760 --> 00:03:01.520
pentru compilator de tipar și fișierul.

00:03:01.520 --> 00:03:03.420
Vrem să rulam compilatorul.

00:03:03.500 --> 00:03:07.690
În cazul nostru, dotarea cu tipărire TS Deci,

00:03:10.940 --> 00:03:18.900
tip TS, să spunem că introduceți setul în timp ce codificam o mulțime pe care ați observat-o.

00:03:19.140 --> 00:03:26.220
De ce nu scrieți doar o funcție de eroare și din nou tastați scrip detectează aceste erori ori de câte

00:03:26.250 --> 00:03:27.870
ori introduceți javascript nevalid.

00:03:28.050 --> 00:03:34.580
Va fi on-line când faci ceva amuzant dacă încerci să o faci din nou.

00:03:34.610 --> 00:03:41.930
Să scriem javascript corect, astfel că acesta este doar o declarație a funcției, așa că să salvăm și să o executăm din

00:03:41.930 --> 00:03:42.530
nou.

00:03:45.190 --> 00:03:47.950
Bine, asta a fost.

00:03:48.030 --> 00:03:57.090
Nu există erori, dar vedeți aici că fișierul dotcript js js a fost creat și dacă mă duc la tipcript

00:03:58.260 --> 00:04:01.510
Da, bine, am exact aceeași ieșire.

00:04:01.680 --> 00:04:02.680
Această funcție.

00:04:02.820 --> 00:04:08.900
Această funcție a trecut prin compilator și a fost compilată în javascript.

00:04:08.940 --> 00:04:15.510
Ei bine, nimic nu este cu adevărat diferit, pentru că nu am făcut nimic diferit aici.

00:04:15.510 --> 00:04:18.840
Bine, să transformăm acest lucru într-o funcție Erol.

00:04:18.900 --> 00:04:22.390
Să spunem doar consomme este egal cu funcția ei

00:04:27.490 --> 00:04:36.190
și a alerga la compilator din nou și se pare că nu există nici o eroare, așa că să ne întoarcem la

00:04:36.190 --> 00:04:38.390
fișierul nostru de jazz și.

00:04:38.490 --> 00:04:39.040
Uau.

00:04:39.150 --> 00:04:39.820
Uită-te la asta.

00:04:40.700 --> 00:04:49.760
S-a schimbat javascriptul sau tiparul nostru într-un fișier javascript, dar se folosește sintaxa Yes 5, deci nu există nici o

00:04:49.760 --> 00:04:51.950
funcție de eroare aici.

00:04:52.170 --> 00:04:57.630
Și s-ar putea să te întrebi că nu face ce face Babel.

00:04:58.080 --> 00:05:02.540
Să mergem la Babbel.

00:05:02.690 --> 00:05:08.770
Deschideți browser-ul și spuneți Babel și mergeți la compilatorul Bibliei.

00:05:10.150 --> 00:05:14.740
Și au un instrument minunat, care spune că încercați.

00:05:16.420 --> 00:05:24.870
Și chiar de aici putem rula doar ceea ce am făcut aici, așa că să ne copiem și să ne lipim funcția și să vedem

00:05:28.300 --> 00:05:29.220
ce obținem.

00:05:34.920 --> 00:05:41.350
Dacă facem clic pe și presetăm, vedem că obținem același lucru.

00:05:41.610 --> 00:05:46.260
Ne compilam și noul nostru cod ESX.

00:05:46.430 --> 00:05:48.810
Da, cinci.

00:05:48.860 --> 00:05:53.510
Deci da, face exact acelasi lucru ca si bâzâitul.

00:05:54.010 --> 00:06:01.640
Și acesta este un alt mod de a încerca noi caracteristici ale javascript-ului și încă ao compila până la ceva

00:06:01.640 --> 00:06:03.620
ce înțelege un browser.

00:06:03.620 --> 00:06:10.970
Și acum s-ar putea să înțeleagă de ce tipografia este o superset de javascript tipcript ne permite să folosim noi caracteristici

00:06:10.970 --> 00:06:16.030
pe care javascript altfel nu le-ar fi avut și vom ajunge să-l compilam.

00:06:16.960 --> 00:06:23.500
Tipescript încearcă, de asemenea, să rămână în conformitate cu caracteristicile moderne ale javascript, astfel încât acestea să fie de fapt

00:06:23.500 --> 00:06:27.820
implementate, astfel încât compilatorul să înțeleagă modul în care funcționează și funcțiile noastre.

00:06:27.860 --> 00:06:28.910
Foarte tare.

00:06:28.970 --> 00:06:31.400
Acum să scriem primul nostru tip.

00:06:31.750 --> 00:06:33.710
Sintaxa pentru tipar din nou.

00:06:33.770 --> 00:06:40.100
Ei au o documentație foarte bună despre asta și vom merge pas cu pas este de a

00:06:40.100 --> 00:06:48.380
face ceva de genul unui coaching sau în cazul nostru este un număr și B ar trebui să fie, de asemenea, un număr.

00:06:48.510 --> 00:06:53.670
Atunci când două puncte se bazează aici doar pentru a face mai curat.

00:06:53.820 --> 00:07:03.160
Dacă salvez asta acum și mă uit la asta, după cum am văzut, văd cum editorul meu îmi dă un mic indiciu.

00:07:03.180 --> 00:07:04.770
Acesta este un alt avantaj al tiparului.

00:07:04.770 --> 00:07:09.350
Mă va ajuta cu niște pantaloni când lucrez la codul meu.

00:07:11.260 --> 00:07:14.120
Dar, pentru moment, să vedem la ce se compilează.

00:07:14.360 --> 00:07:22.910
Vreau să o rulez din nou și să mă duc la fișierul meu de javascript și nu avem nici o chestie cu numărul

00:07:23.010 --> 00:07:23.500
ăsta.

00:07:23.600 --> 00:07:29.060
Compilatorul o scoate din cauză că acesta este codul care intră în producție și nu vrem

00:07:29.090 --> 00:07:34.950
ca acești X de octeți siguri în codul nostru să facă codul nostru mai greu să trimită clientului.

00:07:35.670 --> 00:07:38.850
Deci compilatorul face acest lucru automat pentru noi.

00:07:38.850 --> 00:07:40.140
Foarte tare.

00:07:40.140 --> 00:07:41.510
Dar verificați asta.

00:07:41.730 --> 00:07:50.970
Dacă fac câte 4 plus cinci, ce am făcut.

00:07:52.280 --> 00:07:53.390
Editorul meu.

00:07:53.450 --> 00:07:58.020
În mod automat nu am făcut altceva decât să fiu tipografia mea înființată cu editorul meu.

00:07:58.130 --> 00:08:03.260
Mă aștept la argumente, dar am una pentru că fac patru plus cinci.

00:08:03.300 --> 00:08:08.330
Din nou, dacă facem patru, veniți cinci, totul ar trebui să funcționeze.

00:08:08.670 --> 00:08:10.170
Și nu primesc nici o eroare.

00:08:10.200 --> 00:08:17.340
Dacă salvez și rulez TMC, totul funcționează.

00:08:17.440 --> 00:08:19.120
Codul nostru funcționează încă.

00:08:19.120 --> 00:08:29.090
Dacă consolez dialogul și să-i dau un răspuns constant.

00:08:30.040 --> 00:08:31.250
Și ce este acest jurnal de console?

00:08:31.250 --> 00:08:36.980
Răspunsul.

00:08:37.060 --> 00:08:38.930
Și să o facem din nou.

00:08:40.600 --> 00:08:40.940
In regula.

00:08:40.950 --> 00:08:51.720
Totul functioneaza, dar daca stiu ce tip de skip dodgy am primit raspunsul din 9.

00:08:51.800 --> 00:08:52.640
Foarte tare.

00:08:53.570 --> 00:09:04.140
Ce se întâmplă dacă fac o șir de scrisori salut văd că editorul meu are o subliniată de roșu.

00:09:04.140 --> 00:09:11.810
Acum, dacă aș trece peste acest subliniat ca un verificator de ortografie pe cuvântul dvs. sau pe un

00:09:12.230 --> 00:09:20.930
document text, argumentul de tipo nu este atribuit unui parametru al numărului de tip deoarece am spus că a are un

00:09:20.990 --> 00:09:22.630
tip de număr.

00:09:22.750 --> 00:09:31.010
Chiar dacă am încercat să conduc TSC acum oh nu l-am salvat salvați asta chiar dacă am fugit TSC acum.

00:09:33.530 --> 00:09:39.440
De fapt, va arunca o eroare spunând exact ceea ce a spus în editorul meu.

00:09:39.440 --> 00:09:43.550
Acest tip de șir nu va funcționa cu tipul de număr.

00:09:43.550 --> 00:09:45.070
Cat de tare e asta.

00:09:45.080 --> 00:09:52.820
Aceasta este ceea ce înțelegem atunci când spunem că captează erori la momentul compilării, deoarece acest cod nu va ajunge

00:09:52.820 --> 00:09:59.090
niciodată la producție, pentru că pentru a trimite codul la producție, trebuie mai întâi să îl

00:09:59.090 --> 00:10:00.410
convertim în Javascript.

00:10:00.650 --> 00:10:08.240
Și când convertim în javascript, prindem aceste erori în compilatorul nostru și dacă aruncă orice eroare știm că trebuie

00:10:08.270 --> 00:10:15.410
să le reparăm versus Javascript așa cum funcționează este că acest javascript este trimis la browser și

00:10:15.410 --> 00:10:21.920
browserul face ceea ce se numește drept în timp compilarea și compilarea codului la fața

00:10:21.920 --> 00:10:22.520
locului.

00:10:22.670 --> 00:10:28.280
Pentru fiecare dintre utilizatorii lor și acest lucru va arunca probabil o eroare și utilizatorul ar putea vedea un ecran

00:10:28.280 --> 00:10:31.410
gol sau o pâine și nu ar ști ce să facem.

00:10:31.880 --> 00:10:34.520
Deci, e drăguț.

00:10:35.000 --> 00:10:42.640
Și de modul în care ați observat că încă mai compilează javascript-ul nostru la parametrul hello string.

00:10:42.710 --> 00:10:44.090
Asta e doar ceva ce face.

00:10:44.090 --> 00:10:49.360
Dar puteți vedea aici că erorile nu apar, astfel încât să nu trimiteți acest lucru

00:10:49.370 --> 00:10:54.180
producției, veți vedea că există erori și că trebuie să reparați unele lucruri.

00:10:54.200 --> 00:10:55.100
In regula.

00:10:55.400 --> 00:10:58.250
Acest lucru arată destul de interesant și promițător.

00:10:58.340 --> 00:11:06.500
Tocmai am adăugat această funcție grozavă pentru a vă asigura că codul nostru este mai puțin predispus la erori.

00:11:06.500 --> 00:11:07.730
Du-te să-l încercați singur.

00:11:07.730 --> 00:11:14.890
Asigurați-vă că editorul dvs. de text are toate aceste configurare și rețineți.

00:11:15.190 --> 00:11:18.310
Dacă aveți probleme cu editorul dvs., Google este prietenul dvs. aici.

00:11:18.400 --> 00:11:24.160
Există o mulțime de resurse online, indiferent de editorul pe care trebuie să-l setați, dar nu ar trebui să

00:11:24.160 --> 00:11:26.580
vă ducă mai mult de câteva minute.

00:11:26.620 --> 00:11:29.380
Poate Max o oră.

00:11:29.550 --> 00:11:31.490
Bine, te voi vedea în următorul videoclip.

00:11:31.730 --> 00:11:32.010
Pa! Pa.