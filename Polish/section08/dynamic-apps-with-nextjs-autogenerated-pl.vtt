WEBVTT

00:00:00.710 --> 00:00:06.290
Witamy ponownie, stworzyliśmy bardzo prostą stronę internetową.

00:00:06.650 --> 00:00:15.470
A do tej pory, jeśli spojrzymy na kod, możemy zbudować naszą własną platformę blogową, na której mamy tylko strony na

00:00:15.680 --> 00:00:23.030
nasze posty na blogu lub informacje o naszej firmie, a my naprawdę szybko zaczęliśmy działać.

00:00:23.850 --> 00:00:29.370
Ale jak wiemy, większość aplikacji jest o wiele bardziej złożona.

00:00:29.370 --> 00:00:30.590
Są dynamiczne.

00:00:30.690 --> 00:00:37.590
Mają wywołania API, które muszą wykonać i uzyskać dane oraz zmienić części witryny sieci Web na podstawie tych

00:00:37.590 --> 00:00:38.150
danych.

00:00:38.280 --> 00:00:40.530
Tak jak zrobiliśmy z aplikacją robo friends.

00:00:40.890 --> 00:00:49.840
Musimy pobrać roboty z naszego komponentu, a następnie renderować je na naszej stronie.

00:00:49.860 --> 00:00:59.460
W tym filmie zobaczmy, jak możemy to zrobić, w jaki sposób można mieć aplikacje dynamiczne z następnymi, a następnie

00:00:59.460 --> 00:01:09.130
pozwala nam to zrobić za pomocą API o nazwie Get initial props i dzięki temu możemy pobrać dane dla danej

00:01:09.370 --> 00:01:17.320
strony, powiedzmy nową stronę lub mamy zamiar zbudować i przekaże go do komponentu jako rekwizyt.

00:01:17.330 --> 00:01:19.730
Znowu po prostu zareaguj.

00:01:19.790 --> 00:01:27.320
Najfajniejsze w tym, że zobaczymy, że możemy zdecydować się na wywołanie API na serwerze, zanim zostanie

00:01:27.320 --> 00:01:30.190
ono wyrenderowane i wysłane do klienta.

00:01:30.350 --> 00:01:38.210
Lub możemy wykonać to wywołanie API na interfejsie użytkownika, gdy tylko damy mu stronę, którą

00:01:38.200 --> 00:01:39.560
załaduje osobno.

00:01:40.290 --> 00:01:41.980
Więc zacznijmy.

00:01:42.150 --> 00:01:48.120
Pierwszą rzeczą, którą musimy zrobić, jest umożliwienie nam wykonania połączenia pobierania, ponieważ jest ono

00:01:48.120 --> 00:01:53.160
dostępne tylko w przeglądarce, a my nie używamy tego w przeglądarce.

00:01:53.160 --> 00:01:55.970
To będzie po stronie serwera.

00:01:56.070 --> 00:02:00.930
Musimy mieć dostęp do pobierania i możemy po prostu zainstalować pakiet, który jest zalecany.

00:02:00.930 --> 00:02:10.120
Jeśli pracujesz z następną i po stronie serwera nazywa się to dobrze, uruchommy NPM, a nie

00:02:10.120 --> 00:02:19.500
instalujemy NPM na poziomie kapitału i nazywa się to wysoko, tak morficznie przy pobieraniu. Mamy imię, które znam.

00:02:19.520 --> 00:02:24.790
W porządku, więc teraz, kiedy możemy użyć pobierania po stronie klienta, stwórzmy tutaj nową stronę.

00:02:24.860 --> 00:02:29.710
Powiem, że nowy plik będzie nazywany

00:02:32.400 --> 00:02:38.180
robotami, tak, że Jezus będzie miał kilka rzeczy.

00:02:38.180 --> 00:02:50.720
Najpierw użyjesz linku z następnego linku do komponentu linku, a także zaimportuje Thacha, który właśnie pobraliśmy z

00:02:51.200 --> 00:02:59.740
pakietu izomorficznego na pakiecie pobierania, i jesteśmy już dobrze obeznani ze składnią,

00:03:03.240 --> 00:03:09.160
teraz mogę po prostu zrobić roboty koncertowe.

00:03:09.200 --> 00:03:14.650
Wezwania nie będą pytać w ten sposób.

00:03:14.650 --> 00:03:15.270
Proszę bardzo.

00:03:15.430 --> 00:03:26.250
I tutaj powrócimy do komponentu i powiedzmy, że ten komponent będzie divem, który

00:03:26.250 --> 00:03:40.360
ma znacznik H1, który mówi roboty i inny element div, który w jego wnętrzu będzie miał jakieś dane robota.

00:03:40.360 --> 00:03:42.400
Na razie go po prostu wpiszemy.

00:03:42.420 --> 00:03:45.960
Mam jednak nadzieję, że możemy pobrać i wyrenderować tu niektóre dane.

00:03:47.830 --> 00:03:58.540
Możemy to zamknąć w ten sposób i być może u dołu lub u góry możemy dodać link, który odwołuje się do strony głównej, abyśmy

00:03:58.540 --> 00:04:02.010
mogli wrócić do strony głównej, gdybyśmy chcieli.

00:04:04.400 --> 00:04:11.560
A to będzie po prostu przycisk, który mówi do domu.

00:04:11.680 --> 00:04:24.620
I wreszcie zamknij nasz link, a następnie nie zapomnij wyeksportować domyślnych robotów.

00:04:24.780 --> 00:04:29.580
Zachowajmy to, a także wróćmy do naszej głównej

00:04:32.330 --> 00:04:40.320
strony i na stronie głównej dopilnujmy, abyśmy dodali do strony robota tag link linkowy.

00:04:41.470 --> 00:04:46.730
I to będzie odwoływać się do robotów.

00:04:46.890 --> 00:04:52.650
A właściwie cztery strony, które są domyślne lub standard, aby

00:04:52.650 --> 00:04:59.590
zachować małe litery, zmienią dwa małe roboty tylko po to, aby utrzymać standardy.

00:05:01.580 --> 00:05:02.030
W porządku.

00:05:02.090 --> 00:05:07.120
Zmieńmy link tutaj na naszej stronie robotów.

00:05:07.260 --> 00:05:10.220
Ponownie, dlatego mamy małą literę.

00:05:10.560 --> 00:05:17.250
Wygląda więc na to, że Gneisenau chce oszczędzać i upewnić się, że strona robota ma również

00:05:17.250 --> 00:05:17.910
link.

00:05:18.120 --> 00:05:24.140
Uruchommy PM start, który uruchamia następny i zobacz, co się tutaj dzieje.

00:05:28.570 --> 00:05:28.850
W porządku.

00:05:28.870 --> 00:05:32.260
Mamy teraz dwa zespoły, ale oboje mówią roboty.

00:05:32.260 --> 00:05:34.020
Wróćmy tutaj.

00:05:34.390 --> 00:05:42.240
Jeśli przejdziemy do naszej strony indeksowej, tak, pozwólmy, że zrobimy to w sprawie bootowania.

00:05:42.340 --> 00:05:43.790
W końcu pochodzę z Kanady.

00:05:43.930 --> 00:05:44.470
W porządku.

00:05:46.650 --> 00:05:54.450
Mamy stronę About i stronę robota, a my mamy strzałkę tutaj, tutaj podajemy składnię.

00:05:54.450 --> 00:05:58.470
Naprawdę podoba mi się to, że błędy wyświetlają się tu niespodziewanie.

00:05:58.830 --> 00:06:00.970
Wróćmy więc do naszych robotów.

00:06:04.060 --> 00:06:06.710
I tak, zestaw nawiasów klamrowych.

00:06:06.960 --> 00:06:08.610
W rzeczywistości potrzebujesz tutaj nawiasów.

00:06:10.330 --> 00:06:13.090
Uratujmy.

00:06:13.090 --> 00:06:13.780
Proszę bardzo.

00:06:13.810 --> 00:06:15.240
Nasza solidna strona działa.

00:06:15.250 --> 00:06:21.830
W tej chwili jest to dość brzydkie, ale wszystko działa, przynajmniej jeśli pamiętasz z

00:06:21.830 --> 00:06:31.520
naszą aplikacją dla robotów, że używamy czegoś zwanego symbolem zastępczym Jason, a ten symbol Jaisalmer daje nam punkt końcowy użytkownika,

00:06:31.550 --> 00:06:34.030
którego możemy użyć tutaj.

00:06:34.040 --> 00:06:42.350
On widzi Jasona, którego otrzymujemy, gdy wykonujemy polecenie otrzymania, używając tego r l.

00:06:42.530 --> 00:06:45.110
Załadujmy tutaj trochę danych.

00:06:45.500 --> 00:06:53.480
Sposób, w jaki to robimy, polega na dodawaniu początkowych rekwizytów z robotów, abyśmy mogli przekazać

00:06:53.480 --> 00:06:55.840
te roboty jako rekwizyty.

00:06:55.840 --> 00:06:58.480
Trzymajcie mnie tutaj, a my wyjaśnimy to, kiedy będziemy.

00:06:58.510 --> 00:07:00.590
Zamierzam dodać nową metodę.

00:07:01.440 --> 00:07:07.620
Nazywamy się rekwizytami wstępnymi i tak, właśnie dodajemy metodę do robotów.

00:07:07.620 --> 00:07:12.980
To jest inny sposób robienia tego zamiast być może metody klasowej, którą widziałeś wcześniej.

00:07:13.900 --> 00:07:22.400
I tutaj użyjemy asynchronii. O, czekamy, że możemy składać obietnice, ale użyjmy funkcji asynchronicznej.

00:07:24.560 --> 00:07:32.120
I tutaj zrobimy naszą odpowiedź.

00:07:32.340 --> 00:07:39.650
Odpowiedź Whoopsa mówi, że należy odczekać pobranie, do którego mamy dostęp, i będzie tam, gdzie jesteś.

00:07:39.650 --> 00:07:47.910
Po prostu skopiowaliśmy symbole zastępcze Jason'a i po prostu mamy lepszy widok.

00:07:47.910 --> 00:07:48.850
Zamierzam powiedzieć.

00:07:48.900 --> 00:07:54.050
Wtedy nie potrzebujemy ich, ponieważ mamy teraz czekanie.

00:07:54.310 --> 00:08:01.370
Odtąd powiemy, że dane koncertu będą nazywane "Oczekiwanie na kropkę".

00:08:01.790 --> 00:08:06.160
Jason.

00:08:06.220 --> 00:08:09.130
I wreszcie możemy po

00:08:11.910 --> 00:08:15.830
prostu wrócić, abyśmy mogli zwrócić te dane.

00:08:16.160 --> 00:08:21.760
Załóżmy, że roboty zostaną zwrócone wraz z danymi.

00:08:25.510 --> 00:08:28.300
Jak sama nazwa wskazuje, mamy tu kilka błędów.

00:08:28.310 --> 00:08:30.100
Zobaczmy, co zrobiliśmy.

00:08:30.160 --> 00:08:32.130
Nie potrzebujemy tutaj średnika.

00:08:32.140 --> 00:08:35.440
Wszystko działa tak, jak sugeruje nazwa.

00:08:35.440 --> 00:08:41.760
Mówimy tylko, że zanim załadujemy tę robotyczną robotę, zdobądźmy dla niej rekwizyty.

00:08:41.770 --> 00:08:43.560
Zrobimy wstępne rekwizyty.

00:08:43.690 --> 00:08:47.920
Zrobimy wywołanie API do tego, a punkt zdobędzie wszystkie nasze dane.

00:08:47.920 --> 00:08:56.230
Pamiętaj, że to są dane, które dostajemy, a następnie ładowane jako roboty i co możemy teraz

00:08:56.230 --> 00:08:57.820
zrobić w robotach.

00:08:57.820 --> 00:09:04.780
Mam rekwizyty teraz, ponieważ nazwa sugeruje, aby uzyskać wstępne rekwizyty, a te rekwizyty mają teraz właściwość robotów

00:09:04.900 --> 00:09:05.850
na nich.

00:09:06.680 --> 00:09:13.600
Teraz powiedzmy, że zamiast danych robotów tutaj będziemy używać pętli.

00:09:13.610 --> 00:09:19.270
W rzeczywistości użyjemy lepszej składni.

00:09:19.430 --> 00:09:26.420
I znowu nawiasy klamrowe, więc jest to wyrażenie w javascript, a my powiemy, że to roboty punktu kontrolnego.

00:09:26.420 --> 00:09:34.940
Zamierzamy odwzorować te roboty i jest to bardzo podobne do tego,

00:09:34.940 --> 00:09:50.820
co zrobiliśmy w naszej aplikacji do ponownego rozpoznawania, w której łapiemy roboty i możemy na przykład stworzyć sojusznika, który ma klucz robota.

00:09:50.910 --> 00:09:58.500
ID Jeszcze raz pamiętajmy, że mamy tutaj adres e-mail z nazwą użytkownika, który otrzymujemy.

00:09:58.690 --> 00:10:00.340
I wiesz co.

00:10:00.340 --> 00:10:05.130
Na razie róbmy to i zobaczmy, co się stanie, aby upewnić się, że to działa.

00:10:05.250 --> 00:10:08.180
Zapiszmy, zobaczmy, czy dostaniemy błąd.

00:10:08.380 --> 00:10:19.770
Nie wracajmy do naszej strony i klikajmy na roboty. Po prostu musieliśmy trochę odświeżyć i zobaczyć, co tu mamy.

00:10:19.770 --> 00:10:21.160
Zobaczmy, czy dostaniemy jakieś błędy.

00:10:22.090 --> 00:10:24.020
Fail zbyt niska zasoby reszta.

00:10:24.270 --> 00:10:26.250
Oh ok, to jest Fab. com nas w porządku.

00:10:26.260 --> 00:10:26.500
W porządku.

00:10:26.500 --> 00:10:28.270
Wszystko działa.

00:10:28.330 --> 00:10:34.610
Po prostu nie ładujemy identyfikatorów, jak myślimy, chociaż ładujemy 10 elementów listy.

00:10:34.810 --> 00:10:39.640
A jeśli rzeczywiście wrócimy, to dlatego, że nic nie renderuję, więc powiedzmy to.

00:10:39.670 --> 00:10:47.420
Tutaj załadujemy roboty lub nazwę robota.

00:10:47.520 --> 00:10:52.140
Zapiszmy tutaj i spójrzmy na to.

00:10:52.570 --> 00:10:59.720
Nasze dane są załadowane i widać, że jest to bardzo podobne do tego, co robimy w naszej aplikacji dla robotów.

00:10:59.740 --> 00:11:06.160
Po prostu używamy tego symbolu zastępczego Jaisalmer, aby pobrać nasze roboty, a

00:11:06.160 --> 00:11:15.800
następnie użyć innego interfejsu API do przechwytywania obrazów robota i brakuje mi trochę opieki CSSA, ale pomysł jest taki sam.

00:11:15.930 --> 00:11:18.470
Zróbmy to trochę ładniej.

00:11:18.570 --> 00:11:25.050
Co jeśli chcemy mieć linki do każdego z tych robotów, na przykład profil robotów.

00:11:25.050 --> 00:11:27.490
Możemy ponownie użyć tagu linku.

00:11:28.420 --> 00:11:36.060
Ustawmy tym razem możemy powiedzieć, że link Tref będzie linkował i używam

00:11:38.730 --> 00:11:40.900
tutaj napisów Templi.

00:11:40.910 --> 00:11:48.610
Te cytaty są tuż nad kartą klawiatury, a przy okazji napisy Templi są funkcjami ESX,

00:11:48.610 --> 00:11:51.790
więc mam nadzieję, że je znasz.

00:11:52.270 --> 00:11:53.900
Powiemy robotowi.

00:11:54.460 --> 00:11:56.920
A potem zamierzam dać temu pomysł.

00:11:56.980 --> 00:11:58.000
Powiedzmy,

00:12:00.840 --> 00:12:04.090
że robot ma ID.

00:12:04.260 --> 00:12:15.330
Mówimy więc, aby przejść do linku lub Jarrell, który jest robotem, albo powinniśmy robić roboty tutaj, ponieważ to jest to, co mamy tutaj

00:12:15.330 --> 00:12:17.160
na tej stronie.

00:12:17.550 --> 00:12:26.420
W tym miejscu zostawiamy nazwę robota taką, jaka jest, ale zamykamy tag linku, więc zapisajmy i zobaczmy, co się

00:12:26.430 --> 00:12:27.760
tutaj stanie.

00:12:32.950 --> 00:12:35.930
Dostań się tutaj, ponieważ muszę zamknąć ten

00:12:38.790 --> 00:12:44.670
składnik wesołym idź i pojawia się błąd, mówiąc, że używasz ciągu bezpośrednio w linku.

00:12:44.690 --> 00:12:50.510
To użycie zostało wycofane, ponieważ powinniśmy zawinąć to w jakiś tag.

00:12:50.510 --> 00:12:53.010
Więc na razie powiedzmy ATAC.

00:12:55.910 --> 00:13:00.280
Zapiszmy i wróćmy lub popatrzmy na to.

00:13:00.280 --> 00:13:04.070
Teraz mam te linki, ale sprawdź to Albar, gdy go klikam.

00:13:05.610 --> 00:13:06.010
Spójrz na to.

00:13:06.030 --> 00:13:11.340
Chodzę do roboty jeden, wracam, idę do robotów na stronę.

00:13:11.520 --> 00:13:16.200
I oczywiście nie mamy jeszcze stron, ponieważ nie stworzyliśmy tych plików w folderze stron.

00:13:16.200 --> 00:13:21.510
Ale widzisz, jak łatwo możemy linkować do profili, jeśli chcemy.

00:13:21.510 --> 00:13:22.460
Jakie to jest świetne.

00:13:25.240 --> 00:13:32.160
Znowu wszystko działa bardzo szybko i naprawdę bardzo łatwo w następnym.

00:13:32.170 --> 00:13:33.740
Teraz zróbmy ostatnią rzecz.

00:13:34.120 --> 00:13:39.030
Chcę konsoletę rejestrować dane tutaj.

00:13:39.160 --> 00:13:47.670
Jeśli teraz zapiszę, że mamy dane konsoli lub dziennika, zobaczmy, co dzieje się po stronie przeglądarki.

00:13:47.890 --> 00:13:53.480
Jeśli ponownie otworzę konsolę, zobaczę, że jest Amaar, który oznacza gorący moduł.

00:13:53.500 --> 00:13:58.430
Ponowne ładowanie jest po prostu zawsze obserwować zmiany, więc nie musimy się o to martwić.

00:13:58.510 --> 00:14:08.500
Jeśli klikam na robotach w porządku, otrzymuję dziennik konsoli na przedniej stronie nic na serwerze na żądanie, ale

00:14:08.500 --> 00:14:12.230
jeśli odświeżę to ponownie, zobaczysz, że nic

00:14:15.060 --> 00:14:18.520
się nie stało na konsoli.

00:14:18.520 --> 00:14:29.750
Ale jeśli wrócę, zobaczysz, że na serwerze został zalogowany jako konsul, aby rejestrować dane, co się tutaj właśnie

00:14:29.750 --> 00:14:30.650
wydarzyło.

00:14:30.800 --> 00:14:38.600
Widać to dlatego, że kiedy renderujemy stronę na serwerze, mamy już dane i nie ma powodu, aby

00:14:38.600 --> 00:14:41.510
je ponownie pobierać na kliencie.

00:14:41.510 --> 00:14:48.490
W takim przypadku odświeżenie strony nigdy nie spowoduje pobrania danych na kliencie, co jest bardzo fajne.

00:14:56.300 --> 00:14:57.710
W porządku.

00:14:57.710 --> 00:15:04.570
Myślę, że zaczynasz rozumieć następną odpowiedź "tak" i jak łatwo jest wykonać renderowanie po

00:15:06.120 --> 00:15:14.130
stronie serwera. Teraz możesz prawdopodobnie samemu wyruszyć i odbudować wszystkich nowych przyjaciół Roble'a, używając następnego i

00:15:14.130 --> 00:15:15.320
porównując różnice.

00:15:15.750 --> 00:15:18.230
Gorąco polecam sprawdzenie tej biblioteki.

00:15:18.270 --> 00:15:25.170
Jak zwykle mają świetną dokumentację i mam nadzieję, że odkryjesz, jak tworzyć jeszcze większe

00:15:25.170 --> 00:15:25.890
aplikacje.

00:15:27.120 --> 00:15:28.120
Zobaczę w następnym.

00:15:28.360 --> 00:15:28.640
Lecz przez.