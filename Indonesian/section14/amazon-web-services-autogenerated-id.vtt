WEBVTT

00:00:00.780 --> 00:00:02.190
Selamat datang kembali.

00:00:02.190 --> 00:00:09.480
Saya di situs web platform AWOS di sini dan Anda dapat melihat bahwa mereka memiliki banyak layanan yang dapat

00:00:09.480 --> 00:00:10.290
kita gunakan.

00:00:10.410 --> 00:00:12.960
Semuanya dengan nama yang terdengar cukup menarik.

00:00:12.990 --> 00:00:20.040
Amazon adalah pengenal Rora Amazon di mana kita dapat melakukan pengenalan gambar seperti yang kita miliki dengan API

00:00:20.040 --> 00:00:21.090
klarifikasi kami.

00:00:21.090 --> 00:00:24.180
Mereka memiliki penyimpanan yang mereka hitung.

00:00:24.180 --> 00:00:25.590
Mereka bermigrasi.

00:00:25.590 --> 00:00:27.840
Mereka punya VR kami.

00:00:27.960 --> 00:00:33.420
Jika ada satu hal yang tidak ada kekurangan adalah semua layanan yang membuat kepala Anda sakit dan Anda tidak

00:00:33.420 --> 00:00:37.050
bisa memutuskan apa yang Anda butuhkan dan apa yang ingin Anda lakukan.

00:00:37.320 --> 00:00:39.560
Jadi saya akan membahas beberapa yang mendasar.

00:00:39.600 --> 00:00:44.830
Beberapa yang paling umum dan hal-hal yang kemungkinan besar akan Anda temui

00:00:44.840 --> 00:00:46.510
dalam pekerjaan sehari-hari.

00:00:46.680 --> 00:00:51.660
Tetapi jika Anda mau, Anda bisa menjelajahi berbagai layanan dan melihat apa yang mereka tawarkan.

00:00:51.660 --> 00:00:58.760
Kemungkinannya adalah jika Anda mencoba melakukan sesuatu, Amazon mungkin menawarkan solusi yang mudah untuk itu.

00:00:58.890 --> 00:01:05.010
Sekarang Anda masih harus menulis kode tetapi mereka menangani semua titik sakit yang

00:01:05.010 --> 00:01:10.180
mungkin tidak ingin kita khawatirkan seperti pengaturan konfigurasi di mesin.

00:01:10.210 --> 00:01:12.650
Pokoknya mari kita kembali ke jalur.

00:01:12.760 --> 00:01:19.130
Yang akan saya bicarakan adalah lima ini dan seperti yang saya katakan sebelumnya, ini adalah yang paling umum yang

00:01:19.160 --> 00:01:20.220
akan Anda lihat.

00:01:20.480 --> 00:01:27.680
Dan kami sekarang memasuki bidang yang kami sebut dev ops yang sebagai pengembang web Anda mungkin tidak banyak menyentuh karena

00:01:27.680 --> 00:01:32.720
beberapa perusahaan telah mendedikasikan orang-orang yang bekerja pada hal-hal ini karena ada begitu banyak

00:01:32.780 --> 00:01:34.590
hal yang perlu mereka perhatikan.

00:01:34.820 --> 00:01:40.500
Tetapi sangat penting bagi kita untuk mengetahui bagaimana bagian-bagian ini jatuh ke tumpukan pengembang Web kita.

00:01:42.730 --> 00:01:49.810
Sekarang mari kita mulai dengan yang satu ini di sudut mudah menamai Amazon bukan penamaan terbaik.

00:01:49.800 --> 00:01:53.680
Jadi mereka agak sulit untuk benar-benar membungkus tangan Anda.

00:01:53.710 --> 00:01:56.910
Anda mungkin harus kembali ke video ini tetapi Anda akan mendapatkannya di akhir.

00:01:56.920 --> 00:01:59.130
Jangan khawatir sekarang.

00:01:59.180 --> 00:02:06.000
Easy 2 adalah apa yang kami sebut mesin logam kosong untuk dijalankan dan apa pun komputasi yang Anda inginkan.

00:02:06.070 --> 00:02:11.980
Jadi Anda ingin menganggap mudah sebagai server dasar, Anda dapat menjalankan jenis seperti server Digital Ocean

00:02:11.980 --> 00:02:13.870
Linux yang kami buat.

00:02:13.950 --> 00:02:22.320
Itu yang E. C do adalah Anda dapat menjalankan kembali dan beristirahat API atau server Anda dengan

00:02:22.320 --> 00:02:24.520
mudah daripada katakanlah Digital Ocean atau Laroque.

00:02:24.990 --> 00:02:29.400
Jadi itu cukup bagus dan kami telah menggunakan sesuatu seperti itu sebelumnya sehingga masuk akal.

00:02:29.430 --> 00:02:36.430
Yang perlu kita lakukan adalah mendaftar pada AWOS dan mengatakan saya ingin ini dan mereka akan mengatur semuanya untuk Anda.

00:02:36.450 --> 00:02:42.270
Anda dapat memberi tahu mereka Oh ya saya ingin simpul ini tersedia dan sakit pada mesin Linux.

00:02:42.510 --> 00:02:43.320
Jadi itu bagus.

00:02:43.320 --> 00:02:46.930
Ini adalah server bare metal untuk tujuan umum.

00:02:46.980 --> 00:02:55.270
Lalu ada tiga dan ESRI adalah apa yang kita sebut layanan penyimpanan objek.

00:02:55.340 --> 00:03:04.170
Artinya adalah setiap objek disimpan sebagai file dengan metadata dan ID-nya dan Anda dapat menganggapnya sebagai

00:03:04.170 --> 00:03:06.060
objek yang benar.

00:03:06.090 --> 00:03:10.690
Itulah yang segera setelah penyimpanan objek Anda memiliki kunci atau ID.

00:03:10.920 --> 00:03:17.450
Dan dengan itu aku. D. Anda dapat mengakses objek apa pun yang disimpan Id dan mengapa itu berguna.

00:03:17.550 --> 00:03:26.430
Yah dengan manis itu memungkinkan kita untuk mengunggah dan menyimpan dan juga mengunduh cukup banyak file atau objek yang kita inginkan

00:03:27.030 --> 00:03:34.620
jika kita ingin menyimpan gambar yang dapat kita muat di Esrey jika kita ingin menyimpan mungkin objek besar

00:03:34.620 --> 00:03:37.650
namun kita dapat simpan itu di sini.

00:03:37.860 --> 00:03:45.320
Misalnya dengan aplikasi otak cerdas kami, kami ingin memuat gambar atau menyimpan gambar yang dikirim pengguna untuk

00:03:45.330 --> 00:03:53.970
mengklarifikasi API di sini sehingga di masa depan kami dapat melatih model dengan lebih baik dan S3 memiliki batas ukuran

00:03:54.060 --> 00:03:55.020
lima gigabyte.

00:03:55.020 --> 00:04:00.480
Jadi Anda bisa bayangkan Anda dapat memuat beberapa hal yang cukup besar tetapi bagus untuk penyimpanan.

00:04:00.510 --> 00:04:07.650
Mungkin kita ingin memiliki gambar profil untuk aplikasi otak cerdas kita dan pengguna kita juga mungkin

00:04:07.650 --> 00:04:10.980
ingin memuat gambar profil dan bucket S3.

00:04:10.980 --> 00:04:12.060
Mari kita bicarakan yang berikutnya.

00:04:12.060 --> 00:04:14.900
Dan ini yang benar-benar membuat saya bersemangat.

00:04:14.940 --> 00:04:17.940
Dan kita akan benar-benar bereksperimen dengan ini di bagian ini.

00:04:19.090 --> 00:04:26.440
Ini disebut Lamda dan Lamda dengan Lamda Anda dapat menjalankan kode untuk hampir semua jenis aplikasi atau

00:04:26.440 --> 00:04:27.650
kembali beroperasi.

00:04:27.670 --> 00:04:33.910
Keindahannya adalah Anda hanya menyediakan fungsi lambda hanya mengatakan Hei, beri saya fungsi dan beri tahu saya kapan harus

00:04:33.940 --> 00:04:36.690
menjalankannya dan saya akan menjalankannya untuk Anda.

00:04:36.790 --> 00:04:37.600
Itu dia.

00:04:37.600 --> 00:04:39.710
Tidak ada administrasi yang kami butuhkan.

00:04:39.730 --> 00:04:41.670
Konfigurasi Nol.

00:04:41.750 --> 00:04:47.390
Kami cukup mengunggah kode kami dan Lamda menangani semua yang Anda perlukan untuk menjalankan dan menskalakan

00:04:47.390 --> 00:04:49.240
kode Anda dengan ketersediaan tinggi.

00:04:49.280 --> 00:04:53.800
Itu berarti kapan pun kita membutuhkan kode itu dijalankan, jangan khawatir Amazon akan menanganinya.

00:04:53.870 --> 00:05:00.050
Jika 1000 orang mencoba menjalankan kode pada saat yang sama, fungsi pada waktu yang sama katakanlah

00:05:00.140 --> 00:05:05.460
fungsi penyisipan gambar dengan baik lambda secara otomatis akan menskala dan memiliki minyak.

00:05:05.480 --> 00:05:12.300
Saya hanya akan membuat beberapa contoh fungsi ini sehingga kami dapat menangani seribu juta pengguna.

00:05:12.470 --> 00:05:16.550
Dan ini adalah sesuatu yang akan kita bicarakan nanti dalam kursus ini saat kita membangun fungsi lambda kita

00:05:16.550 --> 00:05:19.410
sendiri dan Anda akan memiliki gagasan yang lebih baik tentang apa fungsinya.

00:05:19.430 --> 00:05:21.830
Ini memiliki beberapa aplikasi yang sangat menarik.

00:05:22.040 --> 00:05:26.720
Misalnya dengan lambda Anda dapat menggunakan acara untuk dipicu.

00:05:26.720 --> 00:05:33.940
Mungkin seseorang menyebut Anda di aplikasi Anda sementara Anda dapat memicu lambda untuk menjalankan fungsi memberitahukan tentang

00:05:33.950 --> 00:05:37.280
pesan lagi kita akan membahas ini nanti.

00:05:37.280 --> 00:05:38.120
Jadi, pegang erat-erat.

00:05:38.120 --> 00:05:39.560
Ini sangat sangat menarik.

00:05:40.290 --> 00:05:41.740
Mari kita bicarakan yang berikutnya.

00:05:41.850 --> 00:05:49.730
Cloud front Amazon Cloud front adalah server web yang mempercepat distribusi file statis kami dan

00:05:49.730 --> 00:05:58.300
Anda mungkin menganggap ini sebagai CDN adalah file gambar javascript CSSA waria sekarang dapat diletakkan di depan

00:05:58.940 --> 00:06:07.840
cloud dan Amazon mengirimkan konten ini melalui jaringan di seluruh dunia pusat data persis seperti yang dilakukan CDN.

00:06:07.840 --> 00:06:13.150
Jadi kita sudah bicara tentang CloudFlare sebelumnya dan CDN juga.

00:06:13.150 --> 00:06:19.450
Sekali lagi sesuatu yang kami bahas dan kinerja bagian 3 dan ini membuat aplikasi kami sangat

00:06:19.450 --> 00:06:26.160
cepat ketika kami meminta file javascript CSSA email HD kami karena Amazon memiliki begitu banyak server di seluruh dunia.

00:06:26.350 --> 00:06:32.890
Jika saya berada di India, server apa pun yang terdekat dengan saya akan melayani file statis itu dan

00:06:32.890 --> 00:06:34.900
mereka juga menyediakan HGT otomatis.

00:06:34.920 --> 00:06:35.510
Iya nih.

00:06:35.530 --> 00:06:38.120
Koneksi begitu aman.

00:06:38.300 --> 00:06:41.700
Dan akhirnya kami memiliki sesuatu seperti Dynamo D-B.

00:06:42.050 --> 00:06:49.100
Lagi-lagi Amazon juga memungkinkan Anda memiliki basis data dan ini adalah database cepat tanpa Eskew.

00:06:49.100 --> 00:06:56.940
Dan lagi-lagi mereka mengelola penskalaan untuk Anda dan menggunakan sesuatu yang kita kenal dengan model penyimpanan nilai kunci kunci dan

00:06:56.980 --> 00:07:03.980
nilai dan Anda dapat mengakses bahwa nilai apa pun yang ada di database melalui kunci itu.

00:07:04.460 --> 00:07:11.870
Dan itu dikenal dengan keandalannya dengan kinerja dan banyak orang yang menggunakannya dan game mobile Hayati

00:07:12.110 --> 00:07:14.940
web dan banyak hal lainnya.

00:07:16.820 --> 00:07:20.610
Itu banyak dan ada banyak layanan lainnya.

00:07:20.670 --> 00:07:23.330
Tapi saya harap ini memberi Anda ide apa yang mereka sediakan untuk kami.

00:07:23.430 --> 00:07:28.570
Jadi kita tidak harus keluar sendiri dan mulai membangun sesuatu dari awal.

00:07:28.710 --> 00:07:38.450
Sekarang ada sesuatu yang disebut diagram alur atau diagram alur Amazon dan ini menunjukkan apa yang digunakan orang untuk membuat arsitektur

00:07:38.450 --> 00:07:42.970
mereka atau bagaimana logika mereka mengalir melalui aplikasi mereka.

00:07:43.010 --> 00:07:48.740
Dan ada banyak banyak cara yang dapat Anda lampirkan potongan seperti blok Lego dan mencoba hal-hal yang berbeda.

00:07:48.800 --> 00:07:49.880
Ini sebuah contoh.

00:07:51.060 --> 00:07:58.500
Dengan aplikasi kami, otak cerdas kami, misalnya, kami dapat memiliki penggemar CD depan cloud di seluruh dunia

00:07:58.500 --> 00:08:05.010
sehingga ketika pengguna daring dari mana saja di dunia mereka dilayani file CSSA waria

00:08:05.280 --> 00:08:12.680
dan javascript kami dari layanan apa pun yang terdekat dan kemudian CDN ingin pengguna memiliki file.

00:08:12.870 --> 00:08:21.390
Jika mereka membuat permintaan ke API back and rest kami yang dapat kami berikan pada instance C-2 kami sekarang adalah API

00:08:21.450 --> 00:08:23.800
sisanya kami server Xpress kami.

00:08:24.030 --> 00:08:33.320
Dan kemudian di sini mungkin kita dapat menyimpan informasi pengguna kita di Dynamo DB profil pengguna kita mungkin kita dapat

00:08:33.320 --> 00:08:40.280
meninggalkannya di sini dan kemudian mungkin ketika mereka mengirim gambar daripada membuatnya bekerja di sini

00:08:40.490 --> 00:08:46.310
karena mesin ini sudah sibuk mendengarkan koneksi mungkin kita hanya memicu fungsi

00:08:46.310 --> 00:08:52.330
lambda dan fungsi lambda ini mengatakan baiklah Anda hanya mengirim saya Ull gambar.

00:08:52.520 --> 00:09:00.620
Saya akan mengirim gambar itu untuk mengklarifikasi mendapatkan respons dan mungkin menyimpan objek respons itu dalam keranjang Esrey kami

00:09:00.650 --> 00:09:03.340
sehingga kami dapat menganalisisnya nanti.

00:09:03.560 --> 00:09:07.030
Dan ember Esrey akan mengembalikan kita apa pun.

00:09:07.040 --> 00:09:09.500
Clarify mengirim kami.

00:09:09.870 --> 00:09:12.920
Dan ada banyak cara yang dapat Anda lakukan untuk membangun ini.

00:09:13.070 --> 00:09:14.380
Dan itulah keindahannya.

00:09:14.390 --> 00:09:20.980
Ini seperti anak kecil pengembang web Anda membangun hal-hal yang berbeda berdasarkan apa kebutuhan Anda.

00:09:21.260 --> 00:09:27.410
Dan ini adalah ketika menjadi pengembang senior dan memahami bagaimana hal-hal terhubung adalah penting

00:09:27.470 --> 00:09:34.320
karena Anda dapat melihat diagram ini dan kebutuhan aplikasi Anda untuk memutuskan apa aliran terbaik yang mereka

00:09:34.320 --> 00:09:34.990
miliki.

00:09:36.100 --> 00:09:38.700
Mari kita lihat beberapa foto yang orang buat.

00:09:39.670 --> 00:09:43.620
Jika saya cukup mengetik di sini, katakanlah AWOS mengalir dan mari

00:09:46.460 --> 00:09:47.860
kita lakukan gambar.

00:09:47.890 --> 00:09:48.940
Saya mendapat log

00:09:51.910 --> 00:09:57.270
aliran yang Anda lihat di sini bahwa kami mendapatkan banyak hal berbeda yang bisa kami lakukan.

00:09:57.430 --> 00:09:59.470
Dan terkadang kepala Anda sakit.

00:09:59.590 --> 00:10:02.470
Kita bisa membuka yang ini tapi kita bisa melihatnya.

00:10:02.590 --> 00:10:05.070
Kepala Anda sakit karena semua hal yang dapat Anda lakukan.

00:10:06.140 --> 00:10:12.500
Sekarang hal terbaik yang dapat Anda lakukan adalah hanya belajar tentang apa yang masing-masing lakukan sehingga ketika masalah muncul

00:10:12.500 --> 00:10:18.740
ketika Anda mengatakan hmm server saya mulai melambat karena semua pengguna ini apa yang dapat kita lakukan untuk

00:10:18.740 --> 00:10:20.540
mengatur skala untuk mengelolanya.

00:10:20.540 --> 00:10:26.750
Anda dapat mengatakan Biarkan saya periksa Amazon dan lihat layanan apa yang mereka sediakan yang mungkin membantu

00:10:26.750 --> 00:10:27.310
kami.

00:10:27.650 --> 00:10:33.410
Dan seperti yang saya katakan ini masuk ke topik yang kami sebut ops dan beberapa pengembang

00:10:33.440 --> 00:10:35.000
web bahkan tidak menyentuhnya.

00:10:35.070 --> 00:10:41.330
Ya tetapi sebagai pengembang senior, penting untuk memahami infrastruktur dan bagaimana segala sesuatu terhubung dan

00:10:41.540 --> 00:10:43.430
bagaimana hal-hal dapat tumbuh.

00:10:43.880 --> 00:10:50.470
Karena dengan membangun aplikasi dengan ide ini dalam pikiran ketika kita mulai sangat kecil.

00:10:50.630 --> 00:10:57.560
Selama kita memiliki hal semacam ini di belakang pikiran kita, kita menulis kode yang akan bekerja dengan baik dengan

00:10:58.040 --> 00:10:59.440
beberapa infrastruktur ini.

00:10:59.510 --> 00:11:06.380
Sebagai contoh jika kita memiliki fungsi kecil yang kecil, kita sekarang dapat secara perlahan memberikan

00:11:07.330 --> 00:11:10.640
beberapa fungsi ini kepada AWOS lambda.

00:11:10.650 --> 00:11:11.300
Baiklah.

00:11:11.400 --> 00:11:15.750
Jadi saya harap Anda mulai sedikit bersemangat karena kita akan segera

00:11:15.750 --> 00:11:18.800
mengimplementasikan fungsi lambda kita sendiri dengan AWOS.

00:11:18.810 --> 00:11:21.690
Untuk sekarang saya akan melihat di video berikutnya oleh