WEBVTT

00:00:01.620 --> 00:00:03.100
Odprowadź ich z powrotem.

00:00:03.100 --> 00:00:09.760
Teraz, o czym będę mówić w tym filmie, musisz mi zaufać, jeśli nie pracowałeś

00:00:09.760 --> 00:00:11.300
w dużych zespołach.

00:00:11.410 --> 00:00:14.280
Trudno wyobrazić sobie te problemy.

00:00:14.350 --> 00:00:20.860
Jednym z głównych powodów, dla których firmy boją się zatrudniać młodszych programistów, jest to, że nie

00:00:20.860 --> 00:00:23.820
mają oni doświadczenia w tym procesie.

00:00:24.720 --> 00:00:29.190
Wiem więc, że nie jest to najlepszy sposób, by powiedzieć, że wierzę w ciebie.

00:00:29.190 --> 00:00:30.550
Po prostu idź dalej.

00:00:30.720 --> 00:00:33.970
Ale dla tego zróbmy to.

00:00:33.980 --> 00:00:36.970
Uwierz mi tylko, że stawiłem czoła tym problemom.

00:00:36.980 --> 00:00:43.880
Pomogłem we wdrożeniu tych wzorów i firm i naprawdę są one naprawdę

00:00:43.880 --> 00:00:47.430
ważne, szczególnie jako starszy programista.

00:00:47.440 --> 00:00:49.730
Teraz wrócimy na właściwe tory.

00:00:49.790 --> 00:00:59.580
Zobaczysz, że każdy projekt zwykle rozpoczyna się od skonfigurowanego projektu, decydujesz o strukturze folderów, które możesz myśleć o krokach kompilacji, takich

00:00:59.580 --> 00:01:06.680
jak konfigurowanie pakietu internetowego lub za pomocą aplikacji do tworzenia nowych wersji, ale wtedy także

00:01:06.680 --> 00:01:10.630
chcesz skonfigurować to, co nazywamy twoją ciągła integracja.

00:01:10.680 --> 00:01:16.890
Im szybciej go ustawisz, tym bardziej standardowa będzie twoja baza kodów i mniej bóle głowy, które będziesz

00:01:16.890 --> 00:01:23.340
mieć później, to ciągła integracja to coś, co dzieje się lub powinno się wydarzyć na samym początku

00:01:23.340 --> 00:01:24.050
projektu.

00:01:25.550 --> 00:01:31.710
A następnie można powoli zacząć rozszerzać się do rzeczy takich jak ciągłe dostawy i ciągłe wdrażanie.

00:01:31.760 --> 00:01:37.690
Od czasu do czasu mówię ci to z doświadczenia, jeśli pracujesz dla startupu i zaczynasz od

00:01:37.690 --> 00:01:43.410
zera, idź do swojego szefa i daj mu znać, dlaczego musisz to zrobić od razu.

00:01:43.450 --> 00:01:48.600
Na dłuższą metę, gdy zespół będzie się rozwijać, będą mieli mniej błędów i łatwiejszy do zarządzania kod.

00:01:48.700 --> 00:01:55.940
Zastanowią się, czy jesteś super gwiazdą, a stare praktyki oprogramowania używają tego, a Stiger wszyscy pracowali

00:01:56.770 --> 00:02:04.190
nad funkcją lub błędem, powiedzmy, że mamy zespół 10 programistów, to wszyscy popchnęli wszystkie swoje zmiany do

00:02:04.700 --> 00:02:11.760
czegoś jak uzyskać pomoc w oddziale, a następnie po prostu siedzieć tam aż do powiedzmy w

00:02:11.760 --> 00:02:16.800
piątek, gdzie będą czekać, a wszystkie z nich się scalą.

00:02:16.820 --> 00:02:24.430
Wszystkie zmiany są wprowadzane jednocześnie do gałęzi głównej, przez co przed weekendem pojawią się konflikty i paniki, a ludzie

00:02:24.850 --> 00:02:29.600
będą musieli naprawić swój kod, ponieważ zepsuł on inne części kodu.

00:02:29.740 --> 00:02:36.160
Teraz ciągła integracja pozwala uniknąć tego poprzez posiadanie przez programistów dziennych żądań odpytywania, aby codziennie

00:02:36.280 --> 00:02:37.330
zdobywać mistrzostwo.

00:02:37.330 --> 00:02:45.300
Ważne jest, aby programiści jak najszybciej zintegrowali swoje zmiany w głównym repozytorium.

00:02:45.380 --> 00:02:52.340
Jeśli kod zostanie zbyt długo pozostawiony na stanowisku lub stacji roboczej programisty, narażasz się na ryzyko

00:02:52.370 --> 00:02:57.670
wystąpienia zbyt wielu konfliktów i wszystkie te funkcje nie działają razem.

00:02:59.610 --> 00:03:07.650
Wcześnie integrując swój kod, zmniejszasz zakres zmian, co ułatwia ludziom zrozumienie konfliktów lub

00:03:07.650 --> 00:03:10.130
kiedy je masz.

00:03:10.380 --> 00:03:14.010
A teraz jest ich znacznie mniej.

00:03:14.240 --> 00:03:22.220
Abyśmy mogli stale wydawać fajne żądania i codzienne przeglądy kodu oraz codzienne łączenie się z mistrzem,

00:03:22.370 --> 00:03:26.640
tak jak chcemy to zrobić, potrzebujemy trochę pomocy.

00:03:27.160 --> 00:03:32.890
Na szczęście dla nas istnieją narzędzia, z których możemy skorzystać, w tym bezpłatne,

00:03:32.890 --> 00:03:41.870
które mogą pomóc w tym procesie i pomóc nam w realizacji ciągłej integracji, abyśmy mogli przejść od tego miejsca do takiego stanu.

00:03:41.880 --> 00:03:46.790
Jedną rzeczą, którą możesz zauważyć, jest to, że dodaliśmy kilka rzeczy.

00:03:46.790 --> 00:03:55.800
Jednym z nich jest to, że mamy teraz testy łączące może maszynopis. Mamy więc statyczne pisanie, aby uniknąć błędów.

00:03:55.880 --> 00:04:01.960
Uruchomimy je na naszym komputerze jako deweloperzy lokalnie, ponieważ pracujemy nad funkcją.

00:04:02.480 --> 00:04:08.660
A potem możemy powiedzieć, że jest to coś w rodzaju czystszego, o czym będziemy rozmawiać, które formatuje

00:04:08.690 --> 00:04:14.660
twój kod w standardowy sposób, więc pomimo posiadania wszystkich tych programistów cały kod będzie wyglądał tak samo

00:04:14.660 --> 00:04:16.010
i będzie ładniejszy.

00:04:16.830 --> 00:04:20.090
I ten kod idzie w górę, aby uzyskać pomoc.

00:04:20.460 --> 00:04:28.890
A tutaj, zanim zdobędziesz jakąś recenzję kodu lub zanim dokonamy scaleń, przekazujemy żądanie ściągnięcia

00:04:28.890 --> 00:04:35.210
do jednego z tych narzędzi, które przeprowadzą dla nas testy.

00:04:35.340 --> 00:04:41.010
I tutaj mam okrąg C. JA. narzędzie, z którego będziemy korzystać w następnych kilku

00:04:41.010 --> 00:04:42.710
filmach, i pokażę, jak to działa.

00:04:42.730 --> 00:04:45.050
Istnieje wiele rozwiązań.

00:04:45.210 --> 00:04:47.010
Masz koło, patrz-I.

00:04:47.010 --> 00:04:56.570
Travis widzi - prowadzę Chipa Smitha za miasto drużyny bambusowej CII Jenkina lub wiele innych.

00:04:56.640 --> 00:04:59.400
Znów narzędzia oprogramowania pochodzą z najlepszymi nazwami, nie robią tego.

00:05:00.630 --> 00:05:02.820
W każdym razie działają w prosty sposób.

00:05:02.970 --> 00:05:09.900
Masz serwer, który uruchamia ciągłą integrację lub ciągłe dostarczanie.

00:05:09.900 --> 00:05:10.750
Co to znaczy.

00:05:10.890 --> 00:05:18.690
Cóż, gdy scalisz kiedy już przetestujesz wszystko, gdy zrobisz złą prośbę o pomoc, dostaniesz

00:05:18.720 --> 00:05:27.510
pracę automatycznie pozwalasz kręgu zobaczyć - I serwer wie, hej, po prostu mamy żądanie puli, możesz uruchomić

00:05:27.510 --> 00:05:35.020
wszystkie testy uruchom wszystkie testy, upewnij się, że wszystko mija i buduj projekt.

00:05:35.190 --> 00:05:38.470
Jeśli nic nie zawodzi w tym kroku, wszystko jest dobre.

00:05:38.670 --> 00:05:39.160
W porządku.

00:05:39.180 --> 00:05:40.880
Ten PR jest ważny.

00:05:40.920 --> 00:05:47.010
Możesz teraz dokonać przeglądu kodu i ktoś może dokonać ostatecznego sprawdzenia kodu, a następnie ludzie mogą go

00:05:47.010 --> 00:05:47.400
scalić.

00:05:47.700 --> 00:05:54.450
Dodajemy ten dodatkowy krok tutaj lub dodatkową maszynę, która będzie wykonywała dla nas automatycznie każdą

00:05:54.480 --> 00:06:01.790
czynność za każdym razem, gdy robimy PR i krąg widzimy - ja to oprogramowanie jako rozwiązanie usługowe.

00:06:01.830 --> 00:06:05.380
Obsługuje serwery i nie musisz się o to martwić.

00:06:05.400 --> 00:06:09.570
Będą zarządzać serwerem i przeprowadzą test za Ciebie.

00:06:09.570 --> 00:06:16.810
Wszystko, co musisz zrobić, to po prostu powiedzieć im, czego potrzebują, aby uruchomić jak koło C. JA. lub Travis s. ja.

00:06:17.060 --> 00:06:22.340
Jeśli martwisz się bezpieczeństwem lub chcesz mieć własny serwer i zarządzać swoim własnym

00:06:22.430 --> 00:06:27.100
serwerem, powiedzmy, że Kaikohe Corp. chce zarządzać własnym serwerem w celu ciągłej integracji.

00:06:27.320 --> 00:06:33.510
Cóż, możesz użyć innych narzędzi, takich jak Jenkins, aby zrobić to, co pozwala ci samodzielnie zarządzać serwerem.

00:06:34.510 --> 00:06:37.840
I jest trochę bardziej elastyczny, ale krąg C. JA. jest świetne.

00:06:37.840 --> 00:06:39.460
Pracowałem wcześniej z Sturgell CIO.

00:06:39.460 --> 00:06:43.750
Jest naprawdę przyjemny w użyciu i wszystkie te narzędzia są bardzo podobne.

00:06:43.810 --> 00:06:49.540
Więc użyjemy koła C. JA. Jako przykład, aby w pełni

00:06:50.230 --> 00:06:58.780
zrozumieć, co ciągła integracja robi, w jaki sposób można dodać ten element do naszego przepływu, w tym rok przed Irakiem, w tym zadania, tak aby w przyszłości,

00:06:58.810 --> 00:07:01.760
kiedy zaczął Projekt można wdrożyć to na własną rękę.

00:07:03.060 --> 00:07:07.470
W następnym filmie zaczniemy od naszego potoku CII.

00:07:07.510 --> 00:07:09.240
Zobacz to przez.