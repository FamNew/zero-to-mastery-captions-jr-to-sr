WEBVTT

00:00:01.120 --> 00:00:01.800
Au dreptate.

00:00:01.810 --> 00:00:06.000
Așa că am redox de lucru frumos cu aplicația noastră.

00:00:06.100 --> 00:00:09.160
Tocmai am învățat o minunată bibliotecă.

00:00:09.580 --> 00:00:12.510
Sper că toată lumea se simte bine acum.

00:00:13.030 --> 00:00:15.890
Vreau să adaug câteva lucruri.

00:00:15.940 --> 00:00:23.530
Evident, acesta este un exemplu simplu, dar fundamentele sunt acolo folosind aceste principii pe care le puteți

00:00:23.530 --> 00:00:27.560
merge apoi construi aplicații mai mari și mai mari.

00:00:27.970 --> 00:00:32.090
Dar, după cum am scris acest lucru, ați fi observat câteva lucruri.

00:00:32.230 --> 00:00:32.850
Unu.

00:00:33.100 --> 00:00:42.170
Ei bine, haideți să ne uităm aici la structura de directori pe care ne-o putem imagina, pe măsură ce aplicația noastră crește, care va deveni tot mai mare

00:00:42.410 --> 00:00:44.540
și mai mare și mai mare.

00:00:44.690 --> 00:00:49.460
Iar acest lucru este de fapt ceva ce vreau să vă demonstrez

00:00:49.460 --> 00:00:57.920
mai târziu în cursul când lucrăm la aplicația inteligentă creier unde începem să încărcăm aplicația noastră da cu o mulțime de funcții.

00:00:57.920 --> 00:01:00.100
Și nu folosim redux pentru asta.

00:01:00.200 --> 00:01:06.660
Deci, această scădere devine mai lungă și mai lungă cu noi metode și noi metode și metode noi.

00:01:06.690 --> 00:01:16.350
Acum, având o componentă de container care are o componentă componentă conectată care știe că magazinul redux

00:01:16.410 --> 00:01:22.790
există și ascultă elemente de recuzită și trimite acțiuni din acesta.

00:01:22.830 --> 00:01:26.100
Câștigul câștigat nu este realist.

00:01:26.130 --> 00:01:33.570
Cel mai probabil veți avea mai multe containere, dar din cauza modului în care works redux este destul de ușor

00:01:33.570 --> 00:01:34.570
de făcut.

00:01:34.620 --> 00:01:42.300
Putem folosi doar conecta și alege și alege ce componente vrem să ne conectăm la magazinul redux.

00:01:42.660 --> 00:01:46.960
Și dacă vrem să vorbim unul cu altul cu două containere.

00:01:47.280 --> 00:01:50.670
Ei bine, foarte simplu le-am conectat.

00:01:50.850 --> 00:01:58.030
Și pentru că magazinul este deasupra tuturor celorlalte, suntem în stare să obținem acele informații de stat.

00:01:58.950 --> 00:02:01.420
Astfel, comunicarea este foarte ușoară.

00:02:01.770 --> 00:02:08.790
Deci, evident, dorim să avem containere de acest fel și componente simple de prezentare, care sunt doar

00:02:08.790 --> 00:02:13.940
funcții pure care primesc doar elemente de recuzită și de a face.

00:02:14.050 --> 00:02:20.650
Cu toate acestea, pe măsură ce crestem din ce în ce mai multe componente și din ce în ce mai multe

00:02:20.650 --> 00:02:26.710
containere, începe să aibă sens să nu aibă doar un Constans pentru căderi de acțiuni și reducerea unui reductor.

00:02:27.010 --> 00:02:33.670
Vă puteți imagina că acestea devin mai mari și mai mari și mai mari și veți vedea proiecte care au un

00:02:33.670 --> 00:02:37.470
dosar de acțiuni un dosar Constans și un folder de reduceri.

00:02:37.630 --> 00:02:41.820
Dar eu personal îmi place componentele de a face lucrurile.

00:02:42.160 --> 00:02:46.260
Aceasta este gruparea totul în funcție de componentă.

00:02:46.420 --> 00:02:53.630
De exemplu, creați o nedorită a aplicației sau să presupunem că există o componentă de câmp de căutare inteligentă.

00:02:54.010 --> 00:02:59.920
Vom crea un dosar numit câmp de căutare și că dosarul câmpului de căutare va avea

00:02:59.920 --> 00:03:03.670
toate componentele de prezentare DOM de care are nevoie.

00:03:03.670 --> 00:03:06.730
Va avea toate acțiunile necesare unei acțiuni.

00:03:06.790 --> 00:03:10.060
Da, va avea tot reductorul de care are nevoie.

00:03:10.180 --> 00:03:12.780
Și, de asemenea, va avea tot conținutul.

00:03:13.000 --> 00:03:19.810
Deci, fiecare dosar reprezintă o componentă o bucată din site-ul nostru și este cuplat împreună într-un

00:03:20.080 --> 00:03:21.760
singur dosar mic.

00:03:21.760 --> 00:03:26.400
Deci, dacă vreodată vrem să împărtășim codul, va fi destul de ușor de făcut.

00:03:26.410 --> 00:03:32.850
Este, de asemenea, foarte frumos să te gândești la asta în loc de a avea aceste nume masive de dosare generale.

00:03:33.020 --> 00:03:35.840
Și asta veți vedea cu cele mai multe proiecte mari.

00:03:35.840 --> 00:03:43.190
Această idee a componentelor care au foldere proprii aceste containere care din nou au folderele lor

00:03:43.190 --> 00:03:45.950
proprii, precum și reductoare non-acțiuni.

00:03:46.100 --> 00:03:52.130
În acest fel, puteți citi structura folderului și decideți unde doriți să mergeți pentru a repara un bogat sau pentru

00:03:52.130 --> 00:03:53.670
a crea o nouă caracteristică.

00:03:55.690 --> 00:03:59.010
De asemenea, doriți să evitați repetarea codului la fel de mult.

00:03:59.170 --> 00:04:03.940
De exemplu, în majoritatea aplicațiilor vom avea o mulțime de preluări.

00:04:04.210 --> 00:04:11.800
Deci nu ar fi grozav dacă am avea un dosar API aici care face apelul rapid, poate că îl vom

00:04:11.920 --> 00:04:20.740
numi API primiți API și tot ceea ce trebuie să faceți este să treceți o funcție și această funcție va trece că sunteți

00:04:20.740 --> 00:04:24.130
în funcția FS și va face și asta.

00:04:24.160 --> 00:04:27.120
Jason pentru noi, așa că vom reveni la date.

00:04:27.130 --> 00:04:36.170
Așa că păstrăm în avans, așa că nu mai repetăm ​​tot acest câine rapid, pe care apoi îl poate prinde câinele. Deci, gândindu-se la organizarea dosarelor

00:04:36.230 --> 00:04:40.550
dvs. la ceva care are sens ceva ce poate fi scalabil.

00:04:40.760 --> 00:04:47.270
Și dacă cineva vine la proiect, le ușurează să le urmărească și să citească este o

00:04:47.270 --> 00:04:50.030
modalitate bună de a face lucrurile.

00:04:50.050 --> 00:04:52.390
Bine, asta e destul pentru acum.

00:04:52.390 --> 00:04:53.900
Ne vedem în următorul videoclip.

00:04:53.910 --> 00:04:54.380
Pa! Pa.