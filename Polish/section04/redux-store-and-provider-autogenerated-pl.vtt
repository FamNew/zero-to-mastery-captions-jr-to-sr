WEBVTT

00:00:01.100 --> 00:00:02.210
Witamy spowrotem.

00:00:02.210 --> 00:00:08.780
Teraz, gdy mamy nasze działania Constance i reduktory Zacznijmy podłączanie tej reduxowej części naszej

00:00:09.170 --> 00:00:11.540
aplikacji do naszej aplikacji ponownie.

00:00:13.290 --> 00:00:16.630
Teraz sposób, w jaki możemy to zrobić, jest dość prosty.

00:00:17.520 --> 00:00:25.260
Jeśli pamiętasz, ściągnęliśmy pakiet o nazwie re-act redux, a ten pakiet

00:00:26.910 --> 00:00:32.840
zaimportujemy tutaj z łatwym API dwóch rzeczy.

00:00:32.920 --> 00:00:40.540
Jeden jest dostawcą, a drugi łączy się i używając tych dwóch rzeczy, będziemy w stanie połączyć te

00:00:40.780 --> 00:00:42.900
dwie części ich aplikacji.

00:00:43.570 --> 00:00:52.660
Powiem więc: importuj z ponownego aktu.

00:00:52.870 --> 00:00:58.520
Teraz w tym filmie porozmawiamy o usługodawcy, a podczas następnego wideo o połączeniu.

00:00:58.540 --> 00:01:04.560
Na razie poprośmy dostawcę, żeby to zaimportował.

00:01:04.780 --> 00:01:13.300
W tym miejscu jest kilka rzeczy, które musimy najpierw zrobić, aby stworzyć sklep, jeśli powrócimy

00:01:13.300 --> 00:01:23.510
do naszego schematu, pamiętamy, że jest coś, co nazywa się sklepem i redoksem, który jest źródłem wszelkiej prawdy.

00:01:23.800 --> 00:01:32.530
To jest obiekt obiektu javascript o dużym obiekcie, który opisuje nakładanie się stanu, aby ponowne wprowadzenie mogło spowodować, że

00:01:32.530 --> 00:01:36.010
wprowadzi on zmiany i wyświetli je użytkownikowi.

00:01:36.010 --> 00:01:43.330
Stworzyliśmy więc akcję, którą stworzyliśmy i zredukowaliśmy reduktor, a także potrzebujemy sklepu.

00:01:43.510 --> 00:01:45.900
Zróbmy to najpierw.

00:01:46.020 --> 00:01:53.600
Możemy użyć do tego pakietu redux i powiedzieć import i ma on funkcję o nazwie create store.

00:01:53.670 --> 00:01:54.920
Ładna i łatwa nazwa.

00:01:55.170 --> 00:02:00.620
I zaimportujemy to z pakietu redox.

00:02:00.660 --> 00:02:06.570
Teraz sposób, w jaki tworzymy sklep, jest dość łatwy i

00:02:09.780 --> 00:02:19.940
możemy powiedzieć, że sklep Konst to sklep, a tutaj umieszczamy to, co nazywamy rootem REDUCE-IT, który jest obecnie

00:02:20.570 --> 00:02:22.390
reduktorem naszej aplikacji.

00:02:22.460 --> 00:02:25.420
Mamy wiele wielu reduktorów.

00:02:25.730 --> 00:02:34.230
Jeśli teraz wrócimy do naszego producenta, mamy tylko jeden, który roboty do wyszukiwania redukują.

00:02:34.430 --> 00:02:41.240
Ale, jak powiedziałem, zanim aplikacje staną się coraz bardziej złożone i będziesz miał coraz więcej akcji, które

00:02:41.360 --> 00:02:42.450
trzeba podjąć.

00:02:42.890 --> 00:02:50.420
I możemy nadal wymieniać akcje związane z robotami wyszukiwania, ale później w

00:02:50.420 --> 00:02:54.840
filmie musimy też pobrać roboty z API.

00:02:55.280 --> 00:03:05.870
Jeśli pamiętasz teraz, z tego powodu będziemy mieli wiele bardzo wielu reduktorów, a w sklepie

00:03:05.870 --> 00:03:15.820
chcemy połączyć wszystkie te reduktory, aby stworzyć jeden reduktor korzenia, który zamierzamy zrobić później.

00:03:16.650 --> 00:03:25.080
Ale na razie, ponieważ mamy tylko jednego producenta, wykorzystajmy roboty wyszukiwania,

00:03:25.080 --> 00:03:31.580
aby ją stworzyć, i musimy to zaimportować.

00:03:31.600 --> 00:03:32.880
Więc chodźmy dalej i róbmy to.

00:03:33.680 --> 00:03:34.920
I

00:03:38.010 --> 00:03:44.470
mówię, że roboty do importowania wyszukiwarek od nas redukują Rafała.

00:03:44.480 --> 00:03:44.970
W porządku.

00:03:45.020 --> 00:03:51.930
Mam tu roboty do wyszukiwania, aby stworzyć sklep i to wszystko.

00:03:51.950 --> 00:04:00.560
Mamy sklep Teraz ten sklep jest już dostępny i przekazywany do naszej aplikacji.

00:04:00.650 --> 00:04:08.110
Pamiętaj hipotetycznie z redux, że możemy usunąć cały stan z naszego ponownego działania i przechowywać go

00:04:08.110 --> 00:04:11.850
w sklepie i przekazywać w sklepie jako rekwizyt.

00:04:11.890 --> 00:04:21.590
Zobaczmy więc, co się stanie, jeśli to zrobię, jeśli przejdę do sklepu, który mamy, i zaoszczędzę.

00:04:21.740 --> 00:04:23.670
I otwórzmy także apt.

00:04:23.760 --> 00:04:24.460
Tak.

00:04:25.360 --> 00:04:26.780
I indie.

00:04:26.810 --> 00:04:27.690
Czy zamontować.

00:04:27.890 --> 00:04:29.240
Po

00:04:32.000 --> 00:04:40.060
prostu wyśrubuj log kropkę z kropką.

00:04:40.100 --> 00:04:41.460
W porządku, uruchommy NPM, aby

00:04:48.270 --> 00:04:49.630
otworzyć konsolę i mamy

00:04:52.820 --> 00:04:57.800
tu trochę wąskiego, który jest po prostu błędem składni w naszym przypadku, a następnie instrukcje, więc

00:04:57.800 --> 00:04:58.550
naprawmy to.

00:05:01.540 --> 00:05:03.150
Idź, aby zmniejszyć swoje.

00:05:03.240 --> 00:05:09.420
Nie potrzebujemy tu podwójnych cudzysłowów na średnik, ponieważ mamy go tutaj.

00:05:09.500 --> 00:05:17.770
Zapiszmy to, a otrzymamy komunikat, że pole wyszukiwania nie jest zdefiniowane w naszym pliku reduktorów.

00:05:17.840 --> 00:05:20.720
I znowu mały drobny błąd tutaj.

00:05:20.720 --> 00:05:30.370
Sposób, w jaki chcemy przekazać trzeci parametr do projektu obiektu, jest obiektem, więc chcemy tak

00:05:30.370 --> 00:05:31.020
pojechać.

00:05:32.880 --> 00:05:39.790
I zapomniałem o stałym małym małym błędzie, aby zachować wszystko w porządku.

00:05:39.840 --> 00:05:40.950
Wszystko działa.

00:05:40.950 --> 00:05:46.700
Mamy ostrzeżenie mówiące, że dostawca jest zdefiniowany, ale nigdy nie używany, to w porządku.

00:05:47.570 --> 00:05:49.180
Ponieważ, podczas gdy jeszcze nie używamy.

00:05:49.250 --> 00:05:51.390
Ale chodźmy do logu konsoli i zobaczmy, co się stanie.

00:05:52.750 --> 00:06:01.570
W porządku, widzimy, że nasz sklep tutaj zarejestrował kod i mamy kilka funkcji, z których możemy skorzystać, w tym pobierz

00:06:01.870 --> 00:06:05.860
stan, użyj go i zobacz, co się stanie.

00:06:05.890 --> 00:06:15.750
Znowu przejdę do mojego pliku indeksu, który powiem lub w naszym apt O. JOT. Plik, który zamierzam powiedzieć, dostać

00:06:15.760 --> 00:06:20.490
stan jeden, aby zapisać wrócić i spojrzeć na to.

00:06:20.550 --> 00:06:27.190
Mamy nasze państwo, które właśnie ma teraz pole wyszukiwania.

00:06:27.190 --> 00:06:27.620
W porządku.

00:06:27.760 --> 00:06:36.910
Więc ściskamy nasz sklep jako rekwizyt i możemy użyć stanu "get", usuńmy ten dziennik

00:06:36.910 --> 00:06:37.750
konsoli.

00:06:37.750 --> 00:06:43.120
Ponieważ nie jest nam to potrzebne, rozumiemy, co się teraz dzieje i plik

00:06:43.120 --> 00:06:45.820
indeksu, który musimy przekazać do aplikacji.

00:06:45.920 --> 00:06:52.900
Teraz tak naprawdę nie chcemy przechodzić przez cały proces od komponentu do mniejszych

00:06:53.200 --> 00:07:01.170
komponentów i reagować na redox daje nam miły komponent, który możemy wykorzystać do tego bardzo łatwo.

00:07:01.280 --> 00:07:06.770
Możemy po prostu zawinąć komponent aplikacji w tym komponencie dostawcy.

00:07:06.770 --> 00:07:07.770
Pokażę ci.

00:07:08.300 --> 00:07:24.180
Będziemy mieć komponent dostawcy, a ten komponent aplikacji będzie właśnie w

00:07:24.180 --> 00:07:27.150
nim.

00:07:27.160 --> 00:07:31.540
Teraz format przyjmowania tutaj jest nieznaczny, ale na razie jest w porządku.

00:07:31.540 --> 00:07:39.220
Chcę tylko zobaczyć, że dostawca owija aplikację, a teraz zamiast przekazywać ją do

00:07:39.220 --> 00:07:47.440
aplikacji, możemy po prostu włączyć ją do komponentu dostawcy, a komponent dostawcy zadba o

00:07:47.440 --> 00:07:56.410
to, by przekazać do sklepu wszystkie komponenty w dół. komponent z aplikacji i używamy czegoś

00:07:56.410 --> 00:08:02.730
o nazwie Connect, o którym rozmawialiśmy, aby zakończyć to połączenie.

00:08:02.750 --> 00:08:04.530
Więc masz to.

00:08:04.610 --> 00:08:14.000
Stworzyliśmy komponent dostawcy, który przechodzi przez sklep, a sklep używa reduktora lub jakichkolwiek reduktorów, które mamy do

00:08:14.000 --> 00:08:19.660
stworzenia sklepu i stworzenia tego drzewa obiektów naszego stanu.

00:08:20.820 --> 00:08:28.950
W następnym filmiku pozwólcie, że zachowam to w następnym filmie, w którym zamierzamy użyć drugiej części Riak redux, aby

00:08:29.100 --> 00:08:31.520
w końcu połączyć wszystko razem.

00:08:32.270 --> 00:08:34.070
Zobaczę tego jednego Babai.