WEBVTT

00:01.130 --> 00:02.890
Hey it's Bruno again.

00:03.170 --> 00:05.780
Oh man this is unbelievable.

00:05.930 --> 00:09.950
I love this off capability and everything looks so snappy and fast.

00:09.950 --> 00:14.930
With this new progressive Web app I think people are going to really really like our new robot friends

00:14.930 --> 00:15.710
up.

00:15.770 --> 00:16.540
Thanks a lot.

00:16.550 --> 00:21.010
You've honestly been so good that I look forward to some more projects with you.

00:23.240 --> 00:23.540
All right.

00:23.540 --> 00:25.580
Brunos happy with our work.

00:25.580 --> 00:30.260
Hopefully you had a fun time in this section learning about some of the things that we can do to make

00:30.260 --> 00:32.600
our Web sites web apps faster.

00:33.760 --> 00:40.330
We first talked about code optimizations and the idea of only loading what we actually need for the

00:40.330 --> 00:45.620
user and not having unnecessary javascript delivered sent to the client.

00:46.540 --> 00:52.060
We talked about how we can do that with things like code splitting and using the abilities and went

00:52.060 --> 00:56.670
back to tree shaking and a void on used to code.

00:56.710 --> 01:04.810
We also talked about avoiding to block the main thread whether through animations or long running Javascript

01:05.020 --> 01:11.880
tasks we talked a little bit about memory leaks and making sure that we clean up after ourselves when

01:11.880 --> 01:19.140
we change pages and then we also talked about avoiding multiple rendering using react to be as efficient

01:19.140 --> 01:23.380
as possible in rendering our components.

01:23.390 --> 01:29.240
We then talked about progressive webapps this new idea of making our web apps as close to native apps

01:29.240 --> 01:34.000
as possible so that they work really nicely with mobile devices.

01:34.040 --> 01:41.650
We talked about how we needed HEG B.S. and something called a manifest file to bridge that gap.

01:42.080 --> 01:49.810
And then finally we talked about service worker and how cool it is that we now have a way for us to

01:49.810 --> 01:55.490
deliver Web sites offline through the power of service worker and the cache API.

01:55.990 --> 02:03.770
And now we have completed our front end knowledge of what we can do to improve performance.

02:04.060 --> 02:12.280
And since we've already covered our network optimizations we now have one last part the back end optimization

02:13.620 --> 02:15.840
and one of my favorite topics.

02:15.880 --> 02:19.740
Another great topic that I think you're really going to enjoy.

02:19.770 --> 02:23.390
Don't worry we'll get to it later on in the course.

02:23.580 --> 02:26.460
These are all really fun exciting topics.

02:26.750 --> 02:29.440
But for now we all need a break.

02:29.460 --> 02:31.530
Good job getting this far.

02:31.530 --> 02:32.920
There's a lot more to cover.

02:33.180 --> 02:34.080
I'll see in the next one.
