WEBVTT

00:00:02.000 --> 00:00:03.590
Witamy spowrotem.

00:00:03.590 --> 00:00:11.530
Teraz, aby podsumować, istnieją trzy miejsca, w których musi nastąpić praca przy wyświetlaniu witryn sieci Web.

00:00:11.770 --> 00:00:16.750
Pierwszą studnię oczywiście prosimy o super świeże dotcom.

00:00:16.900 --> 00:00:23.380
Jest więc trochę pracy, która przesyła tę prośbę do serwera lub serwera, a następnie serwer wykonuje

00:00:23.380 --> 00:00:30.490
tam trochę pracy i może zwróci plik z pocztą e-mail znajdujący go i zwraca go lub może musi

00:00:30.490 --> 00:00:34.280
porozmawiać z bazą danych i pobrać niektóre dane tam.

00:00:34.330 --> 00:00:39.120
Następnie musimy ponownie wysłać te informacje przez przewody.

00:00:39.310 --> 00:00:47.050
A potem wreszcie w naszej przeglądarce wykonujemy jakąś pracę, abyśmy mogli wyświetlić stronę użytkownikowi i patrząc

00:00:47.050 --> 00:00:54.440
na nią teraz widzimy, że istnieją trzy niezawodne sposoby na zwiększenie szybkości witryny i aplikacji, a

00:00:55.560 --> 00:00:59.940
tym samym poprawienie utrzymania i konwersji satysfakcji klienta.

00:01:01.180 --> 00:01:05.760
Wiesz rzeczy, które sprawiają, że twoja firma pracodawcy jest naprawdę szczęśliwa.

00:01:05.770 --> 00:01:11.180
Pierwszą rzeczą, którą możesz poprawić, jest to, co dzieje się po stronie klienta.

00:01:12.250 --> 00:01:18.550
Przód, ponieważ urządzenie z przodu potrzebuje czasu, aby wyrenderować stronę na ekranie.

00:01:18.550 --> 00:01:20.100
Druga rzecz, którą możemy poprawić.

00:01:20.290 --> 00:01:28.790
Cóż, możemy poprawić transfer naszych plików przez opóźnienie sieci przewodowej, co oznacza, że każda prośba potrzebuje czasu na

00:01:28.790 --> 00:01:33.650
podróż z klienta do serwera iz powrotem do naszej sieci.

00:01:33.650 --> 00:01:37.310
Opóźnienie to czas potrzebny na wykonanie tego transferu.

00:01:38.670 --> 00:01:44.460
I staje się to jeszcze ważniejsze, gdy weźmiemy pod uwagę, że przeciętna strona internetowa zawiera ponad 100

00:01:44.760 --> 00:01:46.420
żądań do pełnego załadowania.

00:01:46.560 --> 00:01:49.250
Tak, ta liczba brzmi niedorzecznie, ale jest prawdziwa.

00:01:50.030 --> 00:01:58.160
Wreszcie trzecia, możemy poprawić przetwarzanie wykonywane na zapleczu lub z powrotem w przetwarzaniu potrzebnego czasu

00:01:58.160 --> 00:02:05.750
serwerowi sieciowemu, aby załadować dane z bazy danych, a może nawet złożyć stronę internetową,

00:02:05.750 --> 00:02:07.680
zanim ją wyśle.

00:02:07.700 --> 00:02:13.460
Teraz, aby nasza strona internetowa była jak najszybsza, możemy ulepszyć coś we wszystkich trzech sekcjach.

00:02:13.550 --> 00:02:14.850
Więc co możemy zrobić.

00:02:15.320 --> 00:02:22.640
Zanim wskoczymy do rzeczy, chcę Cię tam ostrzec i znaleźć sposób na zoptymalizowanie witryny

00:02:22.640 --> 00:02:23.700
lub aplikacji.

00:02:23.720 --> 00:02:29.990
Jedną rzeczą, o której chcemy pamiętać, jest to, że chcemy myśleć jak starszy programista.

00:02:30.350 --> 00:02:31.290
Co to znaczy.

00:02:32.080 --> 00:02:39.130
Oznacza to, że zawsze koncentrujesz się na problemie i znajdujesz rozwiązanie, które rozwiązuje ten problem w najbardziej

00:02:39.580 --> 00:02:41.450
efektywny i wartościowy sposób.

00:02:41.620 --> 00:02:47.590
Jeśli optymalizujesz swoją witrynę, ale nie wiesz nawet, co ją spowalnia, będziesz

00:02:47.590 --> 00:02:54.430
mieć numery porównania lub testy porównawcze, aby sprawdzić, czy Twoje optymalizacje rzeczywiście poprawiły Twoją szybkość.

00:02:54.910 --> 00:02:56.920
Więc marnujesz czas.

00:02:58.010 --> 00:03:00.650
To właśnie tutaj zamierzamy zrobić w tym kursie.

00:03:00.650 --> 00:03:06.980
Skoncentrujemy się na dużych przedmiotach biletowych, głównych usprawnieniach wydajności, które poprawiają 90 procent prędkości

00:03:07.070 --> 00:03:08.390
twojego internetu.

00:03:09.170 --> 00:03:13.700
Skoncentruj się na tym, a będziesz daleko przed większością ludzi.

00:03:13.730 --> 00:03:15.880
Rzućmy okiem na to, czego się nauczymy.

00:03:16.770 --> 00:03:22.950
W tym kursie omówimy wszystkie te tematy, od przedniego do tylnego końca,

00:03:22.950 --> 00:03:27.430
i mają z nimi trochę fajnych logotypów.

00:03:27.630 --> 00:03:34.020
I to jest dużo, ale pod koniec kursu obiecuję, że poczujesz się dobrze z każdym z nich

00:03:34.050 --> 00:03:38.420
i pokażę ci, jak możesz je zaimplementować w swoim kodzie.

00:03:39.350 --> 00:03:47.120
Jednak, aby rozpocząć tę prostą i przyjemną dla tej sekcji, przynajmniej część

00:03:47.120 --> 00:03:56.620
pierwsza sekcji wydajności skupiamy się na części do transferu, jak również na krytycznej ścieżce renderowania.

00:03:56.780 --> 00:04:02.810
Następnie, w części drugiej, przedstawimy ponownie scenariusz, a my porozmawiamy o pisaniu zoptymalizowanego kodu i

00:04:02.810 --> 00:04:04.420
progresywnych aplikacji internetowych.

00:04:04.430 --> 00:04:10.640
I wreszcie w trzeciej części omówimy kilka ekscytujących rzeczy, które możemy zrobić na zapleczu,

00:04:11.270 --> 00:04:14.080
aby poprawić wydajność i skalę.

00:04:14.160 --> 00:04:20.070
Tak jak powiedziałem pod koniec, ten stół będzie miał sens i możesz nazwać

00:04:20.070 --> 00:04:21.270
się ninja.

00:04:21.270 --> 00:04:22.530
To ciekawy temat.

00:04:22.530 --> 00:04:24.300
Jestem bardzo podekscytowany, aby się w to wciągnąć.

00:04:25.180 --> 00:04:29.300
Zacznijmy od sekcji transferu sieciowego i następnego wideo.

00:04:30.300 --> 00:04:31.890
Zobacz na tym jednym Buh-Bye.