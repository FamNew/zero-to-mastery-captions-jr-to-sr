WEBVTT

00:00:01.140 --> 00:00:02.580
Bine ai revenit.

00:00:02.580 --> 00:00:09.510
Am vrut să iau o secundă aici înainte să continuăm cu testarea prietenilor noștri de tip robo pentru a trece peste ceea ce

00:00:09.510 --> 00:00:13.250
am învățat din diapozitivele noastre și cum are totul sens acum.

00:00:14.140 --> 00:00:20.530
Am aflat că acum avem doar ceea ce putem instala ceea ce ne oferă un cadru de testare

00:00:20.530 --> 00:00:29.650
pe care putem rula teste și acest lucru vine de asemenea cu o bibliotecă de afirmații în care putem folosi punctul xpect să fie egal sau să

00:00:30.100 --> 00:00:38.860
aibă sau toate aceste lucruri că putem face ceea ce am văzut în foaia de înșelăciune pentru a afirma ceva pentru a ne asigura că

00:00:38.950 --> 00:00:41.640
acest lucru este egal cu acest lucru.

00:00:41.890 --> 00:00:49.030
Și apoi am văzut că tocmai vine un test de alergător pe care am reușit să-l executăm și a

00:00:49.180 --> 00:00:50.920
văzut-o în terminalul meu.

00:00:50.980 --> 00:00:58.110
Am întotdeauna acele teste care rulează și verifică că mă asigur că lucrurile mereu trec.

00:00:58.120 --> 00:01:04.210
De asemenea, am văzut că avem funcții de batjocură pe care le putem folosi.

00:01:04.290 --> 00:01:12.630
Am văzut că în exemplul nostru în care am construit API-urile noastre de război, unde am primit toți acei oameni că am putea bate joc

00:01:12.930 --> 00:01:19.660
funcția și să vă asigurați că a fost numit din nou ceva care vine cu doar semn pe este unul

00:01:19.660 --> 00:01:24.110
popular, care funcționează foarte foarte asemănător pe care o veți vedea și voi.

00:01:24.130 --> 00:01:31.950
Apoi, în cele din urmă, am văzut că putem face o acoperire a codurilor prin rularea cu bordul liniei de probă a panoului de probă și

00:01:32.470 --> 00:01:36.940
ne oferă o acoperire a locurilor în care avem teste și unde nu avem.

00:01:36.940 --> 00:01:38.730
Pentru ca noi să putem îmbunătăți aplicația noastră.

00:01:38.980 --> 00:01:43.010
Ți-am spus că asta are sens și că nu am terminat încă.

00:01:43.030 --> 00:01:53.440
Am văzut că putem testa aplicația noastră programabil, dar dacă avem nevoie de timp pentru a utiliza un API, avem cele trei opțiuni pe care le

00:01:53.440 --> 00:01:59.920
putem folosi Daun-ul actual, putem folosi ceva de genul "puppeteer" pentru un browser fără cap

00:02:00.190 --> 00:02:08.540
sau ceva de genul jazz dom. folosindu-l pe Muntele de redare a unei enzime pe care o putem configura, de asemenea.

00:02:08.540 --> 00:02:09.340
Din nou acolo.

00:02:09.400 --> 00:02:17.320
Această configurare este destul de simplă și o puteți verifica pe documentația enzimei Oh yeah și am învățat și

00:02:17.320 --> 00:02:18.480
că reacționăm.

00:02:18.490 --> 00:02:23.280
Putem folosi testarea enzimelor și instantaneelor ​​pentru a face testele noastre super super ușor.

00:02:23.330 --> 00:02:30.390
Din nou, un alt motiv pe care îl iubesc folosind doar în special cu re-act de proiecte, care este o pauză rapidă la

00:02:30.390 --> 00:02:30.810
codificare.

00:02:30.810 --> 00:02:33.870
Mergem în următorul videoclip și probabil unul.