WEBVTT

00:00:01.970 --> 00:00:06.420
Și întâmpinați-vă bine că este timpul să implementați în sfârșit o divizare a codului.

00:00:06.830 --> 00:00:08.480
Să aruncăm o privire la fișierele noastre.

00:00:09.560 --> 00:00:16.870
Pentru a folosi divizarea codului Trebuie să învățăm o nouă sintaxă, deși nu este o sintaxă nouă.

00:00:16.970 --> 00:00:19.730
Dar este vorba de acest cuvânt cheie de import.

00:00:19.730 --> 00:00:24.050
De obicei, se află chiar în partea de sus a fișierelor cu aplicația de creare a re-actului.

00:00:24.110 --> 00:00:30.680
Dacă punem importul oriunde în interiorul codului nostru, astfel încât nu în partea de sus a fișierului va

00:00:31.550 --> 00:00:40.280
ști că acest NIE acest lucru este un import dinamic și ceea ce înseamnă asta este că voi importa numai atunci când acea bucată

00:00:40.280 --> 00:00:45.480
de cod este solicitat și acest lucru se întâmplă sub capota cu ce cale.

00:00:45.560 --> 00:00:53.700
Deci, prin folosirea importului, îi spunem în mod automat să se împartă codul, care este foarte frumos în acest moment.

00:00:54.170 --> 00:00:55.430
Să mergem la Doug.

00:00:55.460 --> 00:00:56.600
Da.

00:00:56.600 --> 00:01:03.870
Și pentru a începe cu divizarea codului acum aici, în Brender cu divizarea codului.

00:01:03.990 --> 00:01:05.430
Să comentăm acest lucru.

00:01:05.490 --> 00:01:17.920
Vrem ceva diferit, cu divizarea codului, putem face acest lucru în mod ideal, dacă această rută de date

00:01:19.690 --> 00:01:22.170
indică pagina 1.

00:01:22.360 --> 00:01:32.520
Vom reveni la pagina 1 pe schimbarea rutei, egalând cu Daut pe schimbarea rutei.

00:01:32.530 --> 00:01:33.160
In regula.

00:01:33.160 --> 00:01:39.580
Aceasta nu pare diferită și asta pentru că este exact aceeași, ci pentru că aceasta este pagina

00:01:39.580 --> 00:01:40.200
implicită.

00:01:40.330 --> 00:01:41.710
E in regula.

00:01:41.710 --> 00:01:43.910
Următoarea parte este diferită.

00:01:43.990 --> 00:01:45.250
Putem

00:01:47.600 --> 00:02:06.040
spune altceva să returnați această componentă punct DOT pe vehiculele de schimb de drumuri pentru a începe schimbarea Sfântului Moli ce sa întâmplat.

00:02:06.140 --> 00:02:09.170
Este chiar permis acest lucru.

00:02:09.640 --> 00:02:17.230
Mă voi întoarce la asta, dar pentru moment, rețineți că tot ceea ce facem este să spunem doar

00:02:17.230 --> 00:02:25.080
Rander prima pagină dacă traseul este altceva decât Page 1, atunci trebuie să facem un fel de afacere amuzantă aici.

00:02:25.400 --> 00:02:26.970
Și lasă-mă să închid asta.

00:02:27.720 --> 00:02:34.200
Acum, mai întâi de toate, vedem că există o componentă de stat DOT de unde vine asta.

00:02:34.500 --> 00:02:36.160
Ei bine, o creăm.

00:02:36.300 --> 00:02:46.690
Spunem că acum avem o componentă numită stare și această componentă va face acum ph 2 sau 3 pentru noi și pentru

00:02:46.710 --> 00:02:55.290
moment am putea să o lăsăm ca un șir gol deoarece nu am încărcat încă pagina 2 sau

00:02:55.290 --> 00:02:56.620
patiseria încă.

00:02:57.090 --> 00:03:06.440
Acum, pe schimbarea rândului acesta este locul unde facem ceva diferit, fără divizare a codului.

00:03:06.550 --> 00:03:11.110
Tocmai am avut acest lucru, dar cu divizarea codului începem

00:03:16.390 --> 00:03:19.270
să folosim acest import dinamic.

00:03:19.300 --> 00:03:32.070
V-am spus că vom avea aceeași logică dacă traseul este egal cu pagina 1 din această stare de gândire bine, doar

00:03:32.070 --> 00:03:42.550
că avem un traseu egal cu repped deoarece pentru Page 1 noi doar vrem să păstrăm totul

00:03:42.700 --> 00:03:50.000
la fel ca și noi celelalte două, deși vom importa dinamic.

00:03:50.320 --> 00:04:05.240
Vom avea un traseu care face apel la rută și aici, pentru că nu vom avea prea mult acces la noi, pentru că

00:04:05.240 --> 00:04:12.050
nu o vom încărca, de fapt, nu vom importa nimic

00:04:12.050 --> 00:04:13.600
din acestea.

00:04:13.690 --> 00:04:20.920
Le vom importa aici dinamic când ajungem la această linie de javascript, deoarece aplicația noastră rulează în

00:04:20.920 --> 00:04:22.050
browserul nostru.

00:04:22.060 --> 00:04:26.340
Atunci când vrem să le importăm sau să le încărcăm.

00:04:26.420 --> 00:04:29.120
Vom spune import și, prin modul în

00:04:32.780 --> 00:04:38.660
care acest lucru funcționează doar din cauza pachetului umed și a modului în care lucrurile sunt stabilite.

00:04:38.660 --> 00:04:44.750
Dacă încercați să faceți acest lucru în doar javascript simplu vechi va arunca o eroare, deoarece ei nu înțeleg ceea

00:04:44.750 --> 00:04:46.180
ce încercați să faceți.

00:04:46.190 --> 00:04:54.660
Vom spune bine că vom încărca pagina de componente.

00:04:54.820 --> 00:04:59.680
Deci, vedeți că am schimbat importul aici pentru a importa aici.

00:05:01.910 --> 00:05:05.770
Și acesta este asincron.

00:05:05.880 --> 00:05:10.320
Asta înseamnă că întoarce o promisiune.

00:05:10.320 --> 00:05:20.440
Deci, putem folosi punctul apoi pentru a spune ce este această pagină a fost de import a fost descărcat.

00:05:20.640 --> 00:05:33.480
Apoi primim pagina la componentă și cu această pagină primită la componentă putem acum seta această stare punct set pentru

00:05:33.930 --> 00:05:46.650
a avea traseul de traseu pentru că este doar pagina 2, dar, de asemenea, să actualizeze starea componentă pe care

00:05:46.650 --> 00:05:51.330
o avem aici pentru a egala pagina.

00:05:51.330 --> 00:05:58.130
Deci, acum avem acces la pagina la component prin starea de start.

00:05:58.170 --> 00:06:02.240
Știu că pare puțin ciudat, dar este doar ceva la care trebuie să te obișnuiești.

00:06:02.550 --> 00:06:04.600
Apropo, acest lucru ar putea fi și nul.

00:06:04.620 --> 00:06:06.450
Dar, pentru moment, șirul gol este bine.

00:06:06.450 --> 00:06:09.230
Nu ne vom îngrijora prea mult.

00:06:09.330 --> 00:06:16.140
Acum avem o pagină prea accesibilă pentru noi, pentru că dacă ruta este pagina

00:06:16.140 --> 00:06:25.480
a doua, vom importa și descărca componenta lipită, apoi vom primi componenta respectivă și o vom actualiza la starea noastră

00:06:25.510 --> 00:06:26.140
actuală.

00:06:26.140 --> 00:06:27.460
Acest lucru are dreptate.

00:06:27.460 --> 00:06:34.990
Pur și simplu spunem că accesăm această componentă DOT de tip punct și suntem

00:06:34.990 --> 00:06:46.290
capabili să facem această sintaxă amuzantă care folosește GSX, deoarece această componentă punct-stare este o componentă Riak la care se află pagina.

00:06:46.550 --> 00:06:49.520
Știu când oamenii văd asta mai întâi că au cu adevărat un timp greu cu asta.

00:06:49.520 --> 00:06:52.370
Îți voi arăta cum poți mai curăța mai târziu.

00:06:52.370 --> 00:06:56.850
Dar vreau să vă arăt într-adevăr acest punct că noi redăm doar această componentă.

00:06:57.290 --> 00:06:59.410
Să terminăm asta.

00:06:59.560 --> 00:07:05.590
Să creăm o altă declarație LCF și de această dată voi copia și lipi aici.

00:07:08.520 --> 00:07:13.580
Și vom face pagina 3 și acest lucru se va încheia pentru pagina 3.

00:07:13.620 --> 00:07:17.630
Vom lua componenta de patiserie și o vom încărca aici.

00:07:18.630 --> 00:07:21.110
Acum asta va merge.

00:07:21.150 --> 00:07:26.180
Să vedem că nu am nicio eroare aici.

00:07:26.310 --> 00:07:30.570
Dacă mă întorc la browser și ieșesc.

00:07:30.640 --> 00:07:35.950
De fapt, hai să păstrăm consola și fac clic.

00:07:36.550 --> 00:07:42.910
Am o eroare și nu reușim să executăm crearea de alimente pe document.

00:07:42.960 --> 00:07:47.900
E o eroare foarte confuză, nu-i așa?

00:07:48.180 --> 00:07:54.920
Ei bine, să consolăm legea aici pentru a vedea ce se întâmplă ceea ce se întâmplă de fapt, ceea ce este pagina 2.

00:07:55.050 --> 00:07:56.650
Este o componentă așa cum am spus.

00:07:57.000 --> 00:07:58.450
Adică ar trebui să aibă dreptate.

00:07:58.830 --> 00:08:08.870
Ei bine, haideți să consolăm pagina de jurnal pentru a salva clic pe pagina 2 și în regulă am primit aceste

00:08:08.870 --> 00:08:09.420
erori.

00:08:09.440 --> 00:08:18.500
Dar vedeți aici că desprind componentul, dar vedeți că pare ciudat.

00:08:18.600 --> 00:08:26.890
Componenta este de fapt sub proprietatea implicită și aici stă pagina noastră.

00:08:26.890 --> 00:08:34.730
Acesta este un mic om de stiinta pe care tocmai trebuie sa il obisnuiesti, dar modul in care

00:08:35.750 --> 00:08:43.790
accesezi componenta pentru a putea accesa aceasta componenta de stare si reactioneaza este doar sa spui Dot default si apoi

00:08:43.820 --> 00:08:46.130
sa ai aici Dot implicit.

00:08:46.130 --> 00:08:47.300
Acum hai să încercăm.

00:08:50.820 --> 00:08:59.620
Întoarceți-vă la pagina la 0 și încă mai am o eroare deoarece trebuie să eliminăm prima linie care folosește divizarea fără cod.

00:08:59.690 --> 00:09:03.310
Trebuie doar să schimbăm acest lucru și ruta noastră.

00:09:03.320 --> 00:09:10.620
Așadar, permiteți-mi să salvez această pagină înapoi pentru a privi la asta.

00:09:10.720 --> 00:09:12.690
Totul funcționează.

00:09:13.850 --> 00:09:16.630
Dar suntem de fapt codificați divizarea.

00:09:16.640 --> 00:09:18.920
Avem doar implementarea divizării codului.

00:09:19.190 --> 00:09:20.550
Să verificăm.

00:09:20.570 --> 00:09:22.510
Mă duc la fila Rețea.

00:09:22.580 --> 00:09:26.710
Voi clarifica acest lucru și voi reîmprospăta.

00:09:26.740 --> 00:09:27.070
In regula.

00:09:27.090 --> 00:09:29.490
Deci nimic nu sa schimbat până acum.

00:09:29.490 --> 00:09:31.330
Lasă-mă să fac asta puțin mai mare.

00:09:31.350 --> 00:09:33.880
Vom vedea fișierul js inclus.

00:09:34.110 --> 00:09:37.320
Când fac clic pe pagina 2, văd acest lucru

00:09:41.950 --> 00:09:43.540
în partea de jos.

00:09:43.540 --> 00:09:44.350
Lasă-mă să încerc din nou.

00:09:44.350 --> 00:09:45.950
Mă voi reîmprospăta din nou.

00:09:46.300 --> 00:09:47.780
Și o vedem pe Bondel.

00:09:48.430 --> 00:09:53.560
Voi clarifica acest lucru și voi vedea ce se întâmplă când fac clic pe pagina 2.

00:09:53.790 --> 00:09:59.720
Am făcut unul făcut Choctaws Jesus și dacă dau clic pe trei, am primit olandeză.

00:09:59.820 --> 00:10:04.280
J. S. E foarte cool.

00:10:04.280 --> 00:10:11.790
Și vedem aici dacă facem clic pe el, avem bucata noastră cu o grămadă de muncă înapoi,

00:10:12.390 --> 00:10:18.220
dar vedem, de asemenea, că în acest fișier avem pagina la componenta.

00:10:18.430 --> 00:10:21.600
Tocmai am implementat divizarea codului.

00:10:21.970 --> 00:10:28.720
Dacă ne întoarcem acum și ne întoarcem la pagină la pagina 1 nu se va reîncărca din

00:10:28.720 --> 00:10:38.410
nou deoarece au încărcat deja scripturile, dar în caz contrar când încărcăm pagina noastră de aplicație inițială la pagina 3, componenta nu face parte din

00:10:38.410 --> 00:10:41.730
acest fișier de bază de date .

00:10:41.860 --> 00:10:42.860
Cat de tare e asta.

00:10:45.080 --> 00:10:50.180
Tocmai am implementat divizarea codului pe cont propriu și destul de simplă.

00:10:50.180 --> 00:10:51.250
Are multe sensuri.

00:10:51.260 --> 00:10:57.590
Pur și simplu eliminăm importurile din partea de sus și le importăm numai atunci când avem nevoie

00:10:57.590 --> 00:11:03.960
de ele doar atunci când utilizatorul face clic pe un traseu de pagină pentru a fi foarte curat.

00:11:03.960 --> 00:11:07.860
Acum e un lucru care ți-a prins ochiul.

00:11:08.330 --> 00:11:09.870
Lasă-mă să îți arăt ceva.

00:11:10.220 --> 00:11:17.030
Voi închide acest lucru și voi rula construcția NPM.

00:11:17.640 --> 00:11:24.090
Și ceea ce face acest lucru este crearea reactivate creează un dosar construit gata pentru producție optimizat pentru tine,

00:11:24.330 --> 00:11:28.540
astfel încât să îl poți pune online pentru oameni pentru a vizita.

00:11:28.680 --> 00:11:36.540
Puteți vedea aici că într-adevăr vă arată dimensiunile fișierelor după care, prin modul în care este ceva despre care

00:11:36.540 --> 00:11:37.800
vom vorbi despre.

00:11:37.800 --> 00:11:45.580
Și în ultima parte a secțiunii de performanță vedem că avem un eseu principal care are javascript.

00:11:45.660 --> 00:11:55.140
Avem fișierul CSSA principal, dar apoi avem și aceste două lucruri cu bucata zero, iar o singură bucată și construcții umede

00:11:56.310 --> 00:12:01.320
sunt automat pentru dvs. pe baza importanței pe care o văd.

00:12:01.660 --> 00:12:13.130
Așadar, am reușit să scoatem de fapt acești octeți sau date din fișierul nostru principal, deoarece dacă un utilizator nu vizitează patiseria Pashtoon nu

00:12:13.130 --> 00:12:17.070
trebuie să trimitem javascriptul în felul lor.

00:12:18.410 --> 00:12:21.320
Foarte foarte rece.

00:12:21.330 --> 00:12:26.510
Acum a fost fragmentarea codului, dar de fapt există o modalitate mai bună de a face acest lucru.

00:12:26.580 --> 00:12:30.760
Și în următorul videoclip îți voi arăta cum o să văd asta.

00:12:31.070 --> 00:12:31.340
Dar prin.