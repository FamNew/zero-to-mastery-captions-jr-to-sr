WEBVTT

00:01.540 --> 00:06.550
Let's talk about the final type of test automation tests.

00:06.820 --> 00:10.370
Now you may also hear the term end to end testing.

00:10.570 --> 00:12.330
When it comes to automation tests.

00:12.550 --> 00:15.130
So keep that in mind automation tests.

00:15.280 --> 00:22.730
Like I said before are UI tests that are always running inside a browser or a browser like environment

00:23.670 --> 00:31.280
because the to simulate user behavior in these environments such as clicking typing scrolling.

00:31.440 --> 00:38.460
And finally the need to make sure that these scenarios actually work from the point of view of an end

00:38.460 --> 00:39.650
user.

00:39.660 --> 00:41.040
It's an important test Ray.

00:41.220 --> 00:48.850
If your checkout process has a bug the best way to probably tested is to actually go through that checkout

00:48.870 --> 00:53.400
flow and make sure that users can purchase whatever you're selling.

00:53.830 --> 01:00.450
Now in an ideal world we have automation tests everywhere and if any of them fail we know that our web

01:00.450 --> 01:01.350
app doesn't work.

01:02.490 --> 01:08.880
But it's important to remember that these tests are the hardest to set up.

01:08.910 --> 01:16.770
Imagine yourself creating an environment to run a test on different machines because users have different

01:16.890 --> 01:23.860
computers different devices different phones different browser types different versions.

01:23.910 --> 01:25.980
How can you really test for that.

01:25.980 --> 01:30.550
I mean you can but it's really really hard.

01:30.840 --> 01:36.650
And this is why there are so many services that provide automation testing for you.

01:36.680 --> 01:38.330
Here's an example of a few of them.

01:40.100 --> 01:40.570
Yup.

01:40.660 --> 01:47.880
These are just a few of them such as Nightwatch web driver I O test cafe nightmare Cypress.

01:47.890 --> 01:54.760
The list really goes on automation testing is something you usually only find at bigger companies that

01:54.760 --> 02:00.910
have the budget to really spend money on this because there are so many cases and they're so expensive

02:00.910 --> 02:07.320
to implement that some developers go their whole career without ever writing an automation test.

02:07.360 --> 02:10.380
But I still want to cover it because it is an important topic.

02:10.690 --> 02:12.210
Here's a quick lowdown though.

02:12.430 --> 02:20.120
If you just want to get started and not worry about cross browser and have all the tools in one probably

02:20.450 --> 02:22.480
test Skeff is your best choice.

02:22.720 --> 02:30.160
Or if you want the one that has the best documentation online all web driver IO is really great and

02:30.160 --> 02:38.320
if you want really simple ways to automate user actions or do something cool like web scraping while

02:38.410 --> 02:40.560
nightmare Deji is pretty good.

02:40.850 --> 02:47.980
Now the important thing with automation testing is that like the other name suggests and to ente testing

02:48.220 --> 02:56.510
you want to test the entire process of your UI and you might be thinking why do we get the machine to

02:56.510 --> 02:56.800
do it.

02:56.810 --> 03:01.430
Why can't we just hire people to test for us and do automation testing.

03:01.670 --> 03:09.380
And that happens many companies instead of writing these scripts simply hire people to do automation

03:09.380 --> 03:16.310
testing and at some companies you have people like testers that do this for you and make sure that the

03:16.310 --> 03:18.440
app works as intended.

03:19.400 --> 03:24.880
And there's pros and cons to both of these and that's something that it really depends on your company

03:25.120 --> 03:27.430
and your work environment.

03:27.430 --> 03:34.360
The main thing I want to suggest though is that we want to create two different testing processes one

03:34.750 --> 03:42.330
for a running unit tests and integration tests and a completely separate one to run these tests.

03:42.340 --> 03:44.200
The automation tests.

03:44.440 --> 03:51.700
That's because UI tests take a longer time especially if we worry about different browsers and different

03:51.700 --> 03:57.200
devices and they also cost a lot more money to run them repeatedly.

03:57.310 --> 04:04.870
So you'd want to run unit tests and integration tests often probably in your terminal as you're saving

04:05.170 --> 04:12.380
your changes to your code in your local environment and maybe run UI tests once a day or a couple of

04:12.380 --> 04:20.730
times a week or maybe just before you merge into the master branch before you release it to production.

04:20.740 --> 04:24.370
For now though that's for automation testing.

04:24.480 --> 04:25.960
I'll see in the next one.

04:26.120 --> 04:26.310
Probably.
