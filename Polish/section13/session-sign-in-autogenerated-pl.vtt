WEBVTT

00:00:01.130 --> 00:00:02.710
Odprowadź ich z powrotem.

00:00:02.750 --> 00:00:08.190
Zastosujmy teraz ten pasek, w którym faktycznie otrzymujemy profil z tyłu.

00:00:08.210 --> 00:00:10.570
Teraz powinno to być dość proste.

00:00:10.610 --> 00:00:19.640
Musimy tylko powiedzieć, że dopóki posiadamy dane z identyfikatorem, możemy zrobić teraz lub pobrać

00:00:20.180 --> 00:00:33.190
wywołanie do naszego punktu AM, ale ten punkt końcowy będzie teraz punktem końcowym profilu, a ten punkt końcowy profilu otrzyma

00:00:33.190 --> 00:00:36.870
pomysł użytkownika, który właśnie dostaliśmy.

00:00:36.970 --> 00:00:40.400
To jest dane, które ID będzie w naszym przypadku.

00:00:40.440 --> 00:00:49.040
Nasz przykładowy użytkownik A, który jest tym pomysłem i jeszcze raz

00:00:49.040 --> 00:00:56.930
musimy podać mu drugie parametry, które zamierzam skopiować, co wcześniej.

00:00:57.070 --> 00:00:59.460
To będzie żądanie GET.

00:00:59.710 --> 00:01:08.800
Tokin ma być tokenem, który mamy już stąd iz prośbami o profil, jeśli wszystko pójdzie dobrze,

00:01:08.800 --> 00:01:13.840
musimy zrobić naszą odpowiedź Jaison, a wtedy otrzymamy rzeczywistą

00:01:19.020 --> 00:01:22.290
I tę informację o

00:01:25.460 --> 00:01:29.710
użytkowniku, dopóki będą jelito. Punkt końcowy działa.

00:01:29.870 --> 00:01:31.680
Możemy zrobić trochę czeku.

00:01:31.730 --> 00:01:37.780
Powiedzmy teraz e-mail użytkownika i użytkownika, jeśli to się sprawdza, to

00:01:41.010 --> 00:01:48.450
po prostu wykonaj funkcję użytkownika obciążenia, ponieważ pamiętamy o funkcji użytkownika obciążenia, a ona

00:01:48.450 --> 00:01:57.870
po prostu odbiera dane stąd, więc powiemy, załadować dane użytkownika, a także chcemy wywołać po zmianie trasy, aby

00:01:58.020 --> 00:01:59.680
wrócić do domu.

00:02:00.950 --> 00:02:04.560
Tak jak mamy w składniku seinen.

00:02:04.610 --> 00:02:06.310
Skopiuj to.

00:02:06.620 --> 00:02:09.870
Zamierzamy wezwać zmianę trasy, aby wrócić do domu.

00:02:10.980 --> 00:02:17.250
Teraz, zapiszmy, wróć do naszej aplikacji, upewnij się, że żaden z naszych tokenów nie istnieje.

00:02:17.250 --> 00:02:17.570
W porządku.

00:02:17.580 --> 00:02:27.070
Wszystko jest jasne i zamierzam zalogować się za pomocą kropki. com i inny znak, a ja wciąż

00:02:27.070 --> 00:02:28.460
go odnajduję.

00:02:28.720 --> 00:02:30.160
Sprawdźmy to.

00:02:30.880 --> 00:02:37.020
Cóż, głupio mi, to nie powinny być dane, to powinien być użytkownik.

00:02:37.180 --> 00:02:40.880
Powiedzmy, że znowu wróć.

00:02:41.080 --> 00:02:48.600
Upewnijmy się, że usuwamy tokeny i otrzymujemy nasz błąd tutaj, ponieważ to nie jest rekwizyt na zmianę

00:02:48.600 --> 00:02:50.840
trasy jest tak naprawdę metodą.

00:02:51.000 --> 00:02:55.360
Uważam, że mamy tutaj składnik aplikacji.

00:02:55.500 --> 00:03:00.990
Po prostu usuńmy uderzenie rekwizytów, wróćmy.

00:03:01.030 --> 00:03:08.070
Brak pamięci sesji i wymiana seinen.

00:03:08.350 --> 00:03:12.380
A jeśli wrócimy, wciąż będę niezdefiniowany.

00:03:12.380 --> 00:03:15.050
Zobaczmy, skąd faktycznie pochodzimy od użytkownika.

00:03:15.070 --> 00:03:16.800
Dlatego próbuję pocieszyć

00:03:19.750 --> 00:03:22.510
grupy użytkowników dziennika, a nie tego użytkownika.

00:03:22.630 --> 00:03:26.950
Zapiszmy i.

00:03:26.950 --> 00:03:27.250
W porządku.

00:03:27.250 --> 00:03:29.480
Więc to jest użytkownik, który otrzymujemy.

00:03:29.590 --> 00:03:32.170
I nagle działa.

00:03:32.170 --> 00:03:34.420
Być może musiałbym odświeżyć.

00:03:34.610 --> 00:03:34.860
DOBRZE.

00:03:34.870 --> 00:03:40.590
Dostaję więc adresy e-mail z nazwami identyfikatorów.

00:03:40.790 --> 00:03:44.220
Otrzymuję te informacje tak, jak tego oczekiwałem.

00:03:44.240 --> 00:03:46.850
Jest ładowany, jak widać tutaj.

00:03:48.030 --> 00:03:51.880
Po prostu wyloguj się ponownie i upewnij się, że wszystko działa.

00:03:53.130 --> 00:03:57.210
Chcesz odświeżyć się ponownie, ponieważ nie zaimplementowaliśmy funkcji wylogowania.

00:03:57.480 --> 00:03:58.520
Nasz token nadal tu jest.

00:03:58.590 --> 00:04:09.780
Tak więc, jak tylko odświeżę się, jestem zalogowany. Spróbuję jeszcze raz wypróbować ten znak.

00:04:10.210 --> 00:04:14.810
Kropka com, dzięki czemu otrzymujemy nasz token.

00:04:15.050 --> 00:04:16.680
Kiedy zdobędziemy token.

00:04:17.120 --> 00:04:18.970
W porządku, więc jest tu trochę logiki.

00:04:18.980 --> 00:04:24.220
Zaraz po odświeżeniu otrzymuję swój profil użytkownika.

00:04:24.510 --> 00:04:29.680
Ale gdy tylko się zaloguję, nie otrzymam profilu użytkownika, który powinien wywołać coś.

00:04:29.910 --> 00:04:30.420
Dobrze.

00:04:30.450 --> 00:04:36.320
Ponieważ nasza aplikacja obsługuje to, co działa dobrze.

00:04:36.360 --> 00:04:47.340
Jednak nie obsługujemy seinen poprawnie, ponieważ teraz użytkownik obciążenia i punkt te dane otrzymują tylko swój

00:04:47.340 --> 00:04:49.260
identyfikator użytkownika.

00:04:49.260 --> 00:04:54.520
I tutaj możemy zrobić trochę sztuczki z powodu działania nowego aktu.

00:04:54.540 --> 00:04:59.840
Pamiętaj, że za każdym razem, gdy aktualizujemy stan, reagujemy na Rieu.

00:05:00.210 --> 00:05:08.310
Tak więc właśnie wysyłamy obiekt danych, który ma ID użytkownika i sukces oraz

00:05:08.340 --> 00:05:19.920
token, ale teraz załaduj użytkownika, jeśli załadujemy użytkownika ma kilka różnych rzeczy i jest na tyle sposobów, że możesz to

00:05:19.920 --> 00:05:20.840
zrobić.

00:05:20.990 --> 00:05:23.570
Możesz zmienić tę funkcję użytkownika ładowania,

00:05:27.250 --> 00:05:30.630
więc tutaj jest kilka sposobów, aby to zrobić.

00:05:30.760 --> 00:05:35.950
Widać już, że robi się to trochę długo i niechlujnie, i możemy chcieć je

00:05:35.950 --> 00:05:43.120
ekstrapolować lub wydobyć z niego osobne funkcje, ale z uwagi na zwięzłość i tylko po to, żeby wszystko było w

00:05:43.390 --> 00:05:49.260
ruchu, zamierzam po prostu użyć tego samego żądanie, którego używamy tutaj, aby uzyskać ten profil użytkownika.

00:05:49.270 --> 00:05:56.000
Po otrzymaniu identyfikatora użytkownika zapiszę token uwierzytelniania.

00:05:56.530 --> 00:06:01.520
Zanim załaduję użytkownika i zmienię trasę, usuwam to.

00:06:01.780 --> 00:06:04.290
Zamierzam to skopiować i wkleić.

00:06:04.330 --> 00:06:13.360
To pozwala nam usunąć małe instrukcje tutaj i nie musimy już sprawdzać instrukcji

00:06:13.370 --> 00:06:14.310
if.

00:06:21.910 --> 00:06:22.480
Proszę bardzo.

00:06:22.480 --> 00:06:29.560
Oszczędzamy automatyczną puszkę, a następnie wykonujemy szybkie połączenie, aby uzyskać profil, a

00:06:32.390 --> 00:06:39.640
gdy już to zrobimy, użyjemy nazwy użytkownika, aby załadować użytkownika i zmienić trasę.

00:06:39.800 --> 00:06:49.230
Zapiszmy i mamy tu trochę błędu, ponieważ na tokenach 42 linii powinien być token Daut danych.

00:06:49.480 --> 00:06:52.840
Więc token kropki danych.

00:06:52.870 --> 00:06:53.340
W porządku.

00:06:53.410 --> 00:06:54.530
Zapiszmy tutaj.

00:06:54.550 --> 00:07:00.930
Wróć i otworzę kartę Pro-Tools Network dla programistów lub kartę aplikacji.

00:07:00.940 --> 00:07:02.710
Upewnij się, że wyczyściliśmy nasze miejsce.

00:07:02.740 --> 00:07:08.830
Zamierzam odświeżyć, co spowoduje, że wejdziemy na stronę po drodze, ponieważ

00:07:08.830 --> 00:07:13.450
nie mamy znaku tokena z naszym dobrym przyjacielem.

00:07:13.460 --> 00:07:16.290
Mamy trochę niezbyt złą prośbę.

00:07:17.830 --> 00:07:20.440
Dostajemy użytkownika.

00:07:20.660 --> 00:07:26.880
A to dlatego, że dane kropka I. RE. powinien być identyfikator użytkownika danych.

00:07:26.900 --> 00:07:31.940
Znowu jest to kolejny świetny przykład, dlaczego możesz chcieć mieć jedną funkcję między app i

00:07:31.950 --> 00:07:36.590
seinen, która robi to samo i możesz użyć tego zarówno w obie strony.

00:07:36.590 --> 00:07:43.440
I zamiast mieć te przypadki, i niech to znowu da.

00:07:43.610 --> 00:07:44.720
Usuńmy

00:07:47.800 --> 00:07:56.430
odświeżenie tokena, co powoduje, że wylogowujemy się i dajemy to innym.

00:07:56.430 --> 00:08:00.140
Dobra, dostaniemy token.

00:08:00.360 --> 00:08:04.510
Ale ten użytkownik nie jest funkcją, ponieważ.

00:08:04.610 --> 00:08:06.300
To powinno być zbiory.

00:08:06.390 --> 00:08:11.290
Oto kilka drobnych poprawek, które musimy wprowadzić.

00:08:11.300 --> 00:08:12.140
W porządku.

00:08:12.140 --> 00:08:13.300
Ostatni raz.

00:08:13.370 --> 00:08:15.720
To musi zadziałać.

00:08:15.860 --> 00:08:24.390
Ale to jest życie programisty, tylko kosztowne debugowanie kodu i patrzenie na to, że jesteśmy zalogowani we

00:08:24.480 --> 00:08:25.120
wszystkim.

00:08:25.260 --> 00:08:33.030
Za każdym razem, gdy odświeżam Teraz spójrz na to, że jestem w stanie natychmiast pobrać mojego użytkownika, więc nie muszę się

00:08:33.030 --> 00:08:33.630
logować.

00:08:33.630 --> 00:08:35.470
To bardzo miłe.

00:08:35.700 --> 00:08:44.150
Ale jeśli kiedykolwiek usunę mój token lub mój token wygasł lub został odwołany i muszę odświeżyć.

00:08:44.150 --> 00:08:44.990
Przepraszam szefie.

00:08:45.080 --> 00:08:49.110
Nie możesz powiedzieć, że nie masz dostępu do tych informacji.

00:08:49.460 --> 00:08:51.650
Jakie to jest świetne.

00:08:51.650 --> 00:08:54.920
Po prostu przejrzyjmy kod nieco, aby upewnić się, że wszystko jest jasne.

00:08:55.200 --> 00:08:58.250
Zmieniono apt tak na komponencie.

00:08:58.340 --> 00:09:01.890
Po prostu sprawdzamy token, jeśli jest token.

00:09:02.000 --> 00:09:09.200
Będziemy mieć tylko znak, aby uzyskać nasz identyfikator z naszej bazy danych.

00:09:09.440 --> 00:09:18.020
Po uzyskaniu tego identyfikatora mamy dostęp do żądania identyfikatora profilu, a następnie otrzymujemy naszego użytkownika i możemy załadować

00:09:18.020 --> 00:09:26.150
naszego użytkownika i zmienić trasę do domu w przypadku podpisania, gdy nie mamy sesji lub nie

00:09:26.150 --> 00:09:27.250
mamy znak.

00:09:27.590 --> 00:09:35.900
W takim przypadku musimy zalogować się za pomocą naszego adresu e-mail i hasła uzyskać nasz token i nasz identyfikator, który

00:09:36.800 --> 00:09:45.830
zapisaliśmy token, a następnie w końcu możemy uzyskać profil, który mamy teraz robi to wszystko było miłe, ale wciąż jest jeden

00:09:45.830 --> 00:09:46.550
problem.

00:09:46.550 --> 00:09:53.630
Ostatnią rzeczą, którą musimy zrobić, byłoby nie byłoby miłe, gdybyśmy mieli na uwadze wszystkie

00:09:53.630 --> 00:09:55.430
te punkty końcowe.

00:09:55.550 --> 00:10:01.890
Wspominaliśmy już przed oprogramowaniem pośredniczącym, że zanim żądanie zostanie odebrane, możliwe, że rejestr

00:10:01.910 --> 00:10:04.830
ręczny uzyskuje aktualizację profilu obsługi.

00:10:04.910 --> 00:10:11.900
Mamy jakieś oprogramowanie pośredniczące, które mówi, że musisz wymagać, aby po prostu sprawdzało autoryzację Hattera i tokena,

00:10:12.700 --> 00:10:18.680
jeśli użytkownik go posiada, wtedy możesz przejść dalej i kontynuować i zaktualizować swój profil.

00:10:18.680 --> 00:10:20.960
W przeciwnym razie po prostu pomiń cały proces.

00:10:20.960 --> 00:10:24.330
Ta cała logika, którą wyrzucasz.

00:10:24.350 --> 00:10:30.020
W następnym filmie zamierzamy zakończyć wszystko i zaimplementować to, co zobaczymy w następnym.

00:10:30.080 --> 00:10:30.270
Konstabl.